<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Github+PicGo+Typora搭建个人图床</title>
      <link href="/2021/05/30/Github-PicGo-Typora%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2021/05/30/Github-PicGo-Typora%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="为什么搭建图床"><a href="#为什么搭建图床" class="headerlink" title="为什么搭建图床"></a>为什么搭建图床</h2><ol><li>为了方便以后对图片资源进行统一管理。</li><li>博客网站大量引用外部图片或上传大量图片，导致访问网站时性能下降，采用CDN加速图片加载，提高博客网站性能。</li><li>免费的图床很多，比如聚合图床就很不错，但是有些重要的图片资源还是要保存在个人仓库中，以防万一服务商跑路导致数据丢失（虽然概率很低，但也不是不可能）。</li><li>本地图片资源越来越多，存储空间有限，上传到Github既可以备份数据，又能节约空间，难道不香吗？</li><li>成本为零，搭建过程简单。</li></ol><h2 id="使用GitHub存储图片的优缺点"><a href="#使用GitHub存储图片的优缺点" class="headerlink" title="使用GitHub存储图片的优缺点"></a>使用GitHub存储图片的优缺点</h2><p>优点：</p><ol><li>免费、稳定（不会突然跑路）。</li></ol><p>缺点：</p><ol><li>每个仓库只有1GB容量，不过可以通过建立多个仓库解决。</li><li>上传的图片是公开的，别人可以通过访问你的GitHub仓库看到。</li></ol><h2 id="配置Github步骤"><a href="#配置Github步骤" class="headerlink" title="配置Github步骤"></a>配置Github步骤</h2><h3 id="1-注册github账户（不必赘述）"><a href="#1-注册github账户（不必赘述）" class="headerlink" title="1.注册github账户（不必赘述）"></a>1.注册github账户（不必赘述）</h3><h3 id="2-新建仓库"><a href="#2-新建仓库" class="headerlink" title="2.新建仓库"></a>2.新建仓库</h3><p>点击 git 主页右上角的 + 创建 New repository；<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/tuchuang1.jpg"  alt="img"></p><h3 id="3-创建-token-并复制保存"><a href="#3-创建-token-并复制保存" class="headerlink" title="3.创建 token 并复制保存"></a>3.创建 token 并复制保存</h3><p>点击右上角头像，然后进入设置Settings;<br>点击”Personal access tokens”按钮;<br>点击generate new token 按钮;</p><p>填 description（也是随心填），勾选复选框 repo ，接着到页面底部 Generate token 就完成了；<br><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/tuchuang2.png"  alt="img"></p><p>注：创建成功后，会生成一串<code>token</code>，这串<code>token</code>之后不会再显示，所以第一次看到的时候，可以建个文本文件好好保存，忘记了只有重新生成，每次都不一样。</p><h2 id="下载安装PicGo"><a href="#下载安装PicGo" class="headerlink" title="下载安装PicGo"></a>下载安装PicGo</h2><h3 id="1-下载-amp-安装"><a href="#1-下载-amp-安装" class="headerlink" title="1.下载&amp;安装"></a>1.下载&amp;安装</h3><p>git地址：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p><h3 id="2-配置图床"><a href="#2-配置图床" class="headerlink" title="2. 配置图床"></a>2. 配置图床</h3><p>仓库名 即你的仓库名<br>分支名 默认 master</p><p>Token 就是刚刚复制的那一串字符<br>存储路径 这个可以填也可以不填，填了的话图片就上传到仓库名下的子目录<br>域名 <a href="https://raw.githubusercontent.com/[username]/[仓库名]/master" target="_blank" rel="noopener">https://raw.githubusercontent.com/[username]/[仓库名]/master</a></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/image-20210530193350586.png"  alt="image-20210530193350586"></p><p>注意：图中的域名为什么是cdn开头，后文要说。</p><p>注意：分支原来默认是master，但从2020.10.01开始，github的默认分支名变更为main。若是创建仓库时使用的分支名是main,设定自定义域名：<a href="https://cdn.jsdelivr.net/gh/[github用户名]/[仓库名]@main。此处的分支一定要填写@main，否则默认使用master分支。而现在github创建的默认分支名为main，如果不指定，则会出现图片不能上传的情况。" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/[github用户名]/[仓库名]@main。此处的分支一定要填写@main，否则默认使用master分支。而现在github创建的默认分支名为main，如果不指定，则会出现图片不能上传的情况。</a></p><h2 id="进阶使用教程"><a href="#进阶使用教程" class="headerlink" title="进阶使用教程"></a>进阶使用教程</h2><h3 id="1-使用cdn解决GitHub国内访问缓慢的问题"><a href="#1-使用cdn解决GitHub国内访问缓慢的问题" class="headerlink" title="1.使用cdn解决GitHub国内访问缓慢的问题"></a>1.使用cdn解决GitHub国内访问缓慢的问题</h3><p>使用jsDelivr CDN 加速访问（jsDelivr 是一个免费开源的 CDN 解决方案）</p><p>将自定义域名设置为【<a href="https://cdn.jsdelivr.net/gh/用户名/图床仓库名" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a> 】。</p><h3 id="2-使用githubPlus替代PicGo自带GitHub上传工具"><a href="#2-使用githubPlus替代PicGo自带GitHub上传工具" class="headerlink" title="2.使用githubPlus替代PicGo自带GitHub上传工具"></a>2.使用githubPlus替代PicGo自带GitHub上传工具</h3><p>PicGo自带的GitHub上传工具，不能同步删除GitHub仓库中的图片，这会导致我们在上传了不需要的图片后，产生冗余资源（强迫症表示很难受），因此，我们需要利用PicGo强大的插件功能实现同步操作相册和仓库图片</p><p>1.点击PicGo左侧菜单最下方的插件设置，在搜索框中输入github-plus</p><p>2.点击灰色的安装按钮</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/image-20210530193636369.png"  alt="image-20210530193636369"></p><p>3.安装完成后在左侧菜单找到github-plus，设置方法和Github图床设置基本一致。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/image-20210530193756496.png"  alt="image-20210530193756496"></p><p>4.别忘了设置后保存设置并点击“设为默认图床”按钮。</p><h2 id="MarkDown编辑器"><a href="#MarkDown编辑器" class="headerlink" title="MarkDown编辑器"></a>MarkDown编辑器</h2><p>使用MarkDown语法写文章，我使用的编辑器是typora，一款非常好用的编辑器。在一个编辑框内，编辑完成后，可以马上显示MarkDown语法效果。</p><p>并且Typora可以和PicGo联合在一起使用，当你在编辑器中插入、粘贴图片时，Typora+PicGo的组合方式，可以自动把图片上传至github保存。</p><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>可以访问typora下载地址进行下载【<a href="https://www.typora.io/】。" target="_blank" rel="noopener">https://www.typora.io/】。</a></p><p>下载完成后正常步骤安装即可。</p><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><p>在typora顶部菜单界面，选择“文件” - &gt; “偏好设置”，设置图片存储方式。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE.png"  alt="image-20210530195635571"></p><p>选择图片存储方式：上传图片。</p><p>上传服务：PicGo(app)</p><p>PicGo路径：picGo安装的地址</p><p>设置完成，点击“验证图片上传”，提示上传成功，即代表配置成功。</p><p>注意一点，typora图片验证中的端口，需要与picGo中的server设置内的端口一致，否则typora中不能正常上传。</p><p><strong>picGo监听端口设置</strong></p><p>选择“PicGo设置”–&gt;”设置server”</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/PicGo%E7%AB%AF%E5%8F%A3%E8%AE%BE%E7%BD%AE.png"  alt="image-20210530200329523"></p><p>【此处有坑】如果监听端口不是36677，则需要修改为36677。否则会出现picGo能正常上传图片，而typora上传图片失败的情况。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/panyongkang/MyImgBed/img/%E8%AE%BE%E7%BD%AE%E7%9B%91%E5%90%AC%E7%AB%AF%E5%8F%A3.png"  alt="image-20210530200500732"></p><p><strong>总结：</strong>Github+PicGo+Typora+CDN加速的搭建是最佳的搭配方式，加快了图片的访问速度，又解决了原来Typora文本编辑图片不便的问题，只需要复制粘贴即可上传到图床，自动生成链接地址，简直是完美！</p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床搭建 </tag>
            
            <tag> Github </tag>
            
            <tag> PicGo </tag>
            
            <tag> 教程笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVN入门笔记</title>
      <link href="/2021/05/23/SVN%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/05/23/SVN%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="svn的基本工作原理"><a href="#svn的基本工作原理" class="headerlink" title="svn的基本工作原理"></a>svn的基本工作原理</h2><p>SVN管理代码是在一台服务器上建立一个过程库，用于存放项目的文档、源码。用户在开发前，需要把过程库里的项目文件下载到本地，然后开发人员在本机电脑上进行开发修改。修改完成后用svn命令进行提交到过程库，也可以通过代码更新获取其他人的代码。</p><p> SVN的优点是可以记录每个文件的每一次修改更新记录，可以回退到到任意时刻的旧的版本，可以用来管理程序源码、其他文件类型（文本、视频、图片等等）</p><h2 id="SVN常用命令"><a href="#SVN常用命令" class="headerlink" title="SVN常用命令"></a>SVN常用命令</h2><h3 id="检出"><a href="#检出" class="headerlink" title="检出"></a>检出</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn checkout(co) svn地址(http或者svn协议) [本地目录] --username 用户名 [--password 密码]</span><br></pre></td></tr></table></figure><p>注：如果不带–password 参数传输密码的话，会提示输入密码，建议不要用明文的–password 选项。</p><p>不指定本地目录，则检出到当前目录下。</p><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn checkout http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;project &#x2F;project --username suvan</span><br></pre></td></tr></table></figure><h3 id="导出-导出一个干净的不带-svn文件夹的目录树"><a href="#导出-导出一个干净的不带-svn文件夹的目录树" class="headerlink" title="导出( 导出一个干净的不带.svn文件夹的目录树 )"></a>导出( 导出一个干净的不带.svn文件夹的目录树 )</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn export [-r 版本号] svn地址(http或者svn协议) [本地目录] --username 用户名</span><br><span class="line">svn export 本地检出的(即带有.svn文件夹的)目录 要导出的本地目录</span><br></pre></td></tr></table></figure><p>注：第一种从版本库导出干净工作目录树的形式是指定URL，如果指定了修订版本号，会导出相应的版本，如果没有指定修订版本，则会导出最新的，导出到指定位置。如果省略本地目录，URL的最后一部分会作为本地目录的名字。</p><p>第二种形式是指定本地检出的目录，所有的本地修改将会保留，但是不在版本控制下(即没提交的新文件，因为.svn文件夹里没有与之相关的信息记录)的文件不会拷贝。</p><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn export -r 168 http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;project &#x2F;project --username suvansvn export &#x2F;project &#x2F;newproject</span><br></pre></td></tr></table></figure><h3 id="添加新文件"><a href="#添加新文件" class="headerlink" title="添加新文件"></a>添加新文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">svn add 文件名</span><br><span class="line">#告知SVN服务器要添加文件了，然后提交文件</span><br><span class="line">svn commint(ci) -m &#39;增加新文件&#39;</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svn add new.file</span><br><span class="line">svn commit -m &#39;增加新文件&#39;</span><br><span class="line">svn add *.file #添加当前目录下所有的.file文件</span><br><span class="line">svn commit -m &#39;增加新文件&#39;</span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn commit(ci) -m &quot;提交的备注&quot; [-N] [--no-unlock] 文件名</span><br><span class="line">必须带上-m参数，参数可以为空，但是必须写上-m</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">svn commit -m &quot;提交当前目录下的全部在版本控制下的文件&quot;</span><br><span class="line">svn commit -m &quot;提交suvan.file&quot; suvan.file</span><br><span class="line">svn commit -m &quot;提交suvan.file&quot; -N --no-unlock test.php #保持锁用–no-unlock开关</span><br></pre></td></tr></table></figure><h3 id="更新文件"><a href="#更新文件" class="headerlink" title="更新文件"></a>更新文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn update</span><br><span class="line">#在已被版本控制的目录中执行</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svn update #默认将当前目录以及子目录下的所有文件都更新到最新版本</span><br><span class="line">svn update -r 200 suvan.file #将本地版本库中的suvan.file还原到200版本(revision)</span><br><span class="line">svn update suvan.file 更新到与服务器版本库相同版本。</span><br><span class="line">#提交的时候若提示冲突，需先 update 修改文件，然后svn resolved，最后再提交commit。</span><br></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svn delete(del, remove, rm) svn地址(http或者svn协议)  -m  &quot;删除备注信息文本&quot;</span><br><span class="line">或</span><br><span class="line">svn delete &#x2F;本地文件</span><br><span class="line">svn ci -m</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">svn delete http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;suvan.file -m &quot;删除suvan.file&quot;</span><br><span class="line">或</span><br><span class="line">svn delete suvan.file &amp;&amp; svn commit -m &#39;删除suvan.file&#39;</span><br></pre></td></tr></table></figure><h3 id="加锁-解锁"><a href="#加锁-解锁" class="headerlink" title="加锁/解锁"></a>加锁/解锁</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn lock -m &quot;加锁备注信息&quot; [--force] 文件名 </span><br><span class="line">svn unlock</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn lock -m &quot;加锁suvan.file&quot; suvan.file</span><br><span class="line">svn unlock suvan.file</span><br></pre></td></tr></table></figure><h3 id="比较差异"><a href="#比较差异" class="headerlink" title="比较差异"></a>比较差异</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn diff 文件名</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn diff suvan.file #将修改的文件与基础版本比较</span><br><span class="line">svn diff -r 200:201 suvan.file #对版本号200和版本号201 比较差异</span><br></pre></td></tr></table></figure><h3 id="查看文件或者目录状态"><a href="#查看文件或者目录状态" class="headerlink" title="查看文件或者目录状态"></a>查看文件或者目录状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">svn status(stat, st) 目录路径</span><br><span class="line">【?：不在svn的控制中； M：内容被修改；C：发生冲突；】</span><br><span class="line">svn status -v</span><br><span class="line">【第一列：当前版本号，第二列：修改后的版本号，第三列：修改人，第四列：修改的目录或文件】</span><br></pre></td></tr></table></figure><p>注：svn status、svn diff和 svn revert这三条命令在没有网络的情况下也可执行</p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn log 文件名</span><br></pre></td></tr></table></figure><p>​    可以指定多个 “-c” 或 “-r” 选项 (但是不允许同时使用 “-c” 和 “-r” 选项)，以及混合使用前向和后向范围。 使用 -v 时，在日志信息中显示受影响的路径名。 使用 -q 时，不显示日志信息主体 (请注意，它可与 -v 并存)。 每条日志信息只会显示一次，即使指定了此版本涉及到的多个路径。默认日志信息会追溯复制历史；使用 –stop-on-copy 可以关闭这种行为，这可以用来找出分支点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">有效选项:</span><br><span class="line">-r [--revision] ARG　　: ARG (一些命令也接受ARG1:ARG2范围)</span><br><span class="line">版本参数可以是如下之一:</span><br><span class="line">        NUMBER 　　版本号</span><br><span class="line">        &#39;&#123;&#39;DATE&#39;&#125; &#39; 在指定时间以后的版本</span><br><span class="line">        &#39; HEAD &#39; 　　版本库中的最新版本</span><br><span class="line">        &#39; BASE &#39; 　　工作副本的基线版本 </span><br><span class="line">        &#39; COMMITTED &#39; 最后提交或基线之前 </span><br><span class="line">        &#39; PREV &#39; 　　COMMITTED的前一版本</span><br><span class="line">-q [--quiet]　　　　　　: 不打印信息，或只打印概要信息</span><br><span class="line">-v [--verbose]　　 　　: 打印附加信息</span><br><span class="line">-g [--use-merge-history] : 从合并历史使用&#x2F;显示额外信息</span><br><span class="line">-c [--change] ARG　　　　: 版本 ARG 引起的改变</span><br><span class="line">–targets ARG　　　　　　: 传递文件 ARG 内容为附件参数</span><br><span class="line">–stop-on-copy　　 　　: 查看历史不要跨越不同的副本</span><br><span class="line">–incremental　　　　　　: 给予适合串联的输出</span><br><span class="line">–xml　　　　　　　　　　: 输出为 XML</span><br><span class="line">-l [--limit] ARG　　　　: 日值项最大值</span><br><span class="line">–with-all-revprops　　: 获取所有版本属性</span><br><span class="line">–with-no-revprops 　　: 没有找回版本属性</span><br><span class="line">–with-revprop ARG 　　: 获取版本属性 ARG</span><br><span class="line"></span><br><span class="line">全局选项:</span><br><span class="line">–username ARG　　 　　: 指定用户名称 ARG</span><br><span class="line">–password ARG　　 　　: 指定密码 ARG</span><br><span class="line">–no-auth-cache　　　　: 不要缓存用户认证令牌</span><br><span class="line">–non-interactive　　　　: 不要交互提示</span><br><span class="line">–trust-server-cert　　: 不提示的接受未知的 SSL 服务器证书(只用于选项 “–non-interactive”)</span><br><span class="line">–config-dir ARG　　　　: 从目录 ARG 读取用户配置文件</span><br><span class="line">–config-option ARG　　: 以下属格式设置用户配置选项：FILE:SECTION:OPTION&#x3D;[VALUE]</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">svn log       #显示所有版本commit的日志信息:版本、作者、日期、comment。</span><br><span class="line">svn log -r 4:20   #只看版本4到版本20的日志信息，顺序显示。</span><br><span class="line">svn log -r 20:5   #显示版本20到4之间的日志信息，逆序显示。</span><br><span class="line">svn log suvan.file #查看文件suvan.file的日志修改信息。</span><br><span class="line">svn log -r 8 -v   #显示版本8的详细修改日志，包括修改的所有文件列表信息。</span><br><span class="line">svn log -r 8 -v -q #显示版本8的详细提交日志，不包括comment。</span><br><span class="line">svn log -v -r 88:866 #显示从版本88到版本866之间，当前代码目录下所有变更的详细信息 。svn log -v dir #查看目录的日志修改信息,需要加v。</span><br><span class="line">svn log http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;project #显示代码目录的日志信息。</span><br><span class="line">svn log &#x2F;project -v -l3 #查看最近3个版本日志</span><br><span class="line">svn log -r 18 &gt; suvan.log #将版本18的日志放入文件</span><br><span class="line">或</span><br><span class="line">svn log –incremental -r 18 &gt; suvan.log</span><br></pre></td></tr></table></figure><h3 id="查看文件详细信息"><a href="#查看文件详细信息" class="headerlink" title="查看文件详细信息"></a>查看文件详细信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn info 文件名</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn info suvan.file</span><br></pre></td></tr></table></figure><h3 id="SVN-帮助"><a href="#SVN-帮助" class="headerlink" title="SVN 帮助"></a>SVN 帮助</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn help   全部功能选项</span><br></pre></td></tr></table></figure><h3 id="查看版本库下的文件和目录列表"><a href="#查看版本库下的文件和目录列表" class="headerlink" title="查看版本库下的文件和目录列表"></a>查看版本库下的文件和目录列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">svn list svn地址(http或者svn协议)</span><br><span class="line">或</span><br><span class="line">svn list svn本地版本库目录</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn list &#x2F;project</span><br></pre></td></tr></table></figure><h3 id="版本库中创建新目录"><a href="#版本库中创建新目录" class="headerlink" title="版本库中创建新目录"></a>版本库中创建新目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn mkdir 目录名</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn mkdir suvan</span><br><span class="line">#创建完之后再提交一下,svn commit -m &#39;新建目录suvan&#39;</span><br></pre></td></tr></table></figure><h3 id="恢复本地修改"><a href="#恢复本地修改" class="headerlink" title="恢复本地修改"></a>恢复本地修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn revert [--recursive] 文件名</span><br><span class="line">#该命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录。</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn revert suvan.file   放弃对suvan.file的修改</span><br></pre></td></tr></table></figure><h3 id="把工作拷贝更新到别的URL"><a href="#把工作拷贝更新到别的URL" class="headerlink" title="把工作拷贝更新到别的URL"></a>把工作拷贝更新到别的URL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn switch(sw) svn地址(http或者svn协议) 本地目录</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn switch http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;newproject .&#x2F;</span><br><span class="line">#当前所在目录分支到http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;newproject</span><br></pre></td></tr></table></figure><h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn resolved [本地目录]</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">svn update</span><br><span class="line">C suvan.file</span><br><span class="line">Updated to revision 31. </span><br><span class="line">如果更新时发生冲突，我们的工作拷贝会产生三个新的文件： suvan.file</span><br><span class="line">suvan.file.mine</span><br><span class="line">suvan.file.r30</span><br><span class="line">suvan.file.r31</span><br><span class="line">当我们解决了suvan.file的冲突，并且准备提交，运行svn resolved让我们的工作拷贝知道我们已经完成了所有事情。</span><br><span class="line">我们也可以仅仅删除冲突的文件并且提交，但是svn resolved除了删除冲突文件，还修正了一些记录在工作拷贝管理区域的记录数据，所以我们推荐使用这个命令。</span><br></pre></td></tr></table></figure><h3 id="不checkout而查看输出特定文件或URL的内容"><a href="#不checkout而查看输出特定文件或URL的内容" class="headerlink" title="不checkout而查看输出特定文件或URL的内容"></a>不checkout而查看输出特定文件或URL的内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn cat svn地址(http或者svn协议)</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn cat http:&#x2F;&#x2F;blog.wanxiaohong.cn&#x2F;project&#x2F;suvan.file</span><br></pre></td></tr></table></figure><p>补充说明：</p><p>unix下如果想更换svn的用户名和密码:</p><p>1.临时更换</p><p>在所有命令下强制加上–username 和–password选项。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn up --username suvan --password 168168</span><br></pre></td></tr></table></figure><p>2.永久更换</p><p>进入 ~/.subversion目录,删除auth/,若担心误删可以先备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;.subversion &amp;&amp; rm -rf auth&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本技术交流 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVN </tag>
            
            <tag> 脚本语言 </tag>
            
            <tag> 版本管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat脚本语言</title>
      <link href="/2021/05/16/bat%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/"/>
      <url>/2021/05/16/bat%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="路由命令解释"><a href="#路由命令解释" class="headerlink" title="路由命令解释"></a>路由命令解释</h2><p>route print:打印路由表</p><p>打印情况如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">接口列表</span><br><span class="line"> 11...00 ff 92 9f 7d d8 ......HotspotShield TAP-Windows Adapter V9</span><br><span class="line">  4...da 5d e2 3a 81 d7 ......Microsoft Wi-Fi Direct Virtual Adapter</span><br><span class="line"> 17...d8 5d e2 3a 81 d7 ......Microsoft Wi-Fi Direct Virtual Adapter #2</span><br><span class="line">  3...68 f7 28 e0 e0 5f ......Realtek PCIe GBE Family Controller</span><br><span class="line">  9...d8 5d e2 3a 81 d7 ......Realtek RTL8723BE Wireless LAN 802.11n PCI-E NIC</span><br><span class="line"> 19...d8 5d e2 3a 81 d8 ......Bluetooth Device (Personal Area Network)</span><br><span class="line">  1...........................Software Loopback Interface 1</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">IPv4 路由表</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">活动路由:</span><br><span class="line">网络目标        网络掩码          网关       接口   跃点数</span><br><span class="line">          0.0.0.0          0.0.0.0    171.16.29.254     171.16.28.65     35</span><br><span class="line">          0.0.0.0          0.0.0.0     192.168.43.1    192.168.43.39     55</span><br><span class="line">         10.0.0.0        255.0.0.0    171.16.29.254     171.16.28.65     36</span><br><span class="line">        127.0.0.0        255.0.0.0            在链路上         127.0.0.1    331</span><br><span class="line">        127.0.0.1  255.255.255.255            在链路上         127.0.0.1    331</span><br><span class="line">  127.255.255.255  255.255.255.255            在链路上         127.0.0.1    331</span><br><span class="line">      171.16.28.0    255.255.254.0            在链路上      171.16.28.65    291</span><br><span class="line">    171.16.29.255  255.255.255.255            在链路上      171.16.28.65    291</span><br><span class="line">        172.0.0.0        255.0.0.0    171.16.29.254     171.16.28.65     36</span><br><span class="line">     192.168.43.0    255.255.255.0            在链路上     192.168.43.39    311</span><br><span class="line">   192.168.43.255  255.255.255.255            在链路上     192.168.43.39    311</span><br><span class="line">        224.0.0.0        240.0.0.0            在链路上         127.0.0.1    331</span><br><span class="line">        224.0.0.0        240.0.0.0            在链路上      171.16.28.65    291</span><br><span class="line">        224.0.0.0        240.0.0.0            在链路上     192.168.43.39    311</span><br><span class="line">  255.255.255.255  255.255.255.255            在链路上         127.0.0.1    331</span><br><span class="line">  255.255.255.255  255.255.255.255            在链路上      171.16.28.65    291</span><br><span class="line">  255.255.255.255  255.255.255.255            在链路上     192.168.43.39    311</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">永久路由:</span><br><span class="line">  网络地址          网络掩码  网关地址  跃点数</span><br><span class="line">          0.0.0.0          0.0.0.0     192.168.43.1       1</span><br><span class="line">        172.0.0.0        255.0.0.0    171.16.29.254       1</span><br><span class="line">         10.0.0.0        255.0.0.0    171.16.29.254       1</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">IPv6 路由表</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">活动路由:</span><br><span class="line"> 接口跃点数网络目标                网关</span><br><span class="line">  9     71 ::&#x2F;0                     fe80::6d3:b5ff:feda:1781</span><br><span class="line">  1    331 ::1&#x2F;128                  在链路上</span><br><span class="line">  9     71 2409:896a:240:ee0e::&#x2F;64  在链路上</span><br><span class="line">  9    311 2409:896a:240:ee0e:4e:7fd4:3e44:f208&#x2F;128</span><br><span class="line">                                    在链路上</span><br><span class="line">  9    311 2409:896a:240:ee0e:79d5:faec:17e5:3e75&#x2F;128</span><br><span class="line">                                    在链路上</span><br><span class="line">  3    291 fe80::&#x2F;64                在链路上</span><br><span class="line">  9    311 fe80::&#x2F;64                在链路上</span><br><span class="line">  9    311 fe80::4e:7fd4:3e44:f208&#x2F;128</span><br><span class="line">                                    在链路上</span><br><span class="line">  3    291 fe80::8fd:958e:8633:c3e2&#x2F;128</span><br><span class="line">                                    在链路上</span><br><span class="line">  1    331 ff00::&#x2F;8                 在链路上</span><br><span class="line">  3    291 ff00::&#x2F;8                 在链路上</span><br><span class="line">  9    311 ff00::&#x2F;8                 在链路上</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">永久路由:</span><br><span class="line">  无</span><br></pre></td></tr></table></figure><p>route add:主要作用是添加静态路由</p><p>route delete ip地址：删除ip路由地址</p><p>通常格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route [-f] [-p] [Command] [Destination] [mask Netmask] [Gateway] [metric Metric] [if Interface]</span><br></pre></td></tr></table></figure><p>参数含义：</p><blockquote><p>destination【网段地址】<br>mask【子网掩码】<br>gateway【网关地址】<br>metric 【路由跳数】<br>if【端口号】<br>一般情况下，不涉及本机地址，除非你要做测试。</p></blockquote><p>其中：<br>可以省略【路由跳数】参数；<br>当通往该网关地址的路径唯一时，【端口号】参数可以省略。（因为在多端口的路由交换设备上，可能存在通往同一个IP地址的多条备份路径。）<br>mask 是关键字，不能省略。</p><p>加上-p 代表就是永久路由，路由就不会失效，重新开机路由依然存在。</p><h2 id="实现内外网同时访问"><a href="#实现内外网同时访问" class="headerlink" title="实现内外网同时访问"></a>实现内外网同时访问</h2><p>在使用华为云桌面时，不能同时访问外网进行上网查询资料等操作，需要编写bat脚本来实现同时访问。</p><p>首先查看电脑的网关信息，通过命令<code>ipconfig</code>查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">未知适配器 本地连接:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开连接</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line"></span><br><span class="line">无线局域网适配器 本地连接* 1:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开连接</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line"></span><br><span class="line">无线局域网适配器 本地连接* 10:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开连接</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line"></span><br><span class="line">以太网适配器 以太网:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::8fd:958e:8633:c3e2%3</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 171.16.28.65</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.254.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : 171.16.29.254</span><br><span class="line"></span><br><span class="line">无线局域网适配器 WLAN:</span><br><span class="line"></span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br><span class="line">   IPv6 地址 . . . . . . . . . . . . : 2409:896a:240:ee0e:4e:7fd4:3e44:f208</span><br><span class="line">   临时 IPv6 地址. . . . . . . . . . : 2409:896a:240:ee0e:79d5:faec:17e5:3e75</span><br><span class="line">   本地链接 IPv6 地址. . . . . . . . : fe80::4e:7fd4:3e44:f208%9</span><br><span class="line">   IPv4 地址 . . . . . . . . . . . . : 192.168.43.39</span><br><span class="line">   子网掩码  . . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   默认网关. . . . . . . . . . . . . : fe80::6d3:b5ff:feda:1781%9</span><br><span class="line">                                       192.168.43.1</span><br><span class="line"></span><br><span class="line">以太网适配器 蓝牙网络连接:</span><br><span class="line"></span><br><span class="line">   媒体状态  . . . . . . . . . . . . : 媒体已断开连接</span><br><span class="line">   连接特定的 DNS 后缀 . . . . . . . :</span><br></pre></td></tr></table></figure><p>根据提供的ip地址和网关编写的bat脚本命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">echo off</span><br><span class="line">route delete 0.0.0.0</span><br><span class="line">route delete 171.17.1.0</span><br><span class="line">route delete 171.16.28.65</span><br><span class="line">route -p add 0.0.0.0 mask 0.0.0.0 192.168.43.1 IF 4 </span><br><span class="line">route add -p  172.0.0.0 mask 255.0.0.0 171.16.29.254 IF 3</span><br><span class="line">route add -p 10.0.0.0 mask 255.0.0.0 171.16.29.254 IF 3</span><br><span class="line">echo on</span><br></pre></td></tr></table></figure><p>关于bat脚本命令的解释：</p><p>echo off:添加此命令的作用是不会显示所执行的命令，只会给出结果。</p><p>echo on:会显示所执行的命令，然后显示执行的结果。</p><p>但”echo off”本身的命令会显示出来怎么办，所以一般见到的echo off 前面都有”@”，”@”作用是此行所有的命令都不显示，只执行，和”echo off”比较相似，不过只对当前行起作用。</p><p>route delete:每次设置路由，都要把之前设置过的路由删除掉，避免冲突或冗余。</p><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route -p add 0.0.0.0 mask 0.0.0.0 192.168.43.1 IF 4</span><br></pre></td></tr></table></figure><p>解释：</p><p>192.168.43.1是连接手机热点时无线局域网的默认网关。</p><p>IF 4表示端口是4，在route print时可以查看得到接口列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">接口列表</span><br><span class="line"> 11...00 ff 92 9f 7d d8 ......HotspotShield TAP-Windows Adapter V9</span><br><span class="line">  4...da 5d e2 3a 81 d7 ......Microsoft Wi-Fi Direct Virtual Adapter</span><br><span class="line"> 17...d8 5d e2 3a 81 d7 ......Microsoft Wi-Fi Direct Virtual Adapter #2</span><br><span class="line">  3...68 f7 28 e0 e0 5f ......Realtek PCIe GBE Family Controller</span><br><span class="line">  9...d8 5d e2 3a 81 d7 ......Realtek RTL8723BE Wireless LAN 802.11n PCI-E NIC</span><br><span class="line"> 19...d8 5d e2 3a 81 d8 ......Bluetooth Device (Personal Area Network)</span><br><span class="line">  1...........................Software Loopback Interface 1</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route add -p  172.0.0.0 mask 255.0.0.0 171.16.29.254 IF 3</span><br><span class="line">route add -p 10.0.0.0 mask 255.0.0.0 171.16.29.254 IF 3</span><br></pre></td></tr></table></figure><p>解释：</p><p>171.16.29.254是以太网的默认网关。</p><p>172.0.0.0、10.0.0.0和255.0.0.0暂时不确定这么设置的作用（但阴差阳错改成功了哈哈）。</p><p>IF 3是以太网的端口号，如上接口列表。</p><p>使用管理员身份执行脚本后，IPv4路由表会多出刚才添加的活动路由。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">IPv4 路由表</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">活动路由:</span><br><span class="line">网络目标        网络掩码          网关       接口   跃点数</span><br><span class="line">          0.0.0.0          0.0.0.0    171.16.29.254     171.16.28.65     35</span><br><span class="line">          0.0.0.0          0.0.0.0     192.168.43.1    192.168.43.39     55</span><br><span class="line">         10.0.0.0        255.0.0.0    171.16.29.254     171.16.28.65     36</span><br><span class="line">        127.0.0.0        255.0.0.0            在链路上         127.0.0.1    331</span><br></pre></td></tr></table></figure><p>171.16.28.65是以太网的IPv4的地址。</p>]]></content>
      
      
      <categories>
          
          <category> 脚本技术交流 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本语言 </tag>
            
            <tag> bat </tag>
            
            <tag> 技能提升 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript从进阶到熟悉</title>
      <link href="/2021/05/04/JavaScript%E4%BB%8E%E8%BF%9B%E9%98%B6%E5%88%B0%E7%86%9F%E6%82%89/"/>
      <url>/2021/05/04/JavaScript%E4%BB%8E%E8%BF%9B%E9%98%B6%E5%88%B0%E7%86%9F%E6%82%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="文档整理参考"><a href="#文档整理参考" class="headerlink" title="文档整理参考"></a>文档整理参考</h2><p>入门参考教程（通俗易懂）：<a href="https://wangdoc.com/javascript/" target="_blank" rel="noopener">https://wangdoc.com/javascript/</a></p><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p>运算符是处理数据的基本方法，用来从现有的值得到新的值。JavaScript 提供了多种运算符，覆盖了所有主要的运算。</p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>JavaScript 共提供10个算术运算符，用来完成基本的算术运算。</p><ul><li><strong>加法运算符</strong>：<code>x + y</code></li><li><strong>减法运算符</strong>： <code>x - y</code></li><li><strong>乘法运算符</strong>： <code>x * y</code></li><li><strong>除法运算符</strong>：<code>x / y</code></li><li><strong>指数运算符</strong>：<code>x ** y</code></li><li><strong>余数运算符</strong>：<code>x % y</code></li><li><strong>自增运算符</strong>：<code>++x</code> 或者 <code>x++</code></li><li><strong>自减运算符</strong>：<code>--x</code> 或者 <code>x--</code></li><li><strong>数值运算符</strong>： <code>+x</code></li><li><strong>负数值运算符</strong>：<code>-x</code></li></ul><p>减法、乘法、除法运算法比较单纯，就是执行相应的数学运算。下面介绍其他几个算术运算符，重点是加法运算符。</p><h3 id="加法运算符"><a href="#加法运算符" class="headerlink" title="加法运算符"></a>加法运算符</h3><h4 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h4><p>加法运算符（<code>+</code>）是最常见的运算符，用来求两个数值的和。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 + 1 &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>JavaScript 允许非数值的相加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">true + true &#x2F;&#x2F; 2</span><br><span class="line">1 + true &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，第一行是两个布尔值相加，第二行是数值与布尔值相加。这两种情况，布尔值都会自动转成数值，然后再相加。</p><p>比较特殊的是，如果是两个字符串相加，这时加法运算符会变成连接运算符，返回一个新的字符串，将两个原字符串连接在一起。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;a&#39; + &#39;bc&#39; &#x2F;&#x2F; &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>如果一个运算子是字符串，另一个运算子是非字符串，这时非字符串会转成字符串，再连接在一起。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 + &#39;a&#39; &#x2F;&#x2F; &quot;1a&quot;</span><br><span class="line">false + &#39;a&#39; &#x2F;&#x2F; &quot;falsea&quot;</span><br></pre></td></tr></table></figure><p>加法运算符是在运行时决定，到底是执行相加，还是执行连接。也就是说，运算子的不同，导致了不同的语法行为，这种现象称为“重载”（overload）。由于加法运算符存在重载，可能执行两种运算，使用的时候必须很小心。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;3&#39; + 4 + 5 &#x2F;&#x2F; &quot;345&quot;</span><br><span class="line">3 + 4 + &#39;5&#39; &#x2F;&#x2F; &quot;75&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，由于从左到右的运算次序，字符串的位置不同会导致不同的结果。</p><p><code style="color=red;">除了加法运算符，其他算术运算符（比如减法、除法和乘法）都不会发生重载。</code>它们的规则是：所有运算子一律转为数值，再进行相应的数学运算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 - &#39;2&#39; &#x2F;&#x2F; -1</span><br><span class="line">1 * &#39;2&#39; &#x2F;&#x2F; 2</span><br><span class="line">1 &#x2F; &#39;2&#39; &#x2F;&#x2F; 0.5</span><br></pre></td></tr></table></figure><p>上面代码中，减法、除法和乘法运算符，都是将字符串自动转为数值，然后再运算。</p><h4 id="对象的相加"><a href="#对象的相加" class="headerlink" title="对象的相加"></a>对象的相加</h4><p>如果运算子是对象，必须先转成原始类型的值，然后再相加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line">obj + 2 &#x2F;&#x2F; &quot;[object Object]2&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>转成原始类型的值是<code>[object Object]</code>，再加<code>2</code>就得到了上面的结果。</p><p>对象转成原始类型的值，规则如下。</p><p>首先，自动调用对象的<code>valueOf</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line">obj.valueOf() &#x2F;&#x2F; &#123; p: 1 &#125;</span><br></pre></td></tr></table></figure><p>一般来说，对象的<code>valueOf</code>方法总是返回对象自身，这时再自动调用对象的<code>toString</code>方法，将其转为字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line">obj.valueOf().toString() &#x2F;&#x2F; &quot;[object Object]&quot;</span><br></pre></td></tr></table></figure><p>对象的<code>toString</code>方法默认返回<code>[object Object]</code>，所以就得到了最前面那个例子的结果。</p><p>知道了这个规则以后，就可以自己定义<code>valueOf</code>方法或<code>toString</code>方法，得到想要的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  valueOf: function () &#123;</span><br><span class="line">    return 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj + 2 &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>上面代码中，我们定义<code>obj</code>对象的<code>valueOf</code>方法返回<code>1</code>，于是<code>obj + 2</code>就得到了<code>3</code>。这个例子中，由于<code>valueOf</code>方法直接返回一个原始类型的值，所以不再调用<code>toString</code>方法。</p><p>下面是自定义<code>toString</code>方法的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  toString: function () &#123;</span><br><span class="line">    return &#39;hello&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj + 2 &#x2F;&#x2F; &quot;hello2&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>的<code>toString</code>方法返回字符串<code>hello</code>。前面说过，只要有一个运算子是字符串，加法运算符就变成连接运算符，返回连接后的字符串。</p><p>这里有一个特例，如果运算子是一个<code>Date</code>对象的实例，那么会优先执行<code>toString</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; new Date();</span><br><span class="line">obj.valueOf &#x3D; function () &#123; return 1 &#125;;</span><br><span class="line">obj.toString &#x3D; function () &#123; return &#39;hello&#39; &#125;;</span><br><span class="line"></span><br><span class="line">obj + 2 &#x2F;&#x2F; &quot;hello2&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>是一个<code>Date</code>对象的实例，并且自定义了<code>valueOf</code>方法和<code>toString</code>方法，结果<code>toString</code>方法优先执行。</p><h3 id="余数运算符"><a href="#余数运算符" class="headerlink" title="余数运算符"></a>余数运算符</h3><p>余数运算符（<code>%</code>）返回前一个运算子被后一个运算子除，所得的余数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 % 5 &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>需要注意的是，运算结果的正负号由第一个运算子的正负号决定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1 % 2 &#x2F;&#x2F; -1</span><br><span class="line">1 % -2 &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>所以，为了得到负数的正确余数值，可以先使用绝对值函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 错误的写法</span><br><span class="line">function isOdd(n) &#123;</span><br><span class="line">  return n % 2 &#x3D;&#x3D;&#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">isOdd(-5) &#x2F;&#x2F; false</span><br><span class="line">isOdd(-4) &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 正确的写法</span><br><span class="line">function isOdd(n) &#123;</span><br><span class="line">  return Math.abs(n % 2) &#x3D;&#x3D;&#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">isOdd(-5) &#x2F;&#x2F; true</span><br><span class="line">isOdd(-4) &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>余数运算符还可以用于浮点数的运算。但是，由于浮点数不是精确的值，无法得到完全准确的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6.5 % 2.1</span><br><span class="line">&#x2F;&#x2F; 0.19999999999999973</span><br></pre></td></tr></table></figure><h3 id="自增和自减运算符"><a href="#自增和自减运算符" class="headerlink" title="自增和自减运算符"></a>自增和自减运算符</h3><p>自增和自减运算符，是一元运算符，只需要一个运算子。它们的作用是将运算子首先转为数值，然后加上1或者减去1。它们会修改原始变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">++x &#x2F;&#x2F; 2</span><br><span class="line">x &#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line">--x &#x2F;&#x2F; 1</span><br><span class="line">x &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码的变量<code>x</code>自增后，返回<code>2</code>，再进行自减，返回<code>1</code>。这两种情况都会使得，原始变量<code>x</code>的值发生改变。</p><p>自增和自减运算符有一个需要注意的地方，就是放在变量之后，会先返回变量操作前的值，再进行自增/自减操作；放在变量之前，会先进行自增/自减操作，再返回变量操作后的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">var y &#x3D; 1;</span><br><span class="line"></span><br><span class="line">x++ &#x2F;&#x2F; 1</span><br><span class="line">++y &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，<code>x</code>是先返回当前值，然后自增，所以得到<code>1</code>；<code>y</code>是先自增，然后返回新的值，所以得到<code>2</code>。</p><h3 id="数值运算符，负数值运算符"><a href="#数值运算符，负数值运算符" class="headerlink" title="数值运算符，负数值运算符"></a>数值运算符，负数值运算符</h3><p>数值运算符（<code>+</code>）同样使用加号，但它是一元运算符（只需要一个操作数），而加法运算符是二元运算符（需要两个操作数）。</p><p>数值运算符的作用在于可以将任何值转为数值（与<code>Number</code>函数的作用相同）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+true &#x2F;&#x2F; 1</span><br><span class="line">+[] &#x2F;&#x2F; 0</span><br><span class="line">+&#123;&#125; &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p>上面代码表示，非数值经过数值运算符以后，都变成了数值（最后一行<code>NaN</code>也是数值）。</p><p>负数值运算符（<code>-</code>），也同样具有将一个值转为数值的功能，只不过得到的值正负相反。连用两个负数值运算符，等同于数值运算符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">-x &#x2F;&#x2F; -1</span><br><span class="line">-(-x) &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码最后一行的圆括号不可少，否则会变成自减运算符。</p><p>数值运算符号和负数值运算符，都会返回一个新的值，而不会改变原始变量的值。</p><h3 id="指数运算符"><a href="#指数运算符" class="headerlink" title="指数运算符"></a>指数运算符</h3><p>指数运算符（<code>**</code>）完成指数运算，前一个运算子是底数，后一个运算子是指数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 ** 4 &#x2F;&#x2F; 16</span><br></pre></td></tr></table></figure><p>注意，指数运算符是右结合，而不是左结合。即多个指数运算符连用时，先进行最右边的计算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 相当于 2 ** (3 ** 2)</span><br><span class="line">2 ** 3 ** 2</span><br><span class="line">&#x2F;&#x2F; 512</span><br></pre></td></tr></table></figure><p>上面代码中，由于指数运算符是右结合，所以先计算第二个指数运算符，而不是第一个。</p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算符用于给变量赋值。</p><p>最常见的赋值运算符，当然就是等号（<code>=</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 将 1 赋值给变量 x</span><br><span class="line">var x &#x3D; 1;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将变量 y 的值赋值给变量 x</span><br><span class="line">var x &#x3D; y;</span><br></pre></td></tr></table></figure><p>赋值运算符还可以与其他运算符结合，形成变体。下面是与算术运算符的结合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x + y</span><br><span class="line">x +&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x - y</span><br><span class="line">x -&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x * y</span><br><span class="line">x *&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x &#x2F; y</span><br><span class="line">x &#x2F;&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x % y</span><br><span class="line">x %&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x ** y</span><br><span class="line">x **&#x3D; y</span><br></pre></td></tr></table></figure><p>下面是与位运算符的结合（关于位运算符，请见后文的介绍）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x &gt;&gt; y</span><br><span class="line">x &gt;&gt;&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x &lt;&lt; y</span><br><span class="line">x &lt;&lt;&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x &gt;&gt;&gt; y</span><br><span class="line">x &gt;&gt;&gt;&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x &amp; y</span><br><span class="line">x &amp;&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x | y</span><br><span class="line">x |&#x3D; y</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 x &#x3D; x ^ y</span><br><span class="line">x ^&#x3D; y</span><br></pre></td></tr></table></figure><p>这些复合的赋值运算符，都是先进行指定运算，然后将得到值返回给左边的变量。</p><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>比较运算符用于比较两个值的大小，然后返回一个布尔值，表示是否满足指定的条件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 &gt; 1 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面代码比较<code>2</code>是否大于<code>1</code>，返回<code>true</code>。</p><blockquote><p>注意，比较运算符可以比较各种类型的值，不仅仅是数值。</p></blockquote><p>JavaScript 一共提供了8个比较运算符。</p><ul><li><code>&gt;</code> 大于运算符</li><li><code>&lt;</code> 小于运算符</li><li><code>&lt;=</code> 小于或等于运算符</li><li><code>&gt;=</code> 大于或等于运算符</li><li><code>==</code> 相等运算符</li><li><code>===</code> 严格相等运算符</li><li><code>!=</code> 不相等运算符</li><li><code>!==</code> 严格不相等运算符</li></ul><p>这八个比较运算符分成两类：相等比较和非相等比较。两者的规则是不一样的，对于非相等的比较，算法是先看两个运算子是否都是字符串，如果是的，就按照字典顺序比较（实际上是比较 Unicode 码点）；否则，将两个运算子都转成数值，再比较数值的大小。</p><h3 id="非相等运算符：字符串的比较"><a href="#非相等运算符：字符串的比较" class="headerlink" title="非相等运算符：字符串的比较"></a>非相等运算符：字符串的比较</h3><p>字符串按照字典顺序进行比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;cat&#39; &gt; &#39;dog&#39; &#x2F;&#x2F; false</span><br><span class="line">&#39;cat&#39; &gt; &#39;catalog&#39; &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>JavaScript 引擎内部首先比较首字符的 Unicode 码点。如果相等，再比较第二个字符的 Unicode 码点，以此类推。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;cat&#39; &gt; &#39;Cat&#39; &#x2F;&#x2F; true&#39;</span><br></pre></td></tr></table></figure><p>上面代码中，小写的<code>c</code>的 Unicode 码点（<code>99</code>）大于大写的<code>C</code>的 Unicode 码点（<code>67</code>），所以返回<code>true</code>。</p><p>由于所有字符都有 Unicode 码点，因此汉字也可以比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;大&#39; &gt; &#39;小&#39; &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码中，“大”的 Unicode 码点是22823，“小”是23567，因此返回<code>false</code>。</p><h3 id="非相等运算符：非字符串的比较"><a href="#非相等运算符：非字符串的比较" class="headerlink" title="非相等运算符：非字符串的比较"></a>非相等运算符：非字符串的比较</h3><p>如果两个运算子之中，至少有一个不是字符串，需要分成以下两种情况。</p><p><strong>（1）原始类型值</strong></p><p>如果两个运算子都是原始类型的值，则是先转成数值再比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">5 &gt; &#39;4&#39; &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 5 &gt; Number(&#39;4&#39;)</span><br><span class="line">&#x2F;&#x2F; 即 5 &gt; 4</span><br><span class="line"></span><br><span class="line">true &gt; false &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 Number(true) &gt; Number(false)</span><br><span class="line">&#x2F;&#x2F; 即 1 &gt; 0</span><br><span class="line"></span><br><span class="line">2 &gt; true &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 2 &gt; Number(true)</span><br><span class="line">&#x2F;&#x2F; 即 2 &gt; 1</span><br></pre></td></tr></table></figure><p>上面代码中，字符串和布尔值都会先转成数值，再进行比较。</p><p>这里需要注意与<code>NaN</code>的比较。任何值（包括<code>NaN</code>本身）与<code>NaN</code>使用非相等运算符进行比较，返回的都是<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 &gt; NaN &#x2F;&#x2F; false</span><br><span class="line">1 &lt;&#x3D; NaN &#x2F;&#x2F; false</span><br><span class="line">&#39;1&#39; &gt; NaN &#x2F;&#x2F; false</span><br><span class="line">&#39;1&#39; &lt;&#x3D; NaN &#x2F;&#x2F; false</span><br><span class="line">NaN &gt; NaN &#x2F;&#x2F; false</span><br><span class="line">NaN &lt;&#x3D; NaN &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p><strong>（2）对象</strong></p><p>如果运算子是对象，会转为原始类型的值，再进行比较。</p><p>对象转换成原始类型的值，算法是先调用<code>valueOf</code>方法；如果返回的还是对象，再接着调用<code>toString</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; [2];</span><br><span class="line">x &gt; &#39;11&#39; &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 [2].valueOf().toString() &gt; &#39;11&#39;</span><br><span class="line">&#x2F;&#x2F; 即 &#39;2&#39; &gt; &#39;11&#39;</span><br><span class="line"></span><br><span class="line">x.valueOf &#x3D; function () &#123; return &#39;1&#39; &#125;;</span><br><span class="line">x &gt; &#39;11&#39; &#x2F;&#x2F; false</span><br><span class="line">&#x2F;&#x2F; 等同于 [2].valueOf() &gt; &#39;11&#39;</span><br><span class="line">&#x2F;&#x2F; 即 &#39;1&#39; &gt; &#39;11&#39;</span><br></pre></td></tr></table></figure><p>两个对象之间的比较也是如此。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[2] &gt; [1] &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 [2].valueOf().toString() &gt; [1].valueOf().toString()</span><br><span class="line">&#x2F;&#x2F; 即 &#39;2&#39; &gt; &#39;1&#39;</span><br><span class="line"></span><br><span class="line">[2] &gt; [11] &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 [2].valueOf().toString() &gt; [11].valueOf().toString()</span><br><span class="line">&#x2F;&#x2F; 即 &#39;2&#39; &gt; &#39;11&#39;</span><br><span class="line"></span><br><span class="line">&#123; x: 2 &#125; &gt;&#x3D; &#123; x: 1 &#125; &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 &#123; x: 2 &#125;.valueOf().toString() &gt;&#x3D; &#123; x: 1 &#125;.valueOf().toString()</span><br><span class="line">&#x2F;&#x2F; 即 &#39;[object Object]&#39; &gt;&#x3D; &#39;[object Object]&#39;</span><br></pre></td></tr></table></figure><h3 id="严格相等运算符"><a href="#严格相等运算符" class="headerlink" title="严格相等运算符"></a>严格相等运算符</h3><p>JavaScript 提供两种相等运算符：<code>==</code>和<code>===</code>。</p><p>简单说，它们的区别是相等运算符（<code>==</code>）比较两个值是否相等，严格相等运算符（<code>===</code>）比较它们是否为“同一个值”。如果两个值不是同一类型，严格相等运算符（<code>===</code>）直接返回<code>false</code>，而相等运算符（<code>==</code>）会将它们转换成同一个类型，再用严格相等运算符进行比较。</p><p>本节介绍严格相等运算符的算法。</p><p><strong>（1）不同类型的值</strong></p><p>如果两个值的类型不同，直接返回<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 &#x3D;&#x3D;&#x3D; &quot;1&quot; &#x2F;&#x2F; false</span><br><span class="line">true &#x3D;&#x3D;&#x3D; &quot;true&quot; &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码比较数值的<code>1</code>与字符串的“1”、布尔值的<code>true</code>与字符串<code>&quot;true&quot;</code>，因为类型不同，结果都是<code>false</code>。</p><p><strong>（2）同一类的原始类型值</strong></p><p>同一类型的原始类型的值（数值、字符串、布尔值）比较时，值相同就返回<code>true</code>，值不同就返回<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 &#x3D;&#x3D;&#x3D; 0x1 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面代码比较十进制的<code>1</code>与十六进制的<code>1</code>，因为类型和值都相同，返回<code>true</code>。</p><p>需要注意的是，<code>NaN</code>与任何值都不相等（包括自身）。另外，正<code>0</code>等于负<code>0</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NaN &#x3D;&#x3D;&#x3D; NaN  &#x2F;&#x2F; false</span><br><span class="line">+0 &#x3D;&#x3D;&#x3D; -0 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p><strong>（3）复合类型值</strong></p><p>两个复合类型（对象、数组、函数）的数据比较时，不是比较它们的值是否相等，而是比较它们是否指向同一个地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125; &#x3D;&#x3D;&#x3D; &#123;&#125; &#x2F;&#x2F; false</span><br><span class="line">[] &#x3D;&#x3D;&#x3D; [] &#x2F;&#x2F; false</span><br><span class="line">(function () &#123;&#125; &#x3D;&#x3D;&#x3D; function () &#123;&#125;) &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码分别比较两个空对象、两个空数组、两个空函数，结果都是不相等。原因是对于复合类型的值，严格相等运算比较的是，它们是否引用同一个内存地址，而运算符两边的空对象、空数组、空函数的值，都存放在不同的内存地址，结果当然是<code>false</code>。</p><p>如果两个变量引用同一个对象，则它们相等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var v1 &#x3D; &#123;&#125;;</span><br><span class="line">var v2 &#x3D; v1;</span><br><span class="line">v1 &#x3D;&#x3D;&#x3D; v2 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>注意，对于两个对象的比较，严格相等运算符比较的是地址，而大于或小于运算符比较的是值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var obj1 &#x3D; &#123;&#125;;</span><br><span class="line">var obj2 &#x3D; &#123;&#125;;</span><br><span class="line"></span><br><span class="line">obj1 &gt; obj2 &#x2F;&#x2F; false</span><br><span class="line">obj1 &lt; obj2 &#x2F;&#x2F; false</span><br><span class="line">obj1 &#x3D;&#x3D;&#x3D; obj2 &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面的三个比较，前两个比较的是值，最后一个比较的是地址，所以都返回<code>false</code>。</p><p><strong>（4）undefined 和 null</strong></p><p><code>undefined</code>和<code>null</code>与自身严格相等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">undefined &#x3D;&#x3D;&#x3D; undefined &#x2F;&#x2F; true</span><br><span class="line">null &#x3D;&#x3D;&#x3D; null &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>由于变量声明后默认值是<code>undefined</code>，因此两个只声明未赋值的变量是相等的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var v1;</span><br><span class="line">var v2;</span><br><span class="line">v1 &#x3D;&#x3D;&#x3D; v2 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><h3 id="严格不相等运算符"><a href="#严格不相等运算符" class="headerlink" title="严格不相等运算符"></a>严格不相等运算符</h3><p>严格相等运算符有一个对应的“严格不相等运算符”（<code>!==</code>），它的算法就是先求严格相等运算符的结果，然后返回相反值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 !&#x3D;&#x3D; &#39;1&#39; &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">!(1 &#x3D;&#x3D;&#x3D; &#39;1&#39;)</span><br></pre></td></tr></table></figure><p>上面代码中，感叹号<code>!</code>是求出后面表达式的相反值。</p><h3 id="相等运算符"><a href="#相等运算符" class="headerlink" title="相等运算符"></a>相等运算符</h3><p>相等运算符用来比较相同类型的数据时，与严格相等运算符完全一样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 &#x3D;&#x3D; 1.0</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">1 &#x3D;&#x3D;&#x3D; 1.0</span><br></pre></td></tr></table></figure><p>比较不同类型的数据时，相等运算符会先将数据进行类型转换，然后再用严格相等运算符比较。下面分成几种情况，讨论不同类型的值互相比较的规则。</p><p><strong>（1）原始类型值</strong></p><p>原始类型的值会转换成数值再进行比较。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1 &#x3D;&#x3D; true &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 1 &#x3D;&#x3D;&#x3D; Number(true)</span><br><span class="line"></span><br><span class="line">0 &#x3D;&#x3D; false &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 0 &#x3D;&#x3D;&#x3D; Number(false)</span><br><span class="line"></span><br><span class="line">2 &#x3D;&#x3D; true &#x2F;&#x2F; false</span><br><span class="line">&#x2F;&#x2F; 等同于 2 &#x3D;&#x3D;&#x3D; Number(true)</span><br><span class="line"></span><br><span class="line">2 &#x3D;&#x3D; false &#x2F;&#x2F; false</span><br><span class="line">&#x2F;&#x2F; 等同于 2 &#x3D;&#x3D;&#x3D; Number(false)</span><br><span class="line"></span><br><span class="line">&#39;true&#39; &#x3D;&#x3D; true &#x2F;&#x2F; false</span><br><span class="line">&#x2F;&#x2F; 等同于 Number(&#39;true&#39;) &#x3D;&#x3D;&#x3D; Number(true)</span><br><span class="line">&#x2F;&#x2F; 等同于 NaN &#x3D;&#x3D;&#x3D; 1</span><br><span class="line"></span><br><span class="line">&#39;&#39; &#x3D;&#x3D; 0 &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 Number(&#39;&#39;) &#x3D;&#x3D;&#x3D; 0</span><br><span class="line">&#x2F;&#x2F; 等同于 0 &#x3D;&#x3D;&#x3D; 0</span><br><span class="line"></span><br><span class="line">&#39;&#39; &#x3D;&#x3D; false  &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 Number(&#39;&#39;) &#x3D;&#x3D;&#x3D; Number(false)</span><br><span class="line">&#x2F;&#x2F; 等同于 0 &#x3D;&#x3D;&#x3D; 0</span><br><span class="line"></span><br><span class="line">&#39;1&#39; &#x3D;&#x3D; true  &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于 Number(&#39;1&#39;) &#x3D;&#x3D;&#x3D; Number(true)</span><br><span class="line">&#x2F;&#x2F; 等同于 1 &#x3D;&#x3D;&#x3D; 1</span><br><span class="line"></span><br><span class="line">&#39;\n  123  \t&#39; &#x3D;&#x3D; 123 &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 因为字符串转为数字时，省略前置和后置的空格</span><br></pre></td></tr></table></figure><p>上面代码将字符串和布尔值都转为数值，然后再进行比较。</p><p><strong>（2）对象与原始类型值比较</strong></p><p>对象（这里指广义的对象，包括数组和函数）与原始类型的值比较时，对象转换成原始类型的值，再进行比较。</p><p>具体来说，先调用对象的<code>valueOf()</code>方法，如果得到原始类型的值，就按照上一小节的规则，互相比较；如果得到的还是对象，则再调用<code>toString()</code>方法，得到字符串形式，再进行比较。</p><p>下面是数组与原始类型值比较的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 数组与数值的比较</span><br><span class="line">[1] &#x3D;&#x3D; 1 &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 数组与字符串的比较</span><br><span class="line">[1] &#x3D;&#x3D; &#39;1&#39; &#x2F;&#x2F; true</span><br><span class="line">[1, 2] &#x3D;&#x3D; &#39;1,2&#39; &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 对象与布尔值的比较</span><br><span class="line">[1] &#x3D;&#x3D; true &#x2F;&#x2F; true</span><br><span class="line">[2] &#x3D;&#x3D; true &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面例子中，JavaScript 引擎会先对数组<code>[1]</code>调用数组的<code>valueOf()</code>方法，由于返回的还是一个数组，所以会接着调用数组的<code>toString()</code>方法，得到字符串形式，再按照上一小节的规则进行比较。</p><p>下面是一个更直接的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">const obj &#x3D; &#123;</span><br><span class="line">  valueOf: function () &#123;</span><br><span class="line">    console.log(&#39;执行 valueOf()&#39;);</span><br><span class="line">    return obj;</span><br><span class="line">  &#125;,</span><br><span class="line">  toString: function () &#123;</span><br><span class="line">    console.log(&#39;执行 toString()&#39;);</span><br><span class="line">    return &#39;foo&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj &#x3D;&#x3D; &#39;foo&#39;</span><br><span class="line">&#x2F;&#x2F; 执行 valueOf()</span><br><span class="line">&#x2F;&#x2F; 执行 toString()</span><br><span class="line">&#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面例子中，<code>obj</code>是一个自定义了<code>valueOf()</code>和<code>toString()</code>方法的对象。这个对象与字符串<code>&#39;foo&#39;</code>进行比较时，会依次调用<code>valueOf()</code>和<code>toString()</code>方法，最后返回<code>&#39;foo&#39;</code>，所以比较结果是<code>true</code>。</p><p><strong>（3）undefined 和 null</strong></p><p><code>undefined</code>和<code>null</code>只有与自身比较，或者互相比较时，才会返回<code>true</code>；与其他类型的值比较时，结果都为<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">undefined &#x3D;&#x3D; undefined &#x2F;&#x2F; true</span><br><span class="line">null &#x3D;&#x3D; null &#x2F;&#x2F; true</span><br><span class="line">undefined &#x3D;&#x3D; null &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">false &#x3D;&#x3D; null &#x2F;&#x2F; false</span><br><span class="line">false &#x3D;&#x3D; undefined &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">0 &#x3D;&#x3D; null &#x2F;&#x2F; false</span><br><span class="line">0 &#x3D;&#x3D; undefined &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p><strong>（4）相等运算符的缺点</strong></p><p>相等运算符隐藏的类型转换，会带来一些违反直觉的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">0 &#x3D;&#x3D; &#39;&#39;             &#x2F;&#x2F; true</span><br><span class="line">0 &#x3D;&#x3D; &#39;0&#39;            &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">2 &#x3D;&#x3D; true           &#x2F;&#x2F; false</span><br><span class="line">2 &#x3D;&#x3D; false          &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">false &#x3D;&#x3D; &#39;false&#39;    &#x2F;&#x2F; false</span><br><span class="line">false &#x3D;&#x3D; &#39;0&#39;        &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">false &#x3D;&#x3D; undefined  &#x2F;&#x2F; false</span><br><span class="line">false &#x3D;&#x3D; null       &#x2F;&#x2F; false</span><br><span class="line">null &#x3D;&#x3D; undefined   &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">&#39; \t\r\n &#39; &#x3D;&#x3D; 0     &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面这些表达式都不同于直觉，很容易出错。因此建议不要使用相等运算符（<code>==</code>），最好只使用严格相等运算符（<code>===</code>）。</p><h3 id="不相等运算符"><a href="#不相等运算符" class="headerlink" title="不相等运算符"></a>不相等运算符</h3><p>相等运算符有一个对应的“不相等运算符”（<code>!=</code>），它的算法就是先求相等运算符的结果，然后返回相反值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 !&#x3D; &#39;1&#39; &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">!(1 &#x3D;&#x3D; &#39;1&#39;)</span><br></pre></td></tr></table></figure><h2 id="布尔运算符"><a href="#布尔运算符" class="headerlink" title="布尔运算符"></a>布尔运算符</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>布尔运算符用于将表达式转为布尔值，一共包含四个运算符。</p><ul><li>取反运算符：<code>!</code></li><li>且运算符：<code>&amp;&amp;</code></li><li>或运算符：<code>||</code></li><li>三元运算符：<code>?:</code></li></ul><h3 id="取反运算符（-）"><a href="#取反运算符（-）" class="headerlink" title="取反运算符（!）"></a>取反运算符（!）</h3><p>取反运算符是一个感叹号，用于将布尔值变为相反值，即<code>true</code>变成<code>false</code>，<code>false</code>变成<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!true &#x2F;&#x2F; false</span><br><span class="line">!false &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>对于非布尔值，取反运算符会将其转为布尔值。可以这样记忆，以下六个值取反后为<code>true</code>，其他值都为<code>false</code>。</p><ul><li><code>undefined</code></li><li><code>null</code></li><li><code>false</code></li><li><code>0</code></li><li><code>NaN</code></li><li>空字符串（<code>&#39;&#39;</code>）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">!undefined &#x2F;&#x2F; true</span><br><span class="line">!null &#x2F;&#x2F; true</span><br><span class="line">!0 &#x2F;&#x2F; true</span><br><span class="line">!NaN &#x2F;&#x2F; true</span><br><span class="line">!&quot;&quot; &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">!54 &#x2F;&#x2F; false</span><br><span class="line">!&#39;hello&#39; &#x2F;&#x2F; false</span><br><span class="line">![] &#x2F;&#x2F; false</span><br><span class="line">!&#123;&#125; &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码中，不管什么类型的值，经过取反运算后，都变成了布尔值。</p><p>如果对一个值连续做两次取反运算，等于将其转为对应的布尔值，与<code>Boolean</code>函数的作用相同。这是一种常用的类型转换的写法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">!!x</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">Boolean(x)</span><br></pre></td></tr></table></figure><p>上面代码中，不管<code>x</code>是什么类型的值，经过两次取反运算后，变成了与<code>Boolean</code>函数结果相同的布尔值。所以，两次取反就是将一个值转为布尔值的简便写法。</p><h3 id="且运算符（-amp-amp-）"><a href="#且运算符（-amp-amp-）" class="headerlink" title="且运算符（&amp;&amp;）"></a>且运算符（&amp;&amp;）</h3><p>且运算符（<code>&amp;&amp;</code>）往往用于多个表达式的求值。</p><p>它的运算规则是：如果第一个运算子的布尔值为<code>true</code>，则返回第二个运算子的值（注意是值，不是布尔值）；如果第一个运算子的布尔值为<code>false</code>，则直接返回第一个运算子的值，且不再对第二个运算子求值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#39;t&#39; &amp;&amp; &#39;&#39; &#x2F;&#x2F; &quot;&quot;</span><br><span class="line">&#39;t&#39; &amp;&amp; &#39;f&#39; &#x2F;&#x2F; &quot;f&quot;</span><br><span class="line">&#39;t&#39; &amp;&amp; (1 + 2) &#x2F;&#x2F; 3</span><br><span class="line">&#39;&#39; &amp;&amp; &#39;f&#39; &#x2F;&#x2F; &quot;&quot;</span><br><span class="line">&#39;&#39; &amp;&amp; &#39;&#39; &#x2F;&#x2F; &quot;&quot;</span><br><span class="line"></span><br><span class="line">var x &#x3D; 1;</span><br><span class="line">(1 - 1) &amp;&amp; ( x +&#x3D; 1) &#x2F;&#x2F; 0</span><br><span class="line">x &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码的最后一个例子，由于且运算符的第一个运算子的布尔值为<code>false</code>，则直接返回它的值<code>0</code>，而不再对第二个运算子求值，所以变量<code>x</code>的值没变。</p><p>这种跳过第二个运算子的机制，被称为“短路”。有些程序员喜欢用它取代<code>if</code>结构，比如下面是一段<code>if</code>结构的代码，就可以用且运算符改写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (i) &#123;</span><br><span class="line">  doSomething();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等价于</span><br><span class="line"></span><br><span class="line">i &amp;&amp; doSomething();</span><br></pre></td></tr></table></figure><p>上面代码的两种写法是等价的，但是后一种不容易看出目的，也不容易除错，建议谨慎使用。</p><p>且运算符可以多个连用，这时返回第一个布尔值为<code>false</code>的表达式的值。如果所有表达式的布尔值都为<code>true</code>，则返回最后一个表达式的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">true &amp;&amp; &#39;foo&#39; &amp;&amp; &#39;&#39; &amp;&amp; 4 &amp;&amp; &#39;foo&#39; &amp;&amp; true</span><br><span class="line">&#x2F;&#x2F; &#39;&#39;</span><br><span class="line"></span><br><span class="line">1 &amp;&amp; 2 &amp;&amp; 3</span><br><span class="line">&#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>上面代码中，例一里面，第一个布尔值为<code>false</code>的表达式为第三个表达式，所以得到一个空字符串。例二里面，所有表达式的布尔值都是<code>true</code>，所以返回最后一个表达式的值<code>3</code>。</p><h3 id="或运算符（-）"><a href="#或运算符（-）" class="headerlink" title="或运算符（||）"></a>或运算符（||）</h3><p>或运算符（<code>||</code>）也用于多个表达式的求值。它的运算规则是：如果第一个运算子的布尔值为<code>true</code>，则返回第一个运算子的值，且不再对第二个运算子求值；如果第一个运算子的布尔值为<code>false</code>，则返回第二个运算子的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#39;t&#39; || &#39;&#39; &#x2F;&#x2F; &quot;t&quot;</span><br><span class="line">&#39;t&#39; || &#39;f&#39; &#x2F;&#x2F; &quot;t&quot;</span><br><span class="line">&#39;&#39; || &#39;f&#39; &#x2F;&#x2F; &quot;f&quot;</span><br><span class="line">&#39;&#39; || &#39;&#39; &#x2F;&#x2F; &quot;&quot;</span><br></pre></td></tr></table></figure><p>短路规则对这个运算符也适用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">true || (x &#x3D; 2) &#x2F;&#x2F; true</span><br><span class="line">x &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，或运算符的第一个运算子为<code>true</code>，所以直接返回<code>true</code>，不再运行第二个运算子。所以，<code>x</code>的值没有改变。这种只通过第一个表达式的值，控制是否运行第二个表达式的机制，就称为“短路”（short-cut）。</p><p>或运算符可以多个连用，这时返回第一个布尔值为<code>true</code>的表达式的值。如果所有表达式都为<code>false</code>，则返回最后一个表达式的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">false || 0 || &#39;&#39; || 4 || &#39;foo&#39; || true</span><br><span class="line">&#x2F;&#x2F; 4</span><br><span class="line"></span><br><span class="line">false || 0 || &#39;&#39;</span><br><span class="line">&#x2F;&#x2F; &#39;&#39;</span><br></pre></td></tr></table></figure><p>上面代码中，例一里面，第一个布尔值为<code>true</code>的表达式是第四个表达式，所以得到数值4。例二里面，所有表达式的布尔值都为<code>false</code>，所以返回最后一个表达式的值。</p><p>或运算符常用于为一个变量设置默认值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function saveText(text) &#123;</span><br><span class="line">  text &#x3D; text || &#39;&#39;;</span><br><span class="line">  &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或者写成</span><br><span class="line">saveText(this.text || &#39;&#39;)</span><br></pre></td></tr></table></figure><p>上面代码表示，如果函数调用时，没有提供参数，则该参数默认设置为空字符串。</p><h3 id="三元条件运算符（-）"><a href="#三元条件运算符（-）" class="headerlink" title="三元条件运算符（?:）"></a>三元条件运算符（?:）</h3><p>三元条件运算符由问号（?）和冒号（:）组成，分隔三个表达式。它是 JavaScript 语言唯一一个需要三个运算子的运算符。如果第一个表达式的布尔值为<code>true</code>，则返回第二个表达式的值，否则返回第三个表达式的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;t&#39; ? &#39;hello&#39; : &#39;world&#39; &#x2F;&#x2F; &quot;hello&quot;</span><br><span class="line">0 ? &#39;hello&#39; : &#39;world&#39; &#x2F;&#x2F; &quot;world&quot;</span><br></pre></td></tr></table></figure><p>上面代码的<code>t</code>和<code>0</code>的布尔值分别为<code>true</code>和<code>false</code>，所以分别返回第二个和第三个表达式的值。</p><p>通常来说，三元条件表达式与<code>if...else</code>语句具有同样表达效果，前者可以表达的，后者也能表达。但是两者具有一个重大差别，<code>if...else</code>是语句，没有返回值；三元条件表达式是表达式，具有返回值。所以，在需要返回值的场合，只能使用三元条件表达式，而不能使用<code>if..else</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(true ? &#39;T&#39; : &#39;F&#39;);</span><br></pre></td></tr></table></figure><p>上面代码中，<code>console.log</code>方法的参数必须是一个表达式，这时就只能使用三元条件表达式。如果要用<code>if...else</code>语句，就必须改变整个代码写法了。</p><h2 id="二进制位运算符"><a href="#二进制位运算符" class="headerlink" title="二进制位运算符"></a>二进制位运算符</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><p>二进制位运算符用于直接对二进制位进行计算，一共有7个。</p><ul><li><strong>二进制或运算符</strong>（or）：符号为<code>|</code>，表示若两个二进制位都为<code>0</code>，则结果为<code>0</code>，否则为<code>1</code>。</li><li><strong>二进制与运算符</strong>（and）：符号为<code>&amp;</code>，表示若两个二进制位都为1，则结果为1，否则为0。</li><li><strong>二进制否运算符</strong>（not）：符号为<code>~</code>，表示对一个二进制位取反。</li><li><strong>异或运算符</strong>（xor）：符号为<code>^</code>，表示若两个二进制位不相同，则结果为1，否则为0。</li><li><strong>左移运算符</strong>（left shift）：符号为<code>&lt;&lt;</code>，详见下文解释。</li><li><strong>右移运算符</strong>（right shift）：符号为<code>&gt;&gt;</code>，详见下文解释。</li><li><strong>头部补零的右移运算符</strong>（zero filled right shift）：符号为<code>&gt;&gt;&gt;</code>，详见下文解释。</li></ul><p>这些位运算符直接处理每一个比特位（bit），所以是非常底层的运算，好处是速度极快，缺点是很不直观，许多场合不能使用它们，否则会使代码难以理解和查错。</p><p>有一点需要特别注意，位运算符只对整数起作用，如果一个运算子不是整数，会自动转为整数后再执行。另外，虽然在 JavaScript 内部，数值都是以64位浮点数的形式储存，但是做位运算的时候，是以32位带符号的整数进行运算的，并且返回值也是一个32位带符号的整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i &#x3D; i | 0;</span><br></pre></td></tr></table></figure><p>上面这行代码的意思，就是将<code>i</code>（不管是整数或小数）转为32位整数。</p><p>利用这个特性，可以写出一个函数，将任意数值转为32位整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function toInt32(x) &#123;</span><br><span class="line">  return x | 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这个函数将任意值与<code>0</code>进行一次或运算，这个位运算会自动将一个值转为32位整数。下面是这个函数的用法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">toInt32(1.001) &#x2F;&#x2F; 1</span><br><span class="line">toInt32(1.999) &#x2F;&#x2F; 1</span><br><span class="line">toInt32(1) &#x2F;&#x2F; 1</span><br><span class="line">toInt32(-1) &#x2F;&#x2F; -1</span><br><span class="line">toInt32(Math.pow(2, 32) + 1) &#x2F;&#x2F; 1</span><br><span class="line">toInt32(Math.pow(2, 32) - 1) &#x2F;&#x2F; -1</span><br></pre></td></tr></table></figure><p>上面代码中，<code>toInt32</code>可以将小数转为整数。对于一般的整数，返回值不会有任何变化。对于大于或等于2的32次方的整数，大于32位的数位都会被舍去。</p><h3 id="二进制或运算符"><a href="#二进制或运算符" class="headerlink" title="二进制或运算符"></a>二进制或运算符</h3><p>二进制或运算符（<code>|</code>）逐位比较两个运算子，两个二进制位之中只要有一个为<code>1</code>，就返回<code>1</code>，否则返回<code>0</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 | 3 &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>上面代码中，<code>0</code>和<code>3</code>的二进制形式分别是<code>00</code>和<code>11</code>，所以进行二进制或运算会得到<code>11</code>（即<code>3</code>）。</p><p>位运算只对整数有效，遇到小数时，会将小数部分舍去，只保留整数部分。所以，将一个小数与<code>0</code>进行二进制或运算，等同于对该数去除小数部分，即取整数位。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2.9 | 0 &#x2F;&#x2F; 2</span><br><span class="line">-2.9 | 0 &#x2F;&#x2F; -2</span><br></pre></td></tr></table></figure><p>需要注意的是，这种取整方法不适用超过32位整数最大值<code>2147483647</code>的数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2147483649.4 | 0;</span><br><span class="line">&#x2F;&#x2F; -2147483647</span><br></pre></td></tr></table></figure><h3 id="二进制与运算符"><a href="#二进制与运算符" class="headerlink" title="二进制与运算符"></a>二进制与运算符</h3><p>二进制与运算符（<code>&amp;</code>）的规则是逐位比较两个运算子，两个二进制位之中只要有一个位为<code>0</code>，就返回<code>0</code>，否则返回<code>1</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 &amp; 3 &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure><p>上面代码中，0（二进制<code>00</code>）和3（二进制<code>11</code>）进行二进制与运算会得到<code>00</code>（即<code>0</code>）。</p><h3 id="二进制否运算符"><a href="#二进制否运算符" class="headerlink" title="二进制否运算符"></a>二进制否运算符</h3><p>二进制否运算符（<code>~</code>）将每个二进制位都变为相反值（<code>0</code>变为<code>1</code>，<code>1</code>变为<code>0</code>）。它的返回结果有时比较难理解，因为涉及到计算机内部的数值表示机制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ 3 &#x2F;&#x2F; -4</span><br></pre></td></tr></table></figure><p>上面表达式对<code>3</code>进行二进制否运算，得到<code>-4</code>。之所以会有这样的结果，是因为位运算时，JavaScript 内部将所有的运算子都转为32位的二进制整数再进行运算。</p><p><code>3</code>的32位整数形式是<code>00000000000000000000000000000011</code>，二进制否运算以后得到<code>11111111111111111111111111111100</code>。由于第一位（符号位）是1，所以这个数是一个负数。JavaScript 内部采用补码形式表示负数，即需要将这个数减去1，再取一次反，然后加上负号，才能得到这个负数对应的10进制值。这个数减去1等于<code>11111111111111111111111111111011</code>，再取一次反得到<code>00000000000000000000000000000100</code>，再加上负号就是<code>-4</code>。考虑到这样的过程比较麻烦，可以简单记忆成，一个数与自身的取反值相加，等于-1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ -3 &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面表达式可以这样算，<code>-3</code>的取反值等于<code>-1</code>减去<code>-3</code>，结果为<code>2</code>。</p><p>对一个整数连续两次二进制否运算，得到它自身。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~3 &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>所有的位运算都只对整数有效。二进制否运算遇到小数时，也会将小数部分舍去，只保留整数部分。所以，对一个小数连续进行两次二进制否运算，能达到取整效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~~2.9 &#x2F;&#x2F; 2</span><br><span class="line">~~47.11 &#x2F;&#x2F; 47</span><br><span class="line">~~1.9999 &#x2F;&#x2F; 1</span><br><span class="line">~~3 &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>使用二进制否运算取整，是所有取整方法中最快的一种。</p><p>对字符串进行二进制否运算，JavaScript 引擎会先调用<code>Number</code>函数，将字符串转为数值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 相当于~Number(&#39;011&#39;)</span><br><span class="line">~&#39;011&#39;  &#x2F;&#x2F; -12</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 相当于~Number(&#39;42 cats&#39;)</span><br><span class="line">~&#39;42 cats&#39; &#x2F;&#x2F; -1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 相当于~Number(&#39;0xcafebabe&#39;)</span><br><span class="line">~&#39;0xcafebabe&#39; &#x2F;&#x2F; 889275713</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 相当于~Number(&#39;deadbeef&#39;)</span><br><span class="line">~&#39;deadbeef&#39; &#x2F;&#x2F; -1</span><br></pre></td></tr></table></figure><p><code>Number</code>函数将字符串转为数值的规则，参见《数据的类型转换》一章。</p><p>对于其他类型的值，二进制否运算也是先用<code>Number</code>转为数值，然后再进行处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 相当于 ~Number([])</span><br><span class="line">~[] &#x2F;&#x2F; -1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 相当于 ~Number(NaN)</span><br><span class="line">~NaN &#x2F;&#x2F; -1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 相当于 ~Number(null)</span><br><span class="line">~null &#x2F;&#x2F; -1</span><br></pre></td></tr></table></figure><h3 id="异或运算符"><a href="#异或运算符" class="headerlink" title="异或运算符"></a>异或运算符</h3><p>异或运算（<code>^</code>）在两个二进制位不同时返回<code>1</code>，相同时返回<code>0</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 ^ 3 &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>上面表达式中，<code>0</code>（二进制<code>00</code>）与<code>3</code>（二进制<code>11</code>）进行异或运算，它们每一个二进制位都不同，所以得到<code>11</code>（即<code>3</code>）。</p><p>“异或运算”有一个特殊运用，连续对两个数<code>a</code>和<code>b</code>进行三次异或运算，<code>a^=b; b^=a; a^=b;</code>，可以<a href="https://en.wikipedia.org/wiki/XOR_swap_algorithm" target="_blank" rel="noopener">互换</a>它们的值。这意味着，使用“异或运算”可以在不引入临时变量的前提下，互换两个变量的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; 10;</span><br><span class="line">var b &#x3D; 99;</span><br><span class="line"></span><br><span class="line">a ^&#x3D; b, b ^&#x3D; a, a ^&#x3D; b;</span><br><span class="line"></span><br><span class="line">a &#x2F;&#x2F; 99</span><br><span class="line">b &#x2F;&#x2F; 10</span><br></pre></td></tr></table></figure><p>这是互换两个变量的值的最快方法。</p><p>异或运算也可以用来取整。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12.9 ^ 0 &#x2F;&#x2F; 12</span><br></pre></td></tr></table></figure><h3 id="左移运算符"><a href="#左移运算符" class="headerlink" title="左移运算符"></a>左移运算符</h3><p>左移运算符（<code>&lt;&lt;</code>）表示将一个数的二进制值向左移动指定的位数，尾部补<code>0</code>，即乘以<code>2</code>的指定次方。向左移动的时候，最高位的符号位是一起移动的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 4 的二进制形式为100，</span><br><span class="line">&#x2F;&#x2F; 左移一位为1000（即十进制的8）</span><br><span class="line">&#x2F;&#x2F; 相当于乘以2的1次方</span><br><span class="line">4 &lt;&lt; 1</span><br><span class="line">&#x2F;&#x2F; 8</span><br><span class="line"></span><br><span class="line">-4 &lt;&lt; 1</span><br><span class="line">&#x2F;&#x2F; -8</span><br></pre></td></tr></table></figure><p>上面代码中，<code>-4</code>左移一位得到<code>-8</code>，是因为<code>-4</code>的二进制形式是<code>11111111111111111111111111111100</code>，左移一位后得到<code>11111111111111111111111111111000</code>，该数转为十进制（减去1后取反，再加上负号）即为<code>-8</code>。</p><p>如果左移0位，就相当于将该数值转为32位整数，等同于取整，对于正数和负数都有效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">13.5 &lt;&lt; 0</span><br><span class="line">&#x2F;&#x2F; 13</span><br><span class="line"></span><br><span class="line">-13.5 &lt;&lt; 0</span><br><span class="line">&#x2F;&#x2F; -13</span><br></pre></td></tr></table></figure><p>左移运算符用于二进制数值非常方便。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var color &#x3D; &#123;r: 186, g: 218, b: 85&#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; RGB to HEX</span><br><span class="line">&#x2F;&#x2F; (1 &lt;&lt; 24)的作用为保证结果是6位数</span><br><span class="line">var rgb2hex &#x3D; function(r, g, b) &#123;</span><br><span class="line">  return &#39;#&#39; + ((1 &lt;&lt; 24) + (r &lt;&lt; 16) + (g &lt;&lt; 8) + b)</span><br><span class="line">    .toString(16) &#x2F;&#x2F; 先转成十六进制，然后返回字符串</span><br><span class="line">    .substr(1);   &#x2F;&#x2F; 去除字符串的最高位，返回后面六个字符串</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rgb2hex(color.r, color.g, color.b)</span><br><span class="line">&#x2F;&#x2F; &quot;#bada55&quot;</span><br></pre></td></tr></table></figure><p>上面代码使用左移运算符，将颜色的 RGB 值转为 HEX 值。</p><h3 id="右移运算符"><a href="#右移运算符" class="headerlink" title="右移运算符"></a>右移运算符</h3><p>右移运算符（<code>&gt;&gt;</code>）表示将一个数的二进制值向右移动指定的位数。如果是正数，头部全部补<code>0</code>；如果是负数，头部全部补<code>1</code>。右移运算符基本上相当于除以<code>2</code>的指定次方（最高位即符号位参与移动）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">4 &gt;&gt; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line">&#x2F;*</span><br><span class="line">&#x2F;&#x2F; 因为4的二进制形式为 00000000000000000000000000000100，</span><br><span class="line">&#x2F;&#x2F; 右移一位得到 00000000000000000000000000000010，</span><br><span class="line">&#x2F;&#x2F; 即为十进制的2</span><br><span class="line">*&#x2F;</span><br><span class="line"></span><br><span class="line">-4 &gt;&gt; 1</span><br><span class="line">&#x2F;&#x2F; -2</span><br><span class="line">&#x2F;*</span><br><span class="line">&#x2F;&#x2F; 因为-4的二进制形式为 11111111111111111111111111111100，</span><br><span class="line">&#x2F;&#x2F; 右移一位，头部补1，得到 11111111111111111111111111111110,</span><br><span class="line">&#x2F;&#x2F; 即为十进制的-2</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><p>右移运算可以模拟 2 的整除运算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">5 &gt;&gt; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line">&#x2F;&#x2F; 相当于 5 &#x2F; 2 &#x3D; 2</span><br><span class="line"></span><br><span class="line">21 &gt;&gt; 2</span><br><span class="line">&#x2F;&#x2F; 5</span><br><span class="line">&#x2F;&#x2F; 相当于 21 &#x2F; 4 &#x3D; 5</span><br><span class="line"></span><br><span class="line">21 &gt;&gt; 3</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line">&#x2F;&#x2F; 相当于 21 &#x2F; 8 &#x3D; 2</span><br><span class="line"></span><br><span class="line">21 &gt;&gt; 4</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 相当于 21 &#x2F; 16 &#x3D; 1</span><br></pre></td></tr></table></figure><h3 id="头部补零的右移运算符"><a href="#头部补零的右移运算符" class="headerlink" title="头部补零的右移运算符"></a>头部补零的右移运算符</h3><p>头部补零的右移运算符（<code>&gt;&gt;&gt;</code>）与右移运算符（<code>&gt;&gt;</code>）只有一个差别，就是一个数的二进制形式向右移动时，头部一律补零，而不考虑符号位。所以，该运算总是得到正值。对于正数，该运算的结果与右移运算符（<code>&gt;&gt;</code>）完全一致，区别主要在于负数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">4 &gt;&gt;&gt; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line">-4 &gt;&gt;&gt; 1</span><br><span class="line">&#x2F;&#x2F; 2147483646</span><br><span class="line">&#x2F;*</span><br><span class="line">&#x2F;&#x2F; 因为-4的二进制形式为11111111111111111111111111111100，</span><br><span class="line">&#x2F;&#x2F; 带符号位的右移一位，得到01111111111111111111111111111110，</span><br><span class="line">&#x2F;&#x2F; 即为十进制的2147483646。</span><br><span class="line">*&#x2F;</span><br></pre></td></tr></table></figure><p>这个运算实际上将一个值转为32位无符号整数。</p><p>查看一个负整数在计算机内部的储存形式，最快的方法就是使用这个运算符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1 &gt;&gt;&gt; 0 &#x2F;&#x2F; 4294967295</span><br></pre></td></tr></table></figure><p>上面代码表示，<code>-1</code>作为32位整数时，内部的储存形式使用无符号整数格式解读，值为 4294967295（即<code>(2^32)-1</code>，等于<code>11111111111111111111111111111111</code>）。</p><h3 id="开关作用"><a href="#开关作用" class="headerlink" title="开关作用"></a>开关作用</h3><p>位运算符可以用作设置对象属性的开关。</p><p>假定某个对象有四个开关，每个开关都是一个变量。那么，可以设置一个四位的二进制数，它的每个位对应一个开关。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var FLAG_A &#x3D; 1; &#x2F;&#x2F; 0001</span><br><span class="line">var FLAG_B &#x3D; 2; &#x2F;&#x2F; 0010</span><br><span class="line">var FLAG_C &#x3D; 4; &#x2F;&#x2F; 0100</span><br><span class="line">var FLAG_D &#x3D; 8; &#x2F;&#x2F; 1000</span><br></pre></td></tr></table></figure><p>上面代码设置 A、B、C、D 四个开关，每个开关分别占有一个二进制位。</p><p>然后，就可以用二进制与运算，检查当前设置是否打开了指定开关。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var flags &#x3D; 5; &#x2F;&#x2F; 二进制的0101</span><br><span class="line"></span><br><span class="line">if (flags &amp; FLAG_C) &#123;</span><br><span class="line">  &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 0101 &amp; 0100 &#x3D;&gt; 0100 &#x3D;&gt; true</span><br></pre></td></tr></table></figure><p>上面代码检验是否打开了开关<code>C</code>。如果打开，会返回<code>true</code>，否则返回<code>false</code>。</p><p>现在假设需要打开<code>A</code>、<code>B</code>、<code>D</code>三个开关，我们可以构造一个掩码变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mask &#x3D; FLAG_A | FLAG_B | FLAG_D;</span><br><span class="line">&#x2F;&#x2F; 0001 | 0010 | 1000 &#x3D;&gt; 1011</span><br></pre></td></tr></table></figure><p>上面代码对<code>A</code>、<code>B</code>、<code>D</code>三个变量进行二进制或运算，得到掩码值为二进制的<code>1011</code>。</p><p>有了掩码，二进制或运算可以确保打开指定的开关。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flags &#x3D; flags | mask;</span><br></pre></td></tr></table></figure><p>上面代码中，计算后得到的<code>flags</code>变量，代表三个开关的二进制位都打开了。</p><p>二进制与运算可以将当前设置中凡是与开关设置不一样的项，全部关闭。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flags &#x3D; flags &amp; mask;</span><br></pre></td></tr></table></figure><p>异或运算可以切换（toggle）当前设置，即第一次执行可以得到当前设置的相反值，再执行一次又得到原来的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flags &#x3D; flags ^ mask;</span><br></pre></td></tr></table></figure><p>二进制否运算可以翻转当前设置，即原设置为<code>0</code>，运算后变为<code>1</code>；原设置为<code>1</code>，运算后变为<code>0</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flags &#x3D; ~flags;</span><br></pre></td></tr></table></figure><h2 id="其他运算符，运算顺序"><a href="#其他运算符，运算顺序" class="headerlink" title="其他运算符，运算顺序"></a>其他运算符，运算顺序</h2><h3 id="void-运算符"><a href="#void-运算符" class="headerlink" title="void 运算符"></a>void 运算符</h3><p><code>void</code>运算符的作用是执行一个表达式，然后不返回任何值，或者说返回<code>undefined</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void 0 &#x2F;&#x2F; undefined</span><br><span class="line">void(0) &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><p>上面是<code>void</code>运算符的两种写法，都正确。建议采用后一种形式，即总是使用圆括号。因为<code>void</code>运算符的优先性很高，如果不使用括号，容易造成错误的结果。比如，<code>void 4 + 7</code>实际上等同于<code>(void 4) + 7</code>。</p><p>下面是<code>void</code>运算符的一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 3;</span><br><span class="line">void (x &#x3D; 5) &#x2F;&#x2F;undefined</span><br><span class="line">x &#x2F;&#x2F; 5</span><br></pre></td></tr></table></figure><p>这个运算符的主要用途是浏览器的书签工具（Bookmarklet），以及在超级链接中插入代码防止网页跳转。</p><p>请看下面的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function f() &#123;</span><br><span class="line">  console.log(&#39;Hello World&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;example.com&quot; onclick&#x3D;&quot;f(); return false;&quot;&gt;点击&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>上面代码中，点击链接后，会先执行<code>onclick</code>的代码，由于<code>onclick</code>返回<code>false</code>，所以浏览器不会跳转到 example.com。</p><p><code>void</code>运算符可以取代上面的写法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript: void(f())&quot;&gt;文字&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>下面是一个更实际的例子，用户点击链接提交表单，但是不产生页面跳转。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript: void(document.form.submit())&quot;&gt;</span><br><span class="line">  提交</span><br><span class="line">&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h3 id="逗号运算符"><a href="#逗号运算符" class="headerlink" title="逗号运算符"></a>逗号运算符</h3><p>逗号运算符用于对两个表达式求值，并返回后一个表达式的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#39;a&#39;, &#39;b&#39; &#x2F;&#x2F; &quot;b&quot;</span><br><span class="line"></span><br><span class="line">var x &#x3D; 0;</span><br><span class="line">var y &#x3D; (x++, 10);</span><br><span class="line">x &#x2F;&#x2F; 1</span><br><span class="line">y &#x2F;&#x2F; 10</span><br></pre></td></tr></table></figure><p>上面代码中，逗号运算符返回后一个表达式的值。</p><p>逗号运算符的一个用途是，在返回一个值之前，进行一些辅助操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var value &#x3D; (console.log(&#39;Hi!&#39;), true);</span><br><span class="line">&#x2F;&#x2F; Hi!</span><br><span class="line"></span><br><span class="line">value &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面代码中，先执行逗号之前的操作，然后返回逗号后面的值。</p><h3 id="运算顺序"><a href="#运算顺序" class="headerlink" title="运算顺序"></a>运算顺序</h3><h4 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h4><p>JavaScript 各种运算符的优先级别是不一样的。优先级高的运算符先执行，优先级低的运算符后执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 + 5 * 6 &#x2F;&#x2F; 34</span><br></pre></td></tr></table></figure><p>上面的代码中，乘法运算符（<code>*</code>）的优先性高于加法运算符（<code>+</code>），所以先执行乘法，再执行加法，相当于下面这样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 + (5 * 6) &#x2F;&#x2F; 34</span><br></pre></td></tr></table></figure><p>如果多个运算符混写在一起，常常会导致令人困惑的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">var arr &#x3D; [];</span><br><span class="line"></span><br><span class="line">var y &#x3D; arr.length &lt;&#x3D; 0 || arr[0] &#x3D;&#x3D;&#x3D; undefined ? x : arr[0];</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>y</code>的值就很难看出来，因为这个表达式涉及5个运算符，到底谁的优先级最高，实在不容易记住。</p><p>根据语言规格，这五个运算符的优先级从高到低依次为：小于等于（<code>&lt;=</code>)、严格相等（<code>===</code>）、或（<code>||</code>）、三元（<code>?:</code>）、等号（<code>=</code>）。因此上面的表达式，实际的运算顺序如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var y &#x3D; ((arr.length &lt;&#x3D; 0) || (arr[0] &#x3D;&#x3D;&#x3D; undefined)) ? x : arr[0];</span><br></pre></td></tr></table></figure><p>记住所有运算符的优先级，是非常难的，也是没有必要的。</p><h4 id="圆括号的作用"><a href="#圆括号的作用" class="headerlink" title="圆括号的作用"></a>圆括号的作用</h4><p>圆括号（<code>()</code>）可以用来提高运算的优先级，因为它的优先级是最高的，即圆括号中的表达式会第一个运算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(4 + 5) * 6 &#x2F;&#x2F; 54</span><br></pre></td></tr></table></figure><p>上面代码中，由于使用了圆括号，加法会先于乘法执行。</p><p>运算符的优先级别十分繁杂，且都是硬性规定，因此建议总是使用圆括号，保证运算顺序清晰可读，这对代码的维护和除错至关重要。</p><p>顺便说一下，圆括号不是运算符，而是一种语法结构。它一共有两种用法：一种是把表达式放在圆括号之中，提升运算的优先级；另一种是跟在函数的后面，作用是调用函数。</p><p>注意，因为圆括号不是运算符，所以不具有求值作用，只改变运算的优先级。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">(x) &#x3D; 2;</span><br></pre></td></tr></table></figure><p>上面代码的第二行，如果圆括号具有求值作用，那么就会变成<code>1 = 2</code>，这是会报错了。但是，上面的代码可以运行，这验证了圆括号只改变优先级，不会求值。</p><p>这也意味着，如果整个表达式都放在圆括号之中，那么不会有任何效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(expression)</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">expression</span><br></pre></td></tr></table></figure><p>函数放在圆括号中，会返回函数本身。如果圆括号紧跟在函数的后面，就表示调用函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;</span><br><span class="line">  return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(f) &#x2F;&#x2F; function f()&#123;return 1;&#125;</span><br><span class="line">f() &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，函数放在圆括号之中会返回函数本身，圆括号跟在函数后面则是调用函数。</p><p>圆括号之中，只能放置表达式，如果将语句放在圆括号之中，就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(var a &#x3D; 1)</span><br><span class="line">&#x2F;&#x2F; SyntaxError: Unexpected token var</span><br></pre></td></tr></table></figure><h4 id="左结合与右结合"><a href="#左结合与右结合" class="headerlink" title="左结合与右结合"></a>左结合与右结合</h4><p>对于优先级别相同的运算符，同时出现的时候，就会有计算顺序的问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a OP b OP c</span><br></pre></td></tr></table></figure><p>上面代码中，<code>OP</code>表示运算符。它可以有两种解释方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 方式一</span><br><span class="line">(a OP b) OP c</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 方式二</span><br><span class="line">a OP (b OP c)</span><br></pre></td></tr></table></figure><p>上面的两种方式，得到的计算结果往往是不一样的。方式一是将左侧两个运算数结合在一起，采用这种解释方式的运算符，称为“左结合”运算符；方式二是将右侧两个运算数结合在一起，这样的运算符称为“右结合”运算符。</p><p>JavaScript 语言的大多数运算符是“左结合”，请看下面加法运算符的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x + y + z</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 引擎解释如下</span><br><span class="line">(x + y) + z</span><br></pre></td></tr></table></figure><p>上面代码中，<code>x</code>与<code>y</code>结合在一起，它们的预算结果再与<code>z</code>进行运算。</p><p>少数运算符是“右结合”，其中最主要的是赋值运算符（<code>=</code>）和三元条件运算符（<code>?:</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">w &#x3D; x &#x3D; y &#x3D; z;</span><br><span class="line">q &#x3D; a ? b : c ? d : e ? f : g;</span><br></pre></td></tr></table></figure><p>上面代码的解释方式如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">w &#x3D; (x &#x3D; (y &#x3D; z));</span><br><span class="line">q &#x3D; a ? b : (c ? d : (e ? f : g));</span><br></pre></td></tr></table></figure><p>上面的两行代码，都是右侧的运算数结合在一起。</p><p>另外，指数运算符（<code>**</code>）也是右结合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 ** 3 ** 2</span><br><span class="line">&#x2F;&#x2F; 相当于 2 ** (3 ** 2)</span><br><span class="line">&#x2F;&#x2F; 512</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进阶教程 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 前端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript从入门到进阶</title>
      <link href="/2021/04/30/JavaScript%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E8%BF%9B%E9%98%B6/"/>
      <url>/2021/04/30/JavaScript%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="JavaScript入门"><a href="#JavaScript入门" class="headerlink" title="JavaScript入门"></a>JavaScript入门</h2><p>入门参考教程（通俗易懂）：<a href="https://wangdoc.com/javascript/" target="_blank" rel="noopener">https://wangdoc.com/javascript/</a></p><h3 id="JS术语介绍："><a href="#JS术语介绍：" class="headerlink" title="JS术语介绍："></a>JS术语介绍：</h3><blockquote><p>JavaScript在1995年由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成。因为Netscape与Sun合作，Netscape管理层希望它外观看起来像Java，因此取名为JavaScript。但实际上它的语法风格与Self及Scheme较为接近。</p><ul><li><strong>ECMAScript</strong>：一个由 ECMA International 进行标准化，TC39 委员会进行监督的语言。通常用于指代标准本身。</li><li><strong>JavaScript</strong>：ECMAScript 标准的各种实现的最常用称呼。这个术语并不局限于某个特定版本的 ECMAScript 规范，并且可能被用于任何不同程度的任意版本的 ECMAScript 的实现。</li><li><strong>ECMAScript 5 (ES5)</strong>：ECMAScript 的第五版修订，于 2009 年完成标准化。这个规范在所有现代浏览器中都相当完全的实现了。</li><li><strong>ECMAScript 6 (ES6) / ECMAScript 2015 (ES2015)</strong>：ECMAScript 的第六版修订，于 2015 年完成标准化。这个标准被部分实现于大部分现代浏览器。可以查阅<a href="https://kangax.github.io/compat-table/es6/" target="_blank" rel="noopener">这张兼容性表</a>来查看不同浏览器和工具的实现情况。</li><li><strong>ECMAScript 2016</strong>：预计的第七版 ECMAScript 修订，计划于明年夏季发布。这份规范具体将包含哪些特性还没有最终确定</li><li><strong>ECMAScript Proposals</strong>：被考虑加入未来版本 ECMAScript 标准的特性与语法提案，他们需要经历五个阶段：Strawman（稻草人），Proposal（提议），Draft（草案），Candidate（候选）以及 Finished （完成）。</li></ul></blockquote><p><strong>定义：</strong>JavaScript是一种动态类型、弱类型、基于原型的客户端脚本语言，用来给HTML网页增加动态功能。</p><blockquote><p>动态：</p><p>在运行时确定数据类型。变量使用之前不需要类型声明，通常变量的类型是被赋值的那个值的类型。</p><p>弱类：</p><p>计算时可以不同类型之间对使用者透明地隐式转换，即使类型不正确，也能通过隐式转换来得到正确的类型。</p><p>原型：</p><p>新对象继承对象（作为模版），将自身的属性共享给新对象，模版对象称为原型。这样新对象实例化后不但可以享有自己创建时和运行时定义的属性，而且可以享有原型对象的属性。</p><p>PS：新对象指函数，模版对象是实例对象，实例对象是不能继承原型的，函数才可以的。</p></blockquote><p><strong>特点：</strong></p><ol><li>是一种边解释边执行的脚本语言，不需要编译。  </li><li>主要用来向HTML页面添加交互行为。  </li><li>可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。  </li><li>平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行。  </li></ol><h3 id="JavaScript组成"><a href="#JavaScript组成" class="headerlink" title="JavaScript组成"></a>JavaScript组成</h3><p><strong>ECMAScript(核心)</strong></p><p>​    描述了该语言的语法和基本对象；作为核心，它规定了语言的组成部分：语法、类型、语句、关键字、保留字、操作符、对象 PS：*不完全兼容的实现</p><p><strong>DOM（文档对象模型）:</strong></p><p>​    操作Html标签的方法和接口；DOM把整个页面映射为一个多层节点结果，开发人员可借助DOM提供的API，轻松地删除、添加、替换或修改任何节点。 PS：DOM也有级别，分为DOM1、DOM2、DOM3，拓展不少规范和新接口。<br><strong>BOM（浏览器对象模型）:</strong></p><p>​    操作浏览器的方法和接口；支持可以访问和操作浏览器窗口的浏览器对象模型，开发人员可以控制浏览器显示的页面以外的部分。 PS：BOM未形成规范</p><p><strong>JavaScript日常用途：</strong></p><p>1.嵌入动态文本于HTML页面。<br>2.对浏览器事件做出响应。<br>3.读写HTML元素。<br>4.在数据被提交到服务器之前验证数据。<br>5.检测访客的浏览器信息。<br>6.控制cookies，包括创建和修改等。<br>7.基于Node.js技术进行服务器端编程。</p><p><strong>什么是函数？</strong><br>    函数的含义：类似于Java中的方法，是完成特定任务的代码语句块；<br>    使用更简单：不用定义属于某个类，直接使用；<br>    函数分类：系统函数和自定义函数</p><p><strong>BOM编程：</strong><br>1.BOM可实现功能：<br>      1.弹出新的浏览器窗口<br>      2.移动、关闭浏览器窗口以及调整窗口的大小<br>      3.页面的前进、后退<br>具体地址：<a href="https://blog.csdn.net/nanjinzhu/article/details/82718317" target="_blank" rel="noopener">https://blog.csdn.net/nanjinzhu/article/details/82718317</a></p><p><strong>DOM编程：</strong></p><ol><li>特点：任何一个节点都有若干个子节点，但却只有一个父节点。</li><li>地址：<a href="https://blog.csdn.net/yanyan965914478/article/details/90209377" target="_blank" rel="noopener">https://blog.csdn.net/yanyan965914478/article/details/90209377</a></li></ol><p>BOM和DOM具体内容：<a href="https://blog.csdn.net/qq877507054/article/details/51395830" target="_blank" rel="noopener">https://blog.csdn.net/qq877507054/article/details/51395830</a></p><p><strong>JavaScript作用域：</strong></p><blockquote><p> 在JavaScript中，作用域为可访问变量，对象，函数的集合。<br>变量在函数内部声明即为局部变量，在函数外部定义即为全局变量。<br>局部变量只能在函数内访问，全局变量在网页中所有脚本和函数均可访问。<br>（注意：如果变量在函数内没有使用var关键字，该变量自动为全局变量）<br>生命周期：局部变量在函数执行完毕后销毁，全局变量在页面关闭后销毁。</p></blockquote><h3 id="JavaScript-基本语法"><a href="#JavaScript-基本语法" class="headerlink" title="JavaScript 基本语法"></a>JavaScript 基本语法</h3><h4 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h4><p>JavaScript 程序的执行单位为行（line），也就是一行一行地执行。一般情况下，每一行就是一个语句。</p><p>语句以分号结尾，一个分号就表示一个语句结束。多个语句可以写在一行内。</p><p>分号前面可以没有任何内容，JavaScript 引擎将其视为空语句。</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量是对“值”的具名引用。变量就是为“值”起名，然后引用这个名字，就等同于引用这个值。变量的名字就是变量名。</p><p>注意，JavaScript 的变量名区分大小写，<code>A</code>和<code>a</code>是两个不同的变量。</p><p>如果只是声明变量而没有赋值，则该变量的值是<code>undefined</code>。<code>undefined</code>是一个特殊的值，表示“无定义”。</p><p>如果变量赋值的时候，忘了写<code>var</code>命令，这条语句也是有效的。但是，不写<code>var</code>的做法，不利于表达意图，而且容易不知不觉地创建全局变量，所以建议总是使用<code>var</code>命令声明变量。</p><p>JavaScript 是一种动态类型语言，也就是说，变量的类型没有限制，变量可以随时更改类型。</p><p>如果使用<code>var</code>重新声明一个已经存在的变量，是无效的。但是，如果第二次声明的时候还进行了赋值，则会覆盖掉前面的值。</p><p><strong>变量提升</strong></p><p>JavaScript 引擎的工作方式是，先解析代码，获取所有被声明的变量，然后再一行一行地运行。这造成的结果，就是所有的变量的声明语句，都会被提升到代码的头部，这就叫做变量提升（hoisting）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(a);</span><br><span class="line">var a &#x3D; 1;</span><br></pre></td></tr></table></figure><p>上面代码首先使用<code>console.log</code>方法，在控制台（console）显示变量<code>a</code>的值。这时变量<code>a</code>还没有声明和赋值，所以这是一种错误的做法，但是实际上不会报错。因为存在变量提升，真正运行的是下面的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var a;</span><br><span class="line">console.log(a);</span><br><span class="line">a &#x3D; 1;</span><br></pre></td></tr></table></figure><p>最后的结果是显示<code>undefined</code>，表示变量<code>a</code>已声明，但还未赋值。</p><h4 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h4><p>标识符（identifier）指的是用来识别各种值的合法名称。最常见的标识符就是变量名，以及后面要提到的函数名。JavaScript 语言的标识符对大小写敏感，所以<code>a</code>和<code>A</code>是两个不同的标识符。</p><p>标识符有一套命名规则，不符合规则的就是非法标识符。JavaScript 引擎遇到非法标识符，就会报错。</p><p>简单说，标识符命名规则如下。</p><ul><li>第一个字符，可以是任意 Unicode 字母（包括英文字母和其他语言的字母），以及美元符号（<code>$</code>）和下划线（<code>_</code>）。</li><li>第二个字符及后面的字符，除了 Unicode 字母、美元符号和下划线，还可以用数字<code>0-9</code>。</li></ul><p>下面这些都是合法的标识符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">arg0</span><br><span class="line">_tmp</span><br><span class="line">$elem</span><br><span class="line">π</span><br></pre></td></tr></table></figure><p>下面这些则是不合法的标识符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1a  &#x2F;&#x2F; 第一个字符不能是数字</span><br><span class="line">***  &#x2F;&#x2F; 标识符不能包含星号</span><br><span class="line">a+b  &#x2F;&#x2F; 标识符不能包含加号</span><br><span class="line">-d  &#x2F;&#x2F; 标识符不能包含减号或连词线</span><br></pre></td></tr></table></figure><p>中文是合法的标识符，可以用作变量名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var 临时变量 &#x3D; 1;</span><br></pre></td></tr></table></figure><blockquote><p>JavaScript 有一些保留字，不能用作标识符：arguments、break、case、catch、class、const、continue、debugger、default、delete、do、else、enum、eval、export、extends、false、finally、for、function、if、implements、import、in、instanceof、interface、let、new、null、package、private、protected、public、return、static、super、switch、this、throw、true、try、typeof、var、void、while、with、yield。</p></blockquote><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>源码中被 JavaScript 引擎忽略的部分就叫做注释，它的作用是对代码进行解释。JavaScript 提供两种注释的写法：一种是单行注释，用<code>//</code>起头；另一种是多行注释，放在<code>/*</code>和<code>*/</code>之间。此外，由于历史上 JavaScript 可以兼容 HTML 代码的注释，所以<code>&lt;!--</code>和<code>--&gt;</code>也被视为合法的单行注释。</p><h4 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h4><p>JavaScript 使用大括号，将多个相关的语句组合在一起，称为“区块”（block）。</p><p>对于<code>var</code>命令来说，JavaScript 的区块不构成单独的作用域（scope）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  var a &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码在区块内部，使用<code>var</code>命令声明并赋值了变量<code>a</code>，然后在区块外部，变量<code>a</code>依然有效，区块对于<code>var</code>命令不构成单独的作用域，与不使用区块的情况没有任何区别。在 JavaScript 语言中，单独使用区块并不常见，区块往往用来构成其他更复杂的语法结构，比如<code>for</code>、<code>if</code>、<code>while</code>、<code>function</code>等。</p><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><p>JavaScript 提供<code>if</code>结构和<code>switch</code>结构，完成条件判断，即只有满足预设的条件，才会执行相应的语句。</p><p>注意，<code>if</code>后面的表达式之中，不要混淆赋值表达式（<code>=</code>）、严格相等运算符（<code>===</code>）和相等运算符（<code>==</code>）。尤其是赋值表达式不具有比较作用。建议优先采用“严格相等运算符”（<code>===</code>），而不是“相等运算符”（<code>==</code>）。</p><p><strong>1. if 结构</strong></p><p><code>if</code>结构先判断一个表达式的布尔值，然后根据布尔值的真伪，执行不同的语句。所谓布尔值，指的是 JavaScript 的两个特殊值，<code>true</code>表示真，<code>false</code>表示<code>伪</code>。</p><p><strong>2. if…else 结构</strong></p><p><code>if</code>代码块后面，还可以跟一个<code>else</code>代码块，表示不满足条件时，所要执行的代码。</p><p><strong>3. switch 结构</strong></p><p>多个<code>if...else</code>连在一起使用的时候，可以转为使用更方便的<code>switch</code>结构。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">switch (fruit) &#123;</span><br><span class="line">  case &quot;banana&quot;:</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">    break;</span><br><span class="line">  case &quot;apple&quot;:</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">    break;</span><br><span class="line">  default:</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，每个<code>case</code>代码块内部的<code>break</code>语句不能少，否则会接下去执行下一个<code>case</code>代码块，而不是跳出<code>switch</code>结构。</p><p><code>switch</code>语句部分和<code>case</code>语句部分，都可以使用表达式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">switch (1 + 3) &#123;</span><br><span class="line">  case 2 + 2:</span><br><span class="line">    f();</span><br><span class="line">    break;</span><br><span class="line">  default:</span><br><span class="line">    neverHappens();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的<code>default</code>部分，是永远不会执行到的。</p><p>需要注意的是，<code>switch</code>语句后面的表达式，与<code>case</code>语句后面的表示式比较运行结果时，采用的是严格相等运算符（<code>===</code>），而不是相等运算符（<code>==</code>），这意味着比较时不会发生类型转换。</p><p><strong>三元运算符 ?:</strong></p><p>JavaScript 还有一个三元运算符（即该运算符需要三个运算子）<code>?:</code>，也可以用于逻辑判断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(条件) ? 表达式1 : 表达式2</span><br></pre></td></tr></table></figure><p>上面代码中，如果“条件”为<code>true</code>，则返回“表达式1”的值，否则返回“表达式2”的值。这个三元运算符可以被视为<code>if...else...</code>的简写形式，因此可以用于多种场合。</p><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><p><strong>1. while 循环</strong></p><p><code>While</code>语句包括一个循环条件和一段代码块，只要条件为真，就不断循环执行代码块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">while (条件)</span><br><span class="line">  语句;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或者</span><br><span class="line">while (条件) 语句;</span><br></pre></td></tr></table></figure><p><strong>2. for 循环</strong></p><p><code>for</code>语句是循环命令的另一种形式，可以指定循环的起点、终点和终止条件。它的格式如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for (初始化表达式; 条件; 递增表达式)</span><br><span class="line">  语句</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或者</span><br><span class="line"></span><br><span class="line">for (初始化表达式; 条件; 递增表达式) &#123;</span><br><span class="line">  语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>for</code>语句后面的括号里面，有三个表达式。</p><ul><li>初始化表达式（initialize）：确定循环变量的初始值，只在循环开始时执行一次。</li><li>条件表达式（test）：每轮循环开始时，都要执行这个条件表达式，只有值为真，才继续进行循环。</li><li>递增表达式（increment）：每轮循环的最后一个操作，通常用来递增循环变量。</li></ul><p><code>for</code>语句的三个部分（initialize、test、increment），可以省略任何一个，也可以全部省略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for ( ; ; )&#123;</span><br><span class="line">  console.log(&#39;Hello World&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码省略了<code>for</code>语句表达式的三个部分，结果就导致了一个无限循环。</p><p><strong>3. do…while 循环</strong></p><p><code>do...while</code>循环与<code>while</code>循环类似，唯一的区别就是先运行一次循环体，然后判断循环条件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">do</span><br><span class="line">  语句</span><br><span class="line">while (条件);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或者</span><br><span class="line">do &#123;</span><br><span class="line">  语句</span><br><span class="line">&#125; while (条件);</span><br></pre></td></tr></table></figure><p>不管条件是否为真，<code>do...while</code>循环至少运行一次，这是这种结构最大的特点。另外，<code>while</code>语句后面的分号注意不要省略。</p><p>下面是一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 3;</span><br><span class="line">var i &#x3D; 0;</span><br><span class="line"></span><br><span class="line">do &#123;</span><br><span class="line">  console.log(i);</span><br><span class="line">  i++;</span><br><span class="line">&#125; while(i &lt; x);</span><br></pre></td></tr></table></figure><p><strong>4.break 语句和 continue 语句</strong></p><p><code>break</code>语句和<code>continue</code>语句都具有跳转作用，可以让代码不按既有的顺序执行。</p><p><code>break</code>语句用于跳出代码块或循环。<code>if</code>循环或<code>for</code>循环都可以使用<code>break</code>语句跳出循环。</p><p><code>continue</code>语句用于立即终止本轮循环，返回循环结构的头部，开始下一轮循环。</p><h4 id="标签（label）"><a href="#标签（label）" class="headerlink" title="标签（label）"></a>标签（label）</h4><p>JavaScript 语言允许，语句的前面有标签（label），相当于定位符，用于跳转到程序的任意位置，标签的格式如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">label:</span><br><span class="line">  语句</span><br></pre></td></tr></table></figure><p>标签可以是任意的标识符，但不能是保留字，语句部分可以是任意语句。</p><p>标签通常与<code>break</code>语句和<code>continue</code>语句配合使用，跳出特定的循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">top:</span><br><span class="line">  for (var i &#x3D; 0; i &lt; 3; i++)&#123;</span><br><span class="line">    for (var j &#x3D; 0; j &lt; 3; j++)&#123;</span><br><span class="line">      if (i &#x3D;&#x3D;&#x3D; 1 &amp;&amp; j &#x3D;&#x3D;&#x3D; 1) break top;</span><br><span class="line">      console.log(&#39;i&#x3D;&#39; + i + &#39;, j&#x3D;&#39; + j);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#x2F;&#x2F; i&#x3D;0, j&#x3D;0</span><br><span class="line">&#x2F;&#x2F; i&#x3D;0, j&#x3D;1</span><br><span class="line">&#x2F;&#x2F; i&#x3D;0, j&#x3D;2</span><br><span class="line">&#x2F;&#x2F; i&#x3D;1, j&#x3D;0</span><br></pre></td></tr></table></figure><p>上面代码为一个双重循环区块，<code>break</code>命令后面加上了<code>top</code>标签（注意，<code>top</code>不用加引号），满足条件时，直接跳出双层循环。如果<code>break</code>语句后面不使用标签，则只能跳出内层循环，进入下一次的外层循环。</p><p>标签也可以用于跳出代码块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">foo: &#123;</span><br><span class="line">  console.log(1);</span><br><span class="line">  break foo;</span><br><span class="line">  console.log(&#39;本行不会输出&#39;);</span><br><span class="line">&#125;</span><br><span class="line">console.log(2);</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码执行到<code>break foo</code>，就会跳出区块。</p><p><code>continue</code>语句也可以与标签配合使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">top:</span><br><span class="line">  for (var i &#x3D; 0; i &lt; 3; i++)&#123;</span><br><span class="line">    for (var j &#x3D; 0; j &lt; 3; j++)&#123;</span><br><span class="line">      if (i &#x3D;&#x3D;&#x3D; 1 &amp;&amp; j &#x3D;&#x3D;&#x3D; 1) continue top;</span><br><span class="line">      console.log(&#39;i&#x3D;&#39; + i + &#39;, j&#x3D;&#39; + j);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#x2F;&#x2F; i&#x3D;0, j&#x3D;0</span><br><span class="line">&#x2F;&#x2F; i&#x3D;0, j&#x3D;1</span><br><span class="line">&#x2F;&#x2F; i&#x3D;0, j&#x3D;2</span><br><span class="line">&#x2F;&#x2F; i&#x3D;1, j&#x3D;0</span><br><span class="line">&#x2F;&#x2F; i&#x3D;2, j&#x3D;0</span><br><span class="line">&#x2F;&#x2F; i&#x3D;2, j&#x3D;1</span><br><span class="line">&#x2F;&#x2F; i&#x3D;2, j&#x3D;2</span><br></pre></td></tr></table></figure><p>上面代码中，<code>continue</code>命令后面有一个标签名，满足条件时，会跳过当前循环，直接进入下一轮外层循环。如果<code>continue</code>语句后面不使用标签，则只能进入下一轮的内层循环。</p><h3 id="JavaScript-数据类型"><a href="#JavaScript-数据类型" class="headerlink" title="JavaScript 数据类型"></a>JavaScript 数据类型</h3><p><strong>面试常问：</strong>说一说<code>javascript</code>中有哪些数据类型?</p><p>答：<code>JavaScript</code> 中共有七种内置数据类型，包括<strong>基本类型</strong>和<strong>对象类型</strong>。</p><h4 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h4><p>基本类型分为以下六种：</p><ul><li>string（字符串）</li><li>boolean（布尔值）</li><li>number（数字）</li><li>symbol（符号）</li><li>null（空值）</li><li>undefined（未定义）</li></ul><p><strong>注意</strong>：</p><ol><li><code>string</code> 、<code>number</code> 、<code>boolean</code> 和 <code>null</code> <code>undefined</code> 这五种类型统称为<strong>原始类型</strong>（Primitive），表示不能再细分下去的基本类型;</li><li><code>symbol</code>是 ES6 中新增的数据类型，<code>symbol</code> 表示独一无二的值，通过 <code>Symbol</code> 函数调用生成，由于生成的 symbol 值为原始类型，所以 <code>Symbol</code> 函数不能使用<code>new</code> 调用；</li><li><code>null</code> 和 <code>undefined</code> 通常被认为是特殊值，这两种类型的值唯一，就是其本身。</li></ol><h4 id="对象（object）类型"><a href="#对象（object）类型" class="headerlink" title="对象（object）类型"></a>对象（object）类型</h4><p>对象类型也叫引用类型，是各种值组成的集合。</p><p>对象是最复杂的数据类型，又可以分成三个子类型。</p><ul><li>狭义的对象（object）</li><li>数组（array）</li><li>函数（function）</li></ul><p>对象在逻辑上是属性的无序集合，是存放各种值的容器。对象值存储的是引用地址，所以和基本类型值不可变的特性不同，对象值是可变的。</p><p>狭义的对象和数组是两种不同的数据组合方式，除非特别声明，本教程的“对象”都特指狭义的对象。函数其实是处理数据的方法，JavaScript 把它当成一种数据类型，可以赋值给变量，这为编程带来了很大的灵活性，也为 JavaScript 的“函数式编程”奠定了基础。</p><h3 id="typeof-运算符"><a href="#typeof-运算符" class="headerlink" title="typeof 运算符"></a>typeof 运算符</h3><p>JavaScript 有三种方法，可以确定一个值到底是什么类型。</p><ul><li><code>typeof</code>运算符</li><li><code>instanceof</code>运算符</li><li><code>Object.prototype.toString</code>方法</li></ul><p><code>instanceof</code>运算符和<code>Object.prototype.toString</code>方法，将在后文介绍。这里介绍<code>typeof</code>运算符。</p><p><code>typeof</code>运算符可以返回一个值的数据类型。</p><p>数值、字符串、布尔值分别返回<code>number</code>、<code>string</code>、<code>boolean</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">typeof 123 &#x2F;&#x2F; &quot;number&quot;</span><br><span class="line">typeof &#39;123&#39; &#x2F;&#x2F; &quot;string&quot;</span><br><span class="line">typeof false &#x2F;&#x2F; &quot;boolean&quot;</span><br></pre></td></tr></table></figure><p>函数返回<code>function</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;&#125;</span><br><span class="line">typeof f</span><br><span class="line">&#x2F;&#x2F; &quot;function&quot;</span><br></pre></td></tr></table></figure><p><code>undefined</code>返回<code>undefined</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">typeof undefined</span><br><span class="line">&#x2F;&#x2F; &quot;undefined&quot;</span><br></pre></td></tr></table></figure><p>利用这一点，<code>typeof</code>可以用来检查一个没有声明的变量，而不报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">v</span><br><span class="line">&#x2F;&#x2F; ReferenceError: v is not defined</span><br><span class="line"></span><br><span class="line">typeof v</span><br><span class="line">&#x2F;&#x2F; &quot;undefined&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>v</code>没有用<code>var</code>命令声明，直接使用就会报错。但是，放在<code>typeof</code>后面，就不报错了，而是返回<code>undefined</code>。</p><p>实际编程中，这个特点通常用在判断语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 错误的写法</span><br><span class="line">if (v) &#123;</span><br><span class="line">  &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; ReferenceError: v is not defined</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 正确的写法</span><br><span class="line">if (typeof v &#x3D;&#x3D;&#x3D; &quot;undefined&quot;) &#123;</span><br><span class="line">  &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对象返回<code>object</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">typeof window &#x2F;&#x2F; &quot;object&quot;</span><br><span class="line">typeof &#123;&#125; &#x2F;&#x2F; &quot;object&quot;</span><br><span class="line">typeof [] &#x2F;&#x2F; &quot;object&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，空数组（<code>[]</code>）的类型也是<code>object</code>，这表示在 JavaScript 内部，数组本质上只是一种特殊的对象。这里顺便提一下，<code>instanceof</code>运算符可以区分数组和对象。<code>instanceof</code>运算符的详细解释，请见《面向对象编程》一章。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var o &#x3D; &#123;&#125;;</span><br><span class="line">var a &#x3D; [];</span><br><span class="line"></span><br><span class="line">o instanceof Array &#x2F;&#x2F; false</span><br><span class="line">a instanceof Array &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p><code>null</code>返回<code>object</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typeof null &#x2F;&#x2F; &quot;object&quot;</span><br></pre></td></tr></table></figure><p><code>null</code>的类型是<code>object</code>，这是由于历史原因造成的。1995年的 JavaScript 语言第一版，只设计了五种数据类型（对象、整数、浮点数、字符串和布尔值），没考虑<code>null</code>，只把它当作<code>object</code>的一种特殊值。后来<code>null</code>独立出来，作为一种单独的数据类型，为了兼容以前的代码，<code>typeof null</code>返回<code>object</code>就没法改变了。</p><h3 id="null-undefined-和布尔值"><a href="#null-undefined-和布尔值" class="headerlink" title="null, undefined 和布尔值"></a>null, undefined 和布尔值</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p><code>null</code>与<code>undefined</code>都可以表示“没有”，含义非常相似。将一个变量赋值为<code>undefined</code>或<code>null</code>，老实说，语法效果几乎没区别。</p><p>唯一区别：<code>null</code>是一个表示“空”的对象，转为数值时为<code>0</code>；<code>undefined</code>是一个表示”此处无定义”的原始值，转为数值时为<code>NaN</code>。</p><h4 id="用法和含义"><a href="#用法和含义" class="headerlink" title="用法和含义"></a>用法和含义</h4><p>对于<code>null</code>和<code>undefined</code>，大致可以像下面这样理解。</p><p><code>null</code>表示空值，即该处的值现在为空。调用函数时，某个参数未设置任何值，这时就可以传入<code>null</code>，表示该参数为空。比如，某个函数接受引擎抛出的错误作为参数，如果运行过程中未出错，那么这个参数就会传入<code>null</code>，表示未发生错误。</p><p><code>undefined</code>表示“未定义”，下面是返回<code>undefined</code>的典型场景。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 变量声明了，但没有赋值</span><br><span class="line">var i;</span><br><span class="line">i &#x2F;&#x2F; undefined</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用函数时，应该提供的参数没有提供，该参数等于 undefined</span><br><span class="line">function f(x) &#123;</span><br><span class="line">  return x;</span><br><span class="line">&#125;</span><br><span class="line">f() &#x2F;&#x2F; undefined</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 对象没有赋值的属性</span><br><span class="line">var  o &#x3D; new Object();</span><br><span class="line">o.p &#x2F;&#x2F; undefined</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 函数没有返回值时，默认返回 undefined</span><br><span class="line">function f() &#123;&#125;</span><br><span class="line">f() &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><p>布尔值代表“真”和“假”两个状态。“真”用关键字<code>true</code>表示，“假”用关键字<code>false</code>表示。布尔值只有这两个值。</p><p>下列运算符会返回布尔值：</p><ul><li>前置逻辑运算符： <code>!</code> (Not)</li><li>相等运算符：<code>===</code>，<code>!==</code>，<code>==</code>，<code>!=</code></li><li>比较运算符：<code>&gt;</code>，<code>&gt;=</code>，<code>&lt;</code>，<code>&lt;=</code></li></ul><p>如果 JavaScript 预期某个位置应该是布尔值，会将该位置上现有的值自动转为布尔值。转换规则是除了下面六个值被转为<code>false</code>，其他值都视为<code>true</code>。</p><ul><li><code>undefined</code></li><li><code>null</code></li><li><code>false</code></li><li><code>0</code></li><li><code>NaN</code></li><li><code>&quot;&quot;</code>或<code>&#39;&#39;</code>（空字符串）</li></ul><p>布尔值往往用于程序流程的控制，请看一个例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (&#39;&#39;) &#123;</span><br><span class="line">  console.log(&#39;true&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 没有任何输出</span><br></pre></td></tr></table></figure><p>上面代码中，<code>if</code>命令后面的判断条件，预期应该是一个布尔值，所以 JavaScript 自动将空字符串，转为布尔值<code>false</code>，导致程序不会进入代码块，所以没有任何输出。</p><p>注意，空数组（<code>[]</code>）和空对象（<code>{}</code>）对应的布尔值，都是<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if ([]) &#123;</span><br><span class="line">  console.log(&#39;true&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">if (&#123;&#125;) &#123;</span><br><span class="line">  console.log(&#39;true&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><h3 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h3><h4 id="整数和浮点数"><a href="#整数和浮点数" class="headerlink" title="整数和浮点数"></a>整数和浮点数</h4><p>JavaScript 内部，所有数字都是以64位浮点数形式储存，即使整数也是如此。所以，<code>1</code>与<code>1.0</code>是相同的，是同一个数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 &#x3D;&#x3D;&#x3D; 1.0 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>这就是说，JavaScript 语言的底层根本没有整数，所有数字都是小数（64位浮点数）。容易造成混淆的是，某些运算只有整数才能完成，此时 JavaScript 会自动把64位浮点数，转成32位整数，然后再进行运算。</p><h4 id="数值精度"><a href="#数值精度" class="headerlink" title="数值精度"></a>数值精度</h4><p>根据国际标准 IEEE 754，JavaScript 浮点数的64个二进制位，从最左边开始，是这样组成的。</p><ul><li>第1位：符号位，<code>0</code>表示正数，<code>1</code>表示负数</li><li>第2位到第12位（共11位）：指数部分</li><li>第13位到第64位（共52位）：小数部分（即有效数字）</li></ul><p>符号位决定了一个数的正负，指数部分决定了数值的大小，小数部分决定了数值的精度。</p><h4 id="数值的表示法"><a href="#数值的表示法" class="headerlink" title="数值的表示法"></a>数值的表示法</h4><p>JavaScript 的数值有多种表示方法，可以用字面形式直接表示，比如<code>35</code>（十进制）和<code>0xFF</code>（十六进制）。</p><p>数值也可以采用科学计数法表示，下面是几个科学计数法的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">123e3 &#x2F;&#x2F; 123000</span><br><span class="line">123e-3 &#x2F;&#x2F; 0.123</span><br><span class="line">-3.1E+12</span><br><span class="line">.1e-23</span><br></pre></td></tr></table></figure><p>科学计数法允许字母<code>e</code>或<code>E</code>的后面，跟着一个整数，表示这个数值的指数部分。</p><p>以下两种情况，JavaScript 会自动将数值转为科学计数法表示，其他情况都采用字面形式直接表示。</p><p><strong>（1）小数点前的数字多于21位。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1234567890123456789012</span><br><span class="line">&#x2F;&#x2F; 1.2345678901234568e+21</span><br><span class="line"></span><br><span class="line">123456789012345678901</span><br><span class="line">&#x2F;&#x2F; 123456789012345680000</span><br></pre></td></tr></table></figure><p><strong>（2）小数点后的零多于5个。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 小数点后紧跟5个以上的零，</span><br><span class="line">&#x2F;&#x2F; 就自动转为科学计数法</span><br><span class="line">0.0000003 &#x2F;&#x2F; 3e-7</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 否则，就保持原来的字面形式</span><br><span class="line">0.000003 &#x2F;&#x2F; 0.000003</span><br></pre></td></tr></table></figure><h4 id="数值的进制"><a href="#数值的进制" class="headerlink" title="数值的进制"></a>数值的进制</h4><p>使用字面量（literal）直接表示一个数值时，JavaScript 对整数提供四种进制的表示方法：十进制、十六进制、八进制、二进制。</p><ul><li>十进制：没有前导0的数值。</li><li>八进制：有前缀<code>0o</code>或<code>0O</code>的数值，或者有前导0、且只用到0-7的八个阿拉伯数字的数值。</li><li>十六进制：有前缀<code>0x</code>或<code>0X</code>的数值。</li><li>二进制：有前缀<code>0b</code>或<code>0B</code>的数值。</li></ul><p>默认情况下，JavaScript 内部会自动将八进制、十六进制、二进制转为十进制。下面是一些例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0xff &#x2F;&#x2F; 255</span><br><span class="line">0o377 &#x2F;&#x2F; 255</span><br><span class="line">0b11 &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>如果八进制、十六进制、二进制的数值里面，出现不属于该进制的数字，就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0xzz &#x2F;&#x2F; 报错</span><br><span class="line">0o88 &#x2F;&#x2F; 报错</span><br><span class="line">0b22 &#x2F;&#x2F; 报错</span><br></pre></td></tr></table></figure><p>上面代码中，十六进制出现了字母<code>z</code>、八进制出现数字<code>8</code>、二进制出现数字<code>2</code>，因此报错。</p><p>通常来说，有前导0的数值会被视为八进制，但是如果前导0后面有数字<code>8</code>和<code>9</code>，则该数值被视为十进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0888 &#x2F;&#x2F; 888</span><br><span class="line">0777 &#x2F;&#x2F; 511</span><br></pre></td></tr></table></figure><p>前导0表示八进制，处理时很容易造成混乱。ES5 的严格模式和 ES6，已经废除了这种表示法，但是浏览器为了兼容以前的代码，目前还继续支持这种表示法。</p><h4 id="特殊数值"><a href="#特殊数值" class="headerlink" title="特殊数值"></a>特殊数值</h4><p>JavaScript 提供了几个特殊的数值。</p><p><strong>正零和负零</strong></p><p>JavaScript 内部实际上存在2个<code>0</code>：一个是<code>+0</code>，一个是<code>-0</code>，区别就是64位浮点数表示法的符号位不同。它们是等价的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-0 &#x3D;&#x3D;&#x3D; +0 &#x2F;&#x2F; true</span><br><span class="line">0 &#x3D;&#x3D;&#x3D; -0 &#x2F;&#x2F; true</span><br><span class="line">0 &#x3D;&#x3D;&#x3D; +0 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>几乎所有场合，正零和负零都会被当作正常的<code>0</code>。</p><p>唯一有区别的场合是，<code>+0</code>或<code>-0</code>当作分母，返回的值是不相等的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(1 &#x2F; +0) &#x3D;&#x3D;&#x3D; (1 &#x2F; -0) &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面的代码之所以出现这样结果，是因为除以正零得到<code>+Infinity</code>，除以负零得到<code>-Infinity</code>，这两者是不相等的（关于<code>Infinity</code>详见下文介绍）。</p><h4 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h4><p><strong>（1）含义</strong></p><p><code>NaN</code>是 JavaScript 的特殊值，表示“非数字”（Not a Number），主要出现在将字符串解析成数字出错的场合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 - &#39;x&#39; &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p>上面代码运行时，会自动将字符串<code>x</code>转为数值，但是由于<code>x</code>不是数值，所以最后得到结果为<code>NaN</code>，表示它是“非数字”（<code>NaN</code>）。</p><p>另外，一些数学函数的运算结果会出现<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Math.acos(2) &#x2F;&#x2F; NaN</span><br><span class="line">Math.log(-1) &#x2F;&#x2F; NaN</span><br><span class="line">Math.sqrt(-1) &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p><code>0</code>除以<code>0</code>也会得到<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 &#x2F; 0 &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p>需要注意的是，<code>NaN</code>不是独立的数据类型，而是一个特殊数值，它的数据类型依然属于<code>Number</code>，使用<code>typeof</code>运算符可以看得很清楚。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typeof NaN &#x2F;&#x2F; &#39;number&#39;</span><br></pre></td></tr></table></figure><p><strong>（2）运算规则</strong></p><p><code>NaN</code>不等于任何值，包括它本身。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NaN &#x3D;&#x3D;&#x3D; NaN &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>数组的<code>indexOf</code>方法内部使用的是严格相等运算符，所以该方法对<code>NaN</code>不成立。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[NaN].indexOf(NaN) &#x2F;&#x2F; -1</span><br></pre></td></tr></table></figure><p><code>NaN</code>在布尔运算时被当作<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Boolean(NaN) &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p><code>NaN</code>与任何数（包括它自己）的运算，得到的都是<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NaN + 32 &#x2F;&#x2F; NaN</span><br><span class="line">NaN - 32 &#x2F;&#x2F; NaN</span><br><span class="line">NaN * 32 &#x2F;&#x2F; NaN</span><br><span class="line">NaN &#x2F; 32 &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><h4 id="Infinity"><a href="#Infinity" class="headerlink" title="Infinity"></a>Infinity</h4><p><strong>（1）含义</strong></p><p><code>Infinity</code>表示“无穷”，用来表示两种场景。一种是一个正的数值太大，或一个负的数值太小，无法表示；另一种是非0数值除以0，得到<code>Infinity</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 场景一</span><br><span class="line">Math.pow(2, 1024)</span><br><span class="line">&#x2F;&#x2F; Infinity</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 场景二</span><br><span class="line">0 &#x2F; 0 &#x2F;&#x2F; NaN</span><br><span class="line">1 &#x2F; 0 &#x2F;&#x2F; Infinity</span><br></pre></td></tr></table></figure><p>上面代码中，第一个场景是一个表达式的计算结果太大，超出了能够表示的范围，因此返回<code>Infinity</code>。第二个场景是<code>0</code>除以<code>0</code>会得到<code>NaN</code>，而非0数值除以<code>0</code>，会返回<code>Infinity</code>。</p><p><code>Infinity</code>有正负之分，<code>Infinity</code>表示正的无穷，<code>-Infinity</code>表示负的无穷。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Infinity &#x3D;&#x3D;&#x3D; -Infinity &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">1 &#x2F; -0 &#x2F;&#x2F; -Infinity</span><br><span class="line">-1 &#x2F; -0 &#x2F;&#x2F; Infinity</span><br></pre></td></tr></table></figure><p>上面代码中，非零正数除以<code>-0</code>，会得到<code>-Infinity</code>，负数除以<code>-0</code>，会得到<code>Infinity</code>。</p><p>由于数值正向溢出（overflow）、负向溢出（underflow）和被<code>0</code>除，JavaScript 都不报错，所以单纯的数学运算几乎没有可能抛出错误。</p><p><code>Infinity</code>大于一切数值（除了<code>NaN</code>），<code>-Infinity</code>小于一切数值（除了<code>NaN</code>）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Infinity &gt; 1000 &#x2F;&#x2F; true</span><br><span class="line">-Infinity &lt; -1000 &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p><code>Infinity</code>与<code>NaN</code>比较，总是返回<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Infinity &gt; NaN &#x2F;&#x2F; false</span><br><span class="line">-Infinity &gt; NaN &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">Infinity &lt; NaN &#x2F;&#x2F; false</span><br><span class="line">-Infinity &lt; NaN &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p><strong>（2）运算规则</strong></p><p><code>Infinity</code>的四则运算，符合无穷的数学计算规则。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5 * Infinity &#x2F;&#x2F; Infinity</span><br><span class="line">5 - Infinity &#x2F;&#x2F; -Infinity</span><br><span class="line">Infinity &#x2F; 5 &#x2F;&#x2F; Infinity</span><br><span class="line">5 &#x2F; Infinity &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure><p>0乘以<code>Infinity</code>，返回<code>NaN</code>；0除以<code>Infinity</code>，返回<code>0</code>；<code>Infinity</code>除以0，返回<code>Infinity</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 * Infinity &#x2F;&#x2F; NaN</span><br><span class="line">0 &#x2F; Infinity &#x2F;&#x2F; 0</span><br><span class="line">Infinity &#x2F; 0 &#x2F;&#x2F; Infinity</span><br></pre></td></tr></table></figure><p><code>Infinity</code>加上或乘以<code>Infinity</code>，返回的还是<code>Infinity</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Infinity + Infinity &#x2F;&#x2F; Infinity</span><br><span class="line">Infinity * Infinity &#x2F;&#x2F; Infinity</span><br></pre></td></tr></table></figure><p><code>Infinity</code>减去或除以<code>Infinity</code>，得到<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Infinity - Infinity &#x2F;&#x2F; NaN</span><br><span class="line">Infinity &#x2F; Infinity &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p><code>Infinity</code>与<code>null</code>计算时，<code>null</code>会转成0，等同于与<code>0</code>的计算。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">null * Infinity &#x2F;&#x2F; NaN</span><br><span class="line">null &#x2F; Infinity &#x2F;&#x2F; 0</span><br><span class="line">Infinity &#x2F; null &#x2F;&#x2F; Infinity</span><br></pre></td></tr></table></figure><p><code>Infinity</code>与<code>undefined</code>计算，返回的都是<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">undefined + Infinity &#x2F;&#x2F; NaN</span><br><span class="line">undefined - Infinity &#x2F;&#x2F; NaN</span><br><span class="line">undefined * Infinity &#x2F;&#x2F; NaN</span><br><span class="line">undefined &#x2F; Infinity &#x2F;&#x2F; NaN</span><br><span class="line">Infinity &#x2F; undefined &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><h4 id="与数值相关的全局方法"><a href="#与数值相关的全局方法" class="headerlink" title="与数值相关的全局方法"></a>与数值相关的全局方法</h4><p><strong>parseInt()</strong></p><p><strong>（1）基本用法</strong></p><p><code>parseInt</code>方法用于将字符串转为整数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&#39;123&#39;) &#x2F;&#x2F; 123</span><br></pre></td></tr></table></figure><p>如果字符串头部有空格，空格会被自动去除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&#39;   81&#39;) &#x2F;&#x2F; 81</span><br></pre></td></tr></table></figure><p>如果<code>parseInt</code>的参数不是字符串，则会先转为字符串再转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parseInt(1.23) &#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">parseInt(&#39;1.23&#39;) &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>字符串转为整数的时候，是一个个字符依次转换，如果遇到不能转为数字的字符，就不再进行下去，返回已经转好的部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&#39;8a&#39;) &#x2F;&#x2F; 8</span><br><span class="line">parseInt(&#39;12**&#39;) &#x2F;&#x2F; 12</span><br><span class="line">parseInt(&#39;12.34&#39;) &#x2F;&#x2F; 12</span><br><span class="line">parseInt(&#39;15e2&#39;) &#x2F;&#x2F; 15</span><br><span class="line">parseInt(&#39;15px&#39;) &#x2F;&#x2F; 15</span><br></pre></td></tr></table></figure><p>上面代码中，<code>parseInt</code>的参数都是字符串，结果只返回字符串头部可以转为数字的部分。</p><p><strong>进制转换</strong></p><p><code>parseInt</code>方法还可以接受第二个参数（2到36之间），表示被解析的值的进制，返回该值对应的十进制数。默认情况下，<code>parseInt</code>的第二个参数为10，即默认是十进制转十进制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&#39;1000&#39;) &#x2F;&#x2F; 1000</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">parseInt(&#39;1000&#39;, 10) &#x2F;&#x2F; 1000</span><br></pre></td></tr></table></figure><p>下面是转换指定进制的数的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&#39;1000&#39;, 2) &#x2F;&#x2F; 8</span><br><span class="line">parseInt(&#39;1000&#39;, 6) &#x2F;&#x2F; 216</span><br><span class="line">parseInt(&#39;1000&#39;, 8) &#x2F;&#x2F; 512</span><br></pre></td></tr></table></figure><p>上面代码中，二进制、六进制、八进制的<code>1000</code>，分别等于十进制的8、216和512。这意味着，可以用<code>parseInt</code>方法进行进制的转换。</p><p><strong>parseFloat()</strong></p><p><code>parseFloat</code>方法用于将一个字符串转为浮点数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&#39;3.14&#39;) &#x2F;&#x2F; 3.14</span><br></pre></td></tr></table></figure><p>如果字符串符合科学计数法，则会进行相应的转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&#39;314e-2&#39;) &#x2F;&#x2F; 3.14</span><br><span class="line">parseFloat(&#39;0.0314E+2&#39;) &#x2F;&#x2F; 3.14</span><br></pre></td></tr></table></figure><p>如果字符串包含不能转为浮点数的字符，则不再进行往后转换，返回已经转好的部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&#39;3.14more non-digit characters&#39;) &#x2F;&#x2F; 3.14</span><br></pre></td></tr></table></figure><p><code>parseFloat</code>方法会自动过滤字符串前导的空格。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&#39;\t\v\r12.34\n &#39;) &#x2F;&#x2F; 12.34</span><br></pre></td></tr></table></figure><p>如果参数不是字符串，或者字符串的第一个字符不能转化为浮点数，则返回<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parseFloat([]) &#x2F;&#x2F; NaN</span><br><span class="line">parseFloat(&#39;FF2&#39;) &#x2F;&#x2F; NaN</span><br><span class="line">parseFloat(&#39;&#39;) &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p>上面代码中，尤其值得注意，<code>parseFloat</code>会将空字符串转为<code>NaN</code>。</p><p>这些特点使得<code>parseFloat</code>的转换结果不同于<code>Number</code>函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(true)  &#x2F;&#x2F; NaN</span><br><span class="line">Number(true) &#x2F;&#x2F; 1</span><br><span class="line"></span><br><span class="line">parseFloat(null) &#x2F;&#x2F; NaN</span><br><span class="line">Number(null) &#x2F;&#x2F; 0</span><br><span class="line"></span><br><span class="line">parseFloat(&#39;&#39;) &#x2F;&#x2F; NaN</span><br><span class="line">Number(&#39;&#39;) &#x2F;&#x2F; 0</span><br><span class="line"></span><br><span class="line">parseFloat(&#39;123.45#&#39;) &#x2F;&#x2F; 123.45</span><br><span class="line">Number(&#39;123.45#&#39;) &#x2F;&#x2F; NaN</span><br></pre></td></tr></table></figure><p><strong>isNaN()</strong></p><p><code>isNaN</code>方法可以用来判断一个值是否为<code>NaN</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">isNaN(NaN) &#x2F;&#x2F; true</span><br><span class="line">isNaN(123) &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>但是，<code>isNaN</code>只对数值有效，如果传入其他值，会被先转成数值。比如，传入字符串的时候，字符串会被先转成<code>NaN</code>，所以最后返回<code>true</code>，这一点要特别引起注意。也就是说，<code>isNaN</code>为<code>true</code>的值，有可能不是<code>NaN</code>，而是一个字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isNaN(&#39;Hello&#39;) &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 相当于</span><br><span class="line">isNaN(Number(&#39;Hello&#39;)) &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>出于同样的原因，对于对象和数组，<code>isNaN</code>也返回<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">isNaN(&#123;&#125;) &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">isNaN(Number(&#123;&#125;)) &#x2F;&#x2F; true</span><br><span class="line"></span><br><span class="line">isNaN([&#39;xzy&#39;]) &#x2F;&#x2F; true</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">isNaN(Number([&#39;xzy&#39;])) &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>但是，对于空数组和只有一个数值成员的数组，<code>isNaN</code>返回<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isNaN([]) &#x2F;&#x2F; false</span><br><span class="line">isNaN([123]) &#x2F;&#x2F; false</span><br><span class="line">isNaN([&#39;123&#39;]) &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码之所以返回<code>false</code>，原因是这些数组能被<code>Number</code>函数转成数值，请参见《数据类型转换》一章。</p><p>因此，使用<code>isNaN</code>之前，最好判断一下数据类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function myIsNaN(value) &#123;</span><br><span class="line">  return typeof value &#x3D;&#x3D;&#x3D; &#39;number&#39; &amp;&amp; isNaN(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断<code>NaN</code>更可靠的方法是，利用<code>NaN</code>为唯一不等于自身的值的这个特点，进行判断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function myIsNaN(value) &#123;</span><br><span class="line">  return value !&#x3D;&#x3D; value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>isFinite()</strong></p><p><code>isFinite</code>方法返回一个布尔值，表示某个值是否为正常的数值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">isFinite(Infinity) &#x2F;&#x2F; false</span><br><span class="line">isFinite(-Infinity) &#x2F;&#x2F; false</span><br><span class="line">isFinite(NaN) &#x2F;&#x2F; false</span><br><span class="line">isFinite(undefined) &#x2F;&#x2F; false</span><br><span class="line">isFinite(null) &#x2F;&#x2F; true</span><br><span class="line">isFinite(-1) &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>除了<code>Infinity</code>、<code>-Infinity</code>、<code>NaN</code>和<code>undefined</code>这几个值会返回<code>false</code>，<code>isFinite</code>对于其他的数值都会返回<code>true</code>。</p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>字符串就是零个或多个排在一起的字符，放在单引号或双引号之中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;abc&#39;</span><br><span class="line">&quot;abc&quot;</span><br></pre></td></tr></table></figure><p>单引号字符串的内部，可以使用双引号。双引号字符串的内部，可以使用单引号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;key &#x3D; &quot;value&quot;&#39;</span><br><span class="line">&quot;It&#39;s a long journey&quot;</span><br></pre></td></tr></table></figure><p>上面两个都是合法的字符串。</p><p>如果要在单引号字符串的内部，使用单引号，就必须在内部的单引号前面加上反斜杠，用来转义。双引号字符串内部使用双引号，也是如此。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#39;Did she say \&#39;Hello\&#39;?&#39;</span><br><span class="line">&#x2F;&#x2F; &quot;Did she say &#39;Hello&#39;?&quot;</span><br><span class="line"></span><br><span class="line">&quot;Did she say \&quot;Hello\&quot;?&quot;</span><br><span class="line">&#x2F;&#x2F; &quot;Did she say &quot;Hello&quot;?&quot;</span><br></pre></td></tr></table></figure><p>由于 HTML 语言的属性值使用双引号，所以很多项目约定 JavaScript 语言的字符串只使用单引号，本教程遵守这个约定。当然，只使用双引号也完全可以。重要的是坚持使用一种风格，不要一会使用单引号表示字符串，一会又使用双引号表示。</p><p>字符串默认只能写在一行内，分成多行将会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#39;a</span><br><span class="line">b</span><br><span class="line">c&#39;</span><br><span class="line">&#x2F;&#x2F; SyntaxError: Unexpected token ILLEGAL</span><br></pre></td></tr></table></figure><p>上面代码将一个字符串分成三行，JavaScript 就会报错。</p><p>如果长字符串必须分成多行，可以在每一行的尾部使用反斜杠。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var longString &#x3D; &#39;Long \</span><br><span class="line">long \</span><br><span class="line">long \</span><br><span class="line">string&#39;;</span><br><span class="line"></span><br><span class="line">longString</span><br><span class="line">&#x2F;&#x2F; &quot;Long long long string&quot;</span><br></pre></td></tr></table></figure><p>上面代码表示，加了反斜杠以后，原来写在一行的字符串，可以分成多行书写。但是，输出的时候还是单行，效果与写在同一行完全一样。注意，反斜杠的后面必须是换行符，而不能有其他字符（比如空格），否则会报错。</p><p>连接运算符（<code>+</code>）可以连接多个单行字符串，将长字符串拆成多行书写，输出的时候也是单行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var longString &#x3D; &#39;Long &#39;</span><br><span class="line">  + &#39;long &#39;</span><br><span class="line">  + &#39;long &#39;</span><br><span class="line">  + &#39;string&#39;;</span><br></pre></td></tr></table></figure><p>如果想输出多行字符串，有一种利用多行注释的变通方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(function () &#123; &#x2F;*</span><br><span class="line">line 1</span><br><span class="line">line 2</span><br><span class="line">line 3</span><br><span class="line">*&#x2F;&#125;).toString().split(&#39;\n&#39;).slice(1, -1).join(&#39;\n&#39;)</span><br><span class="line">&#x2F;&#x2F; &quot;line 1</span><br><span class="line">&#x2F;&#x2F; line 2</span><br><span class="line">&#x2F;&#x2F; line 3&quot;</span><br></pre></td></tr></table></figure><p>上面的例子中，输出的字符串就是多行。</p><h4 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h4><p>反斜杠（\）在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义符。</p><p>需要用反斜杠转义的特殊字符，主要有下面这些。</p><ul><li><code>\0</code> ：null（<code>\u0000</code>）</li><li><code>\b</code> ：后退键（<code>\u0008</code>）</li><li><code>\f</code> ：换页符（<code>\u000C</code>）</li><li><code>\n</code> ：换行符（<code>\u000A</code>）</li><li><code>\r</code> ：回车键（<code>\u000D</code>）</li><li><code>\t</code> ：制表符（<code>\u0009</code>）</li><li><code>\v</code> ：垂直制表符（<code>\u000B</code>）</li><li><code>\&#39;</code> ：单引号（<code>\u0027</code>）</li><li><code>\&quot;</code> ：双引号（<code>\u0022</code>）</li><li><code>\\</code> ：反斜杠（<code>\u005C</code>）</li></ul><p>上面这些字符前面加上反斜杠，都表示特殊含义。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">console.log(&#39;1\n2&#39;)</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，<code>\n</code>表示换行，输出的时候就分成了两行。</p><p>反斜杠还有三种特殊用法。</p><p>（1）<code>\HHH</code></p><p>反斜杠后面紧跟三个八进制数（<code>000</code>到<code>377</code>），代表一个字符。<code>HHH</code>对应该字符的 Unicode 码点，比如<code>\251</code>表示版权符号。显然，这种方法只能输出256种字符。</p><p>（2）<code>\xHH</code></p><p><code>\x</code>后面紧跟两个十六进制数（<code>00</code>到<code>FF</code>），代表一个字符。<code>HH</code>对应该字符的 Unicode 码点，比如<code>\xA9</code>表示版权符号。这种方法也只能输出256种字符。</p><p>（3）<code>\uXXXX</code></p><p><code>\u</code>后面紧跟四个十六进制数（<code>0000</code>到<code>FFFF</code>），代表一个字符。<code>XXXX</code>对应该字符的 Unicode 码点，比如<code>\u00A9</code>表示版权符号。</p><p>下面是这三种字符特殊写法的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#39;\251&#39; &#x2F;&#x2F; &quot;©&quot;</span><br><span class="line">&#39;\xA9&#39; &#x2F;&#x2F; &quot;©&quot;</span><br><span class="line">&#39;\u00A9&#39; &#x2F;&#x2F; &quot;©&quot;</span><br><span class="line"></span><br><span class="line">&#39;\172&#39; &#x3D;&#x3D;&#x3D; &#39;z&#39; &#x2F;&#x2F; true</span><br><span class="line">&#39;\x7A&#39; &#x3D;&#x3D;&#x3D; &#39;z&#39; &#x2F;&#x2F; true</span><br><span class="line">&#39;\u007A&#39; &#x3D;&#x3D;&#x3D; &#39;z&#39; &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>如果在非特殊字符前面使用反斜杠，则反斜杠会被省略。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;\a&#39;</span><br><span class="line">&#x2F;&#x2F; &quot;a&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>a</code>是一个正常字符，前面加反斜杠没有特殊含义，反斜杠会被自动省略。</p><p>如果字符串的正常内容之中，需要包含反斜杠，则反斜杠前面需要再加一个反斜杠，用来对自身转义。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;Prev \\ Next&quot;</span><br><span class="line">&#x2F;&#x2F; &quot;Prev \ Next&quot;</span><br></pre></td></tr></table></figure><h4 id="字符串与数组"><a href="#字符串与数组" class="headerlink" title="字符串与数组"></a>字符串与数组</h4><p>字符串可以被视为字符数组，因此可以使用数组的方括号运算符，用来返回某个位置的字符（位置编号从0开始）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &#39;hello&#39;;</span><br><span class="line">s[0] &#x2F;&#x2F; &quot;h&quot;</span><br><span class="line">s[1] &#x2F;&#x2F; &quot;e&quot;</span><br><span class="line">s[4] &#x2F;&#x2F; &quot;o&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 直接对字符串使用方括号运算符</span><br><span class="line">&#39;hello&#39;[1] &#x2F;&#x2F; &quot;e&quot;</span><br></pre></td></tr></table></figure><p>如果方括号中的数字超过字符串的长度，或者方括号中根本不是数字，则返回<code>undefined</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#39;abc&#39;[3] &#x2F;&#x2F; undefined</span><br><span class="line">&#39;abc&#39;[-1] &#x2F;&#x2F; undefined</span><br><span class="line">&#39;abc&#39;[&#39;x&#39;] &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><p>但是，字符串与数组的相似性仅此而已。实际上，无法改变字符串之中的单个字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &#39;hello&#39;;</span><br><span class="line"></span><br><span class="line">delete s[0];</span><br><span class="line">s &#x2F;&#x2F; &quot;hello&quot;</span><br><span class="line"></span><br><span class="line">s[1] &#x3D; &#39;a&#39;;</span><br><span class="line">s &#x2F;&#x2F; &quot;hello&quot;</span><br><span class="line"></span><br><span class="line">s[5] &#x3D; &#39;!&#39;;</span><br><span class="line">s &#x2F;&#x2F; &quot;hello&quot;</span><br></pre></td></tr></table></figure><p>上面代码表示，字符串内部的单个字符无法改变和增删，这些操作会默默地失败。</p><h4 id="length-属性"><a href="#length-属性" class="headerlink" title="length 属性"></a>length 属性</h4><p><code>length</code>属性返回字符串的长度，该属性也是无法改变的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &#39;hello&#39;;</span><br><span class="line">s.length &#x2F;&#x2F; 5</span><br><span class="line"></span><br><span class="line">s.length &#x3D; 3;</span><br><span class="line">s.length &#x2F;&#x2F; 5</span><br><span class="line"></span><br><span class="line">s.length &#x3D; 7;</span><br><span class="line">s.length &#x2F;&#x2F; 5</span><br></pre></td></tr></table></figure><p>上面代码表示字符串的<code>length</code>属性无法改变，但是不会报错。</p><h3 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h3><p>JavaScript 使用 Unicode 字符集。JavaScript 引擎内部，所有字符都用 Unicode 表示。</p><p>JavaScript 不仅以 Unicode 储存字符，还允许直接在程序中使用 Unicode 码点表示字符，即将字符写成<code>\uxxxx</code>的形式，其中<code>xxxx</code>代表该字符的 Unicode 码点。比如，<code>\u00A9</code>代表版权符号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &#39;\u00A9&#39;;</span><br><span class="line">s &#x2F;&#x2F; &quot;©&quot;</span><br></pre></td></tr></table></figure><p>解析代码的时候，JavaScript 会自动识别一个字符是字面形式表示，还是 Unicode 形式表示。输出给用户的时候，所有字符都会转成字面形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var f\u006F\u006F &#x3D; &#39;abc&#39;;</span><br><span class="line">foo &#x2F;&#x2F; &quot;abc&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，第一行的变量名<code>foo</code>是 Unicode 形式表示，第二行是字面形式表示。JavaScript 会自动识别。</p><p>我们还需要知道，每个字符在 JavaScript 内部都是以16位（即2个字节）的 UTF-16 格式储存。也就是说，JavaScript 的单位字符长度固定为16位长度，即2个字节。</p><p>但是，UTF-16 有两种长度：对于码点在<code>U+0000</code>到<code>U+FFFF</code>之间的字符，长度为16位（即2个字节）；对于码点在<code>U+10000</code>到<code>U+10FFFF</code>之间的字符，长度为32位（即4个字节），而且前两个字节在<code>0xD800</code>到<code>0xDBFF</code>之间，后两个字节在<code>0xDC00</code>到<code>0xDFFF</code>之间。举例来说，码点<code>U+1D306</code>对应的字符为<code>𝌆，</code>它写成 UTF-16 就是<code>0xD834 0xDF06</code>。</p><p>JavaScript 对 UTF-16 的支持是不完整的，由于历史原因，只支持两字节的字符，不支持四字节的字符。这是因为 JavaScript 第一版发布的时候，Unicode 的码点只编到<code>U+FFFF</code>，因此两字节足够表示了。后来，Unicode 纳入的字符越来越多，出现了四字节的编码。但是，JavaScript 的标准此时已经定型了，统一将字符长度限制在两字节，导致无法识别四字节的字符。上一节的那个四字节字符<code>𝌆</code>，浏览器会正确识别这是一个字符，但是 JavaScript 无法识别，会认为这是两个字符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;𝌆&#39;.length &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，JavaScript 认为<code>𝌆</code>的长度为2，而不是1。</p><p>总结一下，对于码点在<code>U+10000</code>到<code>U+10FFFF</code>之间的字符，JavaScript 总是认为它们是两个字符（<code>length</code>属性为2）。所以处理的时候，必须把这一点考虑在内，也就是说，JavaScript 返回的字符串长度可能是不正确的。</p><h3 id="Base64转码"><a href="#Base64转码" class="headerlink" title="Base64转码"></a>Base64转码</h3><p>有时，文本里面包含一些不可打印的符号，比如 ASCII 码0到31的符号都无法打印出来，这时可以使用 Base64 编码，将它们转成可以打印的字符。另一个场景是，有时需要以文本格式传递二进制数据，那么也可以使用 Base64 编码。</p><p>所谓 Base64 就是一种编码方法，可以将任意值转成 0～9、A～Z、a-z、<code>+</code>和<code>/</code>这64个字符组成的可打印字符。使用它的主要目的，不是为了加密，而是为了不出现特殊字符，简化程序的处理。</p><p>JavaScript 原生提供两个 Base64 相关的方法。</p><ul><li><code>btoa()</code>：任意值转为 Base64 编码</li><li><code>atob()</code>：Base64 编码转为原来的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var string &#x3D; &#39;Hello World!&#39;;</span><br><span class="line">btoa(string) &#x2F;&#x2F; &quot;SGVsbG8gV29ybGQh&quot;</span><br><span class="line">atob(&#39;SGVsbG8gV29ybGQh&#39;) &#x2F;&#x2F; &quot;Hello World!&quot;</span><br></pre></td></tr></table></figure><p>注意，这两个方法不适合非 ASCII 码的字符，会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">btoa(&#39;你好&#39;) &#x2F;&#x2F; 报错</span><br></pre></td></tr></table></figure><p>要将非 ASCII 码字符转为 Base64 编码，必须中间插入一个转码环节，再使用这两个方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function b64Encode(str) &#123;</span><br><span class="line">  return btoa(encodeURIComponent(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function b64Decode(str) &#123;</span><br><span class="line">  return decodeURIComponent(atob(str));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">b64Encode(&#39;你好&#39;) &#x2F;&#x2F; &quot;JUU0JUJEJUEwJUU1JUE1JUJE&quot;</span><br><span class="line">b64Decode(&#39;JUU0JUJEJUEwJUU1JUE1JUJE&#39;) &#x2F;&#x2F; &quot;你好&quot;</span><br></pre></td></tr></table></figure><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><h4 id="生成方法"><a href="#生成方法" class="headerlink" title="生成方法"></a>生成方法</h4><p>对象（object）是 JavaScript 语言的核心概念，也是最重要的数据类型。</p><p>什么是对象？简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数据集合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  foo: &#39;Hello&#39;,</span><br><span class="line">  bar: &#39;World&#39;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>上面代码中，大括号就定义了一个对象，它被赋值给变量<code>obj</code>，所以变量<code>obj</code>就指向一个对象。该对象内部包含两个键值对（又称为两个“成员”），第一个键值对是<code>foo: &#39;Hello&#39;</code>，其中<code>foo</code>是“键名”（成员的名称），字符串<code>Hello</code>是“键值”（成员的值）。键名与键值之间用冒号分隔。第二个键值对是<code>bar: &#39;World&#39;</code>，<code>bar</code>是键名，<code>World</code>是键值。两个键值对之间用逗号分隔。</p><h4 id="键名"><a href="#键名" class="headerlink" title="键名"></a>键名</h4><p>对象的所有键名都是字符串（ES6 又引入了 Symbol 值也可以作为键名），所以加不加引号都可以。上面的代码也可以写成下面这样。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  &#39;foo&#39;: &#39;Hello&#39;,</span><br><span class="line">  &#39;bar&#39;: &#39;World&#39;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如果键名是数值，会被自动转为字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  1: &#39;a&#39;,</span><br><span class="line">  3.2: &#39;b&#39;,</span><br><span class="line">  1e2: true,</span><br><span class="line">  1e-2: true,</span><br><span class="line">  .234: true,</span><br><span class="line">  0xFF: true</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj</span><br><span class="line">&#x2F;&#x2F; Object &#123;</span><br><span class="line">&#x2F;&#x2F;   1: &quot;a&quot;,</span><br><span class="line">&#x2F;&#x2F;   3.2: &quot;b&quot;,</span><br><span class="line">&#x2F;&#x2F;   100: true,</span><br><span class="line">&#x2F;&#x2F;   0.01: true,</span><br><span class="line">&#x2F;&#x2F;   0.234: true,</span><br><span class="line">&#x2F;&#x2F;   255: true</span><br><span class="line">&#x2F;&#x2F; &#125;</span><br><span class="line"></span><br><span class="line">obj[&#39;100&#39;] &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>的所有键名虽然看上去像数值，实际上都被自动转成了字符串。</p><p>如果键名不符合标识名的条件（比如第一个字符为数字，或者含有空格或运算符），且也不是数字，则必须加上引号，否则会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 报错</span><br><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  1p: &#39;Hello World&#39;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 不报错</span><br><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  &#39;1p&#39;: &#39;Hello World&#39;,</span><br><span class="line">  &#39;h w&#39;: &#39;Hello World&#39;,</span><br><span class="line">  &#39;p+q&#39;: &#39;Hello World&#39;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>上面对象的三个键名，都不符合标识名的条件，所以必须加上引号。</p><p>对象的每一个键名又称为“属性”（property），它的“键值”可以是任何数据类型。如果一个属性的值为函数，通常把这个属性称为“方法”，它可以像函数那样调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  p: function (x) &#123;</span><br><span class="line">    return 2 * x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.p(1) &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>的属性<code>p</code>，就指向一个函数。</p><p>如果属性的值还是一个对象，就形成了链式引用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var o1 &#x3D; &#123;&#125;;</span><br><span class="line">var o2 &#x3D; &#123; bar: &#39;hello&#39; &#125;;</span><br><span class="line"></span><br><span class="line">o1.foo &#x3D; o2;</span><br><span class="line">o1.foo.bar &#x2F;&#x2F; &quot;hello&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>o1</code>的属性<code>foo</code>指向对象<code>o2</code>，就可以链式引用<code>o2</code>的属性。</p><p>对象的属性之间用逗号分隔，最后一个属性后面可以加逗号（trailing comma），也可以不加。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  p: 123,</span><br><span class="line">  m: function () &#123; ... &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码中，<code>m</code>属性后面的那个逗号，有没有都可以。</p><p>属性可以动态创建，不必在对象声明时就指定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">obj.foo &#x3D; 123;</span><br><span class="line">obj.foo &#x2F;&#x2F; 123</span><br></pre></td></tr></table></figure><p>上面代码中，直接对<code>obj</code>对象的<code>foo</code>属性赋值，结果就在运行时创建了<code>foo</code>属性。</p><h4 id="对象的引用"><a href="#对象的引用" class="headerlink" title="对象的引用"></a>对象的引用</h4><p>如果不同的变量名指向同一个对象，那么它们都是这个对象的引用，也就是说指向同一个内存地址。修改其中一个变量，会影响到其他所有变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var o1 &#x3D; &#123;&#125;;</span><br><span class="line">var o2 &#x3D; o1;</span><br><span class="line"></span><br><span class="line">o1.a &#x3D; 1;</span><br><span class="line">o2.a &#x2F;&#x2F; 1</span><br><span class="line"></span><br><span class="line">o2.b &#x3D; 2;</span><br><span class="line">o1.b &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，<code>o1</code>和<code>o2</code>指向同一个对象，因此为其中任何一个变量添加属性，另一个变量都可以读写该属性。</p><p>此时，如果取消某一个变量对于原对象的引用，不会影响到另一个变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var o1 &#x3D; &#123;&#125;;</span><br><span class="line">var o2 &#x3D; o1;</span><br><span class="line"></span><br><span class="line">o1 &#x3D; 1;</span><br><span class="line">o2 &#x2F;&#x2F; &#123;&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>o1</code>和<code>o2</code>指向同一个对象，然后<code>o1</code>的值变为1，这时不会对<code>o2</code>产生影响，<code>o2</code>还是指向原来的那个对象。</p><p>但是，这种引用只局限于对象，如果两个变量指向同一个原始类型的值。那么，变量这时都是值的拷贝。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; 1;</span><br><span class="line">var y &#x3D; x;</span><br><span class="line"></span><br><span class="line">x &#x3D; 2;</span><br><span class="line">y &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面的代码中，当<code>x</code>的值发生变化后，<code>y</code>的值并不变，这就表示<code>y</code>和<code>x</code>并不是指向同一个内存地址。</p><h3 id="属性的操作"><a href="#属性的操作" class="headerlink" title="属性的操作"></a>属性的操作</h3><h4 id="属性的读取"><a href="#属性的读取" class="headerlink" title="属性的读取"></a>属性的读取</h4><p>读取对象的属性，有两种方法，一种是使用点运算符，还有一种是使用方括号运算符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  p: &#39;Hello World&#39;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.p &#x2F;&#x2F; &quot;Hello World&quot;</span><br><span class="line">obj[&#39;p&#39;] &#x2F;&#x2F; &quot;Hello World&quot;</span><br></pre></td></tr></table></figure><p>上面代码分别采用点运算符和方括号运算符，读取属性<code>p</code>。</p><p>请注意，如果使用方括号运算符，键名必须放在引号里面，否则会被当作变量处理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var foo &#x3D; &#39;bar&#39;;</span><br><span class="line"></span><br><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  foo: 1,</span><br><span class="line">  bar: 2</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.foo  &#x2F;&#x2F; 1</span><br><span class="line">obj[foo]  &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，引用对象<code>obj</code>的<code>foo</code>属性时，如果使用点运算符，<code>foo</code>就是字符串；如果使用方括号运算符，但是不使用引号，那么<code>foo</code>就是一个变量，指向字符串<code>bar</code>。</p><p>方括号运算符内部还可以使用表达式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj[&#39;hello&#39; + &#39; world&#39;]</span><br><span class="line">obj[3 + 3]</span><br></pre></td></tr></table></figure><p>数字键可以不加引号，因为会自动转成字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  0.7: &#39;Hello World&#39;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj[&#39;0.7&#39;] &#x2F;&#x2F; &quot;Hello World&quot;</span><br><span class="line">obj[0.7] &#x2F;&#x2F; &quot;Hello World&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>的数字键<code>0.7</code>，加不加引号都可以，因为会被自动转为字符串。</p><p><code style="color=red;">注意，数值键名不能使用点运算符（因为会被当成小数点），只能使用方括号运算符。</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  123: &#39;hello world&#39;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.123 &#x2F;&#x2F; 报错</span><br><span class="line">obj[123] &#x2F;&#x2F; &quot;hello world&quot;</span><br></pre></td></tr></table></figure><p>上面代码的第一个表达式，对数值键名<code>123</code>使用点运算符，结果报错。第二个表达式使用方括号运算符，结果就是正确的。</p><h4 id="属性的赋值"><a href="#属性的赋值" class="headerlink" title="属性的赋值"></a>属性的赋值</h4><p>点运算符和方括号运算符，不仅可以用来读取值，还可以用来赋值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line"></span><br><span class="line">obj.foo &#x3D; &#39;Hello&#39;;</span><br><span class="line">obj[&#39;bar&#39;] &#x3D; &#39;World&#39;;</span><br></pre></td></tr></table></figure><p>上面代码中，分别使用点运算符和方括号运算符，对属性赋值。</p><p>JavaScript 允许属性的“后绑定”，也就是说，你可以在任意时刻新增属性，没必要在定义对象的时候，就定义好属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等价于</span><br><span class="line"></span><br><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">obj.p &#x3D; 1;</span><br></pre></td></tr></table></figure><h4 id="属性的查看"><a href="#属性的查看" class="headerlink" title="属性的查看"></a>属性的查看</h4><p>查看一个对象本身的所有属性，可以使用<code>Object.keys</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  key1: 1,</span><br><span class="line">  key2: 2</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Object.keys(obj);</span><br><span class="line">&#x2F;&#x2F; [&#39;key1&#39;, &#39;key2&#39;]</span><br></pre></td></tr></table></figure><h4 id="属性的删除"><a href="#属性的删除" class="headerlink" title="属性的删除"></a>属性的删除</h4><p><code>delete</code>命令用于删除对象的属性，删除成功后返回<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line">Object.keys(obj) &#x2F;&#x2F; [&quot;p&quot;]</span><br><span class="line"></span><br><span class="line">delete obj.p &#x2F;&#x2F; true</span><br><span class="line">obj.p &#x2F;&#x2F; undefined</span><br><span class="line">Object.keys(obj) &#x2F;&#x2F; []</span><br></pre></td></tr></table></figure><p>上面代码中，<code>delete</code>命令删除对象<code>obj</code>的<code>p</code>属性。删除后，再读取<code>p</code>属性就会返回<code>undefined</code>，而且<code>Object.keys</code>方法的返回值也不再包括该属性。</p><p>注意，删除一个不存在的属性，<code>delete</code>不报错，而且返回<code>true</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">delete obj.p &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>并没有<code>p</code>属性，但是<code>delete</code>命令照样返回<code>true</code>。因此，不能根据<code>delete</code>命令的结果，认定某个属性是存在的。</p><p>只有一种情况，<code>delete</code>命令会返回<code>false</code>，那就是该属性存在，且不得删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; Object.defineProperty(&#123;&#125;, &#39;p&#39;, &#123;</span><br><span class="line">  value: 123,</span><br><span class="line">  configurable: false</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">obj.p &#x2F;&#x2F; 123</span><br><span class="line">delete obj.p &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码之中，对象<code>obj</code>的<code>p</code>属性是不能删除的，所以<code>delete</code>命令返回<code>false</code>。</p><p>另外，需要注意的是，<code>delete</code>命令只能删除对象本身的属性，无法删除继承的属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">delete obj.toString &#x2F;&#x2F; true</span><br><span class="line">obj.toString &#x2F;&#x2F; function toString() &#123; [native code] &#125;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>toString</code>是对象<code>obj</code>继承的属性，虽然<code>delete</code>命令返回<code>true</code>，但该属性并没有被删除，依然存在。这个例子还说明，即使<code>delete</code>返回<code>true</code>，该属性依然可能读取到值。</p><h4 id="属性是否存在：in-运算符"><a href="#属性是否存在：in-运算符" class="headerlink" title="属性是否存在：in 运算符"></a>属性是否存在：in 运算符</h4><p><code>in</code>运算符用于检查对象是否包含某个属性（注意，检查的是键名，不是键值），如果包含就返回<code>true</code>，否则返回<code>false</code>。它的左边是一个字符串，表示属性名，右边是一个对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line">&#39;p&#39; in obj &#x2F;&#x2F; true</span><br><span class="line">&#39;toString&#39; in obj &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p><code>in</code>运算符的一个问题是，它不能识别哪些属性是对象自身的，哪些属性是继承的。就像上面代码中，对象<code>obj</code>本身并没有<code>toString</code>属性，但是<code>in</code>运算符会返回<code>true</code>，因为这个属性是继承的。</p><p>这时，可以使用对象的<code>hasOwnProperty</code>方法判断一下，是否为对象自身的属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">if (&#39;toString&#39; in obj) &#123;</span><br><span class="line">  console.log(obj.hasOwnProperty(&#39;toString&#39;)) &#x2F;&#x2F; false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="属性的遍历：for…in-循环"><a href="#属性的遍历：for…in-循环" class="headerlink" title="属性的遍历：for…in 循环"></a>属性的遍历：for…in 循环</h4><p><code>for...in</code>循环用来遍历一个对象的全部属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;a: 1, b: 2, c: 3&#125;;</span><br><span class="line"></span><br><span class="line">for (var i in obj) &#123;</span><br><span class="line">  console.log(&#39;键名：&#39;, i);</span><br><span class="line">  console.log(&#39;键值：&#39;, obj[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 键名： a</span><br><span class="line">&#x2F;&#x2F; 键值： 1</span><br><span class="line">&#x2F;&#x2F; 键名： b</span><br><span class="line">&#x2F;&#x2F; 键值： 2</span><br><span class="line">&#x2F;&#x2F; 键名： c</span><br><span class="line">&#x2F;&#x2F; 键值： 3</span><br></pre></td></tr></table></figure><p><code>for...in</code>循环有两个使用注意点。</p><ul><li>它遍历的是对象所有可遍历（enumerable）的属性，会跳过不可遍历的属性。</li><li>它不仅遍历对象自身的属性，还遍历继承的属性。</li></ul><p>举例来说，对象都继承了<code>toString</code>属性，但是<code>for...in</code>循环不会遍历到这个属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; toString 属性是存在的</span><br><span class="line">obj.toString &#x2F;&#x2F; toString() &#123; [native code] &#125;</span><br><span class="line"></span><br><span class="line">for (var p in obj) &#123;</span><br><span class="line">  console.log(p);</span><br><span class="line">&#125; &#x2F;&#x2F; 没有任何输出</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>继承了<code>toString</code>属性，该属性不会被<code>for...in</code>循环遍历到，因为它默认是“不可遍历”的。</p><p>如果继承的属性是可遍历的，那么就会被<code>for...in</code>循环遍历到。但是，一般情况下，都是只想遍历对象自身的属性，所以使用<code>for...in</code>的时候，应该结合使用<code>hasOwnProperty</code>方法，在循环内部判断一下，某个属性是否为对象自身的属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var person &#x3D; &#123; name: &#39;老张&#39; &#125;;</span><br><span class="line"></span><br><span class="line">for (var key in person) &#123;</span><br><span class="line">  if (person.hasOwnProperty(key)) &#123;</span><br><span class="line">    console.log(key);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; name</span><br></pre></td></tr></table></figure><h4 id="with-语句"><a href="#with-语句" class="headerlink" title="with 语句"></a>with 语句</h4><p><code>with</code>语句的格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with (对象) &#123;</span><br><span class="line">  语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它的作用是操作同一个对象的多个属性时，提供一些书写的方便。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 例一</span><br><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  p1: 1,</span><br><span class="line">  p2: 2,</span><br><span class="line">&#125;;</span><br><span class="line">with (obj) &#123;</span><br><span class="line">  p1 &#x3D; 4;</span><br><span class="line">  p2 &#x3D; 5;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">obj.p1 &#x3D; 4;</span><br><span class="line">obj.p2 &#x3D; 5;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 例二</span><br><span class="line">with (document.links[0])&#123;</span><br><span class="line">  console.log(href);</span><br><span class="line">  console.log(title);</span><br><span class="line">  console.log(style);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">console.log(document.links[0].href);</span><br><span class="line">console.log(document.links[0].title);</span><br><span class="line">console.log(document.links[0].style);</span><br></pre></td></tr></table></figure><p>注意，如果<code>with</code>区块内部有变量的赋值操作，必须是当前对象已经存在的属性，否则会创造一个当前作用域的全局变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;&#125;;</span><br><span class="line">with (obj) &#123;</span><br><span class="line">  p1 &#x3D; 4;</span><br><span class="line">  p2 &#x3D; 5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.p1 &#x2F;&#x2F; undefined</span><br><span class="line">p1 &#x2F;&#x2F; 4</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>并没有<code>p1</code>属性，对<code>p1</code>赋值等于创造了一个全局变量<code>p1</code>。正确的写法应该是，先定义对象<code>obj</code>的属性<code>p1</code>，然后在<code>with</code>区块内操作它。</p><p>这是因为<code>with</code>区块没有改变作用域，它的内部依然是当前作用域。这造成了<code>with</code>语句的一个很大的弊病，就是绑定对象不明确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with (obj) &#123;</span><br><span class="line">  console.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单纯从上面的代码块，根本无法判断<code>x</code>到底是全局变量，还是对象<code>obj</code>的一个属性。这非常不利于代码的除错和模块化，编译器也无法对这段代码进行优化，只能留到运行时判断，这就拖慢了运行速度。<code style="color=red;">因此，建议不要使用<code>with</code>语句，可以考虑用一个临时变量代替<code>with</code>。</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">with(obj1.obj2.obj3) &#123;</span><br><span class="line">  console.log(p1 + p2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 可以写成</span><br><span class="line">var temp &#x3D; obj1.obj2.obj3;</span><br><span class="line">console.log(temp.p1 + temp.p2);</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数会返回不同的值。</p><h4 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h4><p>JavaScript 有三种声明函数的方法。</p><p><strong>（1）function 命令</strong></p><p><code>function</code>命令声明的代码区块，就是一个函数。<code>function</code>命令后面是函数名，函数名后面是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function print(s) &#123;</span><br><span class="line">  console.log(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码命名了一个<code>print</code>函数，以后使用<code>print()</code>这种形式，就可以调用相应的代码。这叫做函数的声明。</p><p><strong>（2）函数表达式</strong></p><p>除了用<code>function</code>命令声明函数，还可以采用变量赋值的写法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var print &#x3D; function(s) &#123;</span><br><span class="line">  console.log(s);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这种写法将一个匿名函数赋值给变量。这时，这个匿名函数又称函数表达式，因为赋值语句的等号右侧只能放表达式。</p><p>采用函数表达式声明函数时，<code>function</code>命令后面不带有函数名。如果加上函数名，该函数名只在函数体内部有效，在函数体外部无效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var print &#x3D; function x()&#123;</span><br><span class="line">  console.log(typeof x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">x</span><br><span class="line">&#x2F;&#x2F; ReferenceError: x is not defined</span><br><span class="line"></span><br><span class="line">print()</span><br><span class="line">&#x2F;&#x2F; function</span><br></pre></td></tr></table></figure><p>上面代码在函数表达式中，加入了函数名<code>x</code>。这个<code>x</code>只在函数体内部可用，指代函数表达式本身，其他地方都不可用。这种写法的用处有两个，一是可以在函数体内部调用自身，二是方便除错（除错工具显示函数调用栈时，将显示函数名，而不再显示这里是一个匿名函数）。因此，下面的形式声明函数也非常常见。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function f() &#123;&#125;;</span><br></pre></td></tr></table></figure><p>需要注意的是，函数的表达式需要在语句的结尾加上分号，表示语句结束。而函数的声明在结尾的大括号后面不用加分号。总的来说，这两种声明函数的方式，差别很细微，可以近似认为是等价的。</p><p><strong>（3）Function 构造函数</strong></p><p>第三种声明函数的方式是<code>Function</code>构造函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var add &#x3D; new Function(</span><br><span class="line">  &#39;x&#39;,</span><br><span class="line">  &#39;y&#39;,</span><br><span class="line">  &#39;return x + y&#39;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">function add(x, y) &#123;</span><br><span class="line">  return x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>Function</code>构造函数接受三个参数，除了最后一个参数是<code>add</code>函数的“函数体”，其他参数都是<code>add</code>函数的参数。</p><p>你可以传递任意数量的参数给<code>Function</code>构造函数，只有最后一个参数会被当做函数体，如果只有一个参数，该参数就是函数体。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var foo &#x3D; new Function(</span><br><span class="line">  &#39;return &quot;hello world&quot;;&#39;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">function foo() &#123;</span><br><span class="line">  return &#39;hello world&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Function</code>构造函数可以不使用<code>new</code>命令，返回结果完全一样。</p><p>总的来说，这种声明函数的方式非常不直观，几乎无人使用。</p><h4 id="函数的重复声明"><a href="#函数的重复声明" class="headerlink" title="函数的重复声明"></a>函数的重复声明</h4><p>如果同一个函数被多次声明，后面的声明就会覆盖前面的声明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;</span><br><span class="line">  console.log(1);</span><br><span class="line">&#125;</span><br><span class="line">f() &#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line">function f() &#123;</span><br><span class="line">  console.log(2);</span><br><span class="line">&#125;</span><br><span class="line">f() &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，后一次的函数声明覆盖了前面一次。而且，由于函数名的提升（参见下文），前一次声明在任何时候都是无效的，这一点要特别注意。</p><h4 id="圆括号运算符，return-语句和递归"><a href="#圆括号运算符，return-语句和递归" class="headerlink" title="圆括号运算符，return 语句和递归"></a>圆括号运算符，return 语句和递归</h4><p>调用函数时，要使用圆括号运算符。圆括号之中，可以加入函数的参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function add(x, y) &#123;</span><br><span class="line">  return x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add(1, 1) &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，函数名后面紧跟一对圆括号，就会调用这个函数。</p><p>函数体内部的<code>return</code>语句，表示返回。JavaScript 引擎遇到<code>return</code>语句，就直接返回<code>return</code>后面的那个表达式的值，后面即使还有语句，也不会得到执行。也就是说，<code>return</code>语句所带的那个表达式，就是函数的返回值。<code>return</code>语句不是必需的，如果没有的话，该函数就不返回任何值，或者说返回<code>undefined</code>。</p><p>函数可以调用自身，这就是递归（recursion）。下面就是通过递归，计算斐波那契数列的代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function fib(num) &#123;</span><br><span class="line">  if (num &#x3D;&#x3D;&#x3D; 0) return 0;</span><br><span class="line">  if (num &#x3D;&#x3D;&#x3D; 1) return 1;</span><br><span class="line">  return fib(num - 2) + fib(num - 1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fib(6) &#x2F;&#x2F; 8</span><br></pre></td></tr></table></figure><p>上面代码中，<code>fib</code>函数内部又调用了<code>fib</code>，计算得到斐波那契数列的第6个元素是8。</p><h4 id="第一等公民"><a href="#第一等公民" class="headerlink" title="第一等公民"></a>第一等公民</h4><p>JavaScript 语言将函数看作一种值，与其它值（数值、字符串、布尔值等等）地位相同。凡是可以使用值的地方，就能使用函数。比如，可以把函数赋值给变量和对象的属性，也可以当作参数传入其他函数，或者作为函数的结果返回。函数只是一个可以执行的值，此外并无特殊之处。</p><p>由于函数与其他数据类型地位平等，所以在 JavaScript 语言中又称函数为第一等公民。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function add(x, y) &#123;</span><br><span class="line">  return x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将函数赋值给一个变量</span><br><span class="line">var operator &#x3D; add;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将函数作为参数和返回值</span><br><span class="line">function a(op)&#123;</span><br><span class="line">  return op;</span><br><span class="line">&#125;</span><br><span class="line">a(add)(1, 1)</span><br><span class="line">&#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><h4 id="函数名的提升"><a href="#函数名的提升" class="headerlink" title="函数名的提升"></a>函数名的提升</h4><p>JavaScript 引擎将函数名视同变量名，所以采用<code>function</code>命令声明函数时，整个函数会像变量声明一样，被提升到代码头部。所以，下面的代码不会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f();</span><br><span class="line"></span><br><span class="line">function f() &#123;&#125;</span><br></pre></td></tr></table></figure><p>表面上，上面代码好像在声明之前就调用了函数<code>f</code>。但是实际上，由于“变量提升”，函数<code>f</code>被提升到了代码头部，也就是在调用之前已经声明了。但是，如果采用赋值语句定义函数，JavaScript 就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f();</span><br><span class="line">var f &#x3D; function ()&#123;&#125;;</span><br><span class="line">&#x2F;&#x2F; TypeError: undefined is not a function</span><br></pre></td></tr></table></figure><p>上面的代码等同于下面的形式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var f;</span><br><span class="line">f();</span><br><span class="line">f &#x3D; function () &#123;&#125;;</span><br></pre></td></tr></table></figure><p>上面代码第二行，调用<code>f</code>的时候，<code>f</code>只是被声明了，还没有被赋值，等于<code>undefined</code>，所以会报错。</p><p>注意，如果像下面例子那样，采用<code>function</code>命令和<code>var</code>赋值语句声明同一个函数，由于存在函数提升，最后会采用<code>var</code>赋值语句的定义。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function () &#123;</span><br><span class="line">  console.log(&#39;1&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function f() &#123;</span><br><span class="line">  console.log(&#39;2&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f() &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面例子中，表面上后面声明的函数<code>f</code>，应该覆盖前面的<code>var</code>赋值语句，但是由于存在函数提升，实际上正好反过来。</p><h4 id="函数的属性和方法"><a href="#函数的属性和方法" class="headerlink" title="函数的属性和方法"></a>函数的属性和方法</h4><p><strong>name 属性</strong></p><p>函数的<code>name</code>属性返回函数的名字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function f1() &#123;&#125;</span><br><span class="line">f1.name &#x2F;&#x2F; &quot;f1&quot;</span><br></pre></td></tr></table></figure><p>如果是通过变量赋值定义的函数，那么<code>name</code>属性返回变量名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var f2 &#x3D; function () &#123;&#125;;</span><br><span class="line">f2.name &#x2F;&#x2F; &quot;f2&quot;</span><br></pre></td></tr></table></figure><p>但是，上面这种情况，只有在变量的值是一个匿名函数时才是如此。如果变量的值是一个具名函数，那么<code>name</code>属性返回<code>function</code>关键字之后的那个函数名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var f3 &#x3D; function myName() &#123;&#125;;</span><br><span class="line">f3.name &#x2F;&#x2F; &#39;myName&#39;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>f3.name</code>返回函数表达式的名字。注意，真正的函数名还是<code>f3</code>，而<code>myName</code>这个名字只在函数体内部可用。</p><p><code>name</code>属性的一个用处，就是获取参数函数的名字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var myFunc &#x3D; function () &#123;&#125;;</span><br><span class="line"></span><br><span class="line">function test(f) &#123;</span><br><span class="line">  console.log(f.name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test(myFunc) &#x2F;&#x2F; myFunc</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>test</code>内部通过<code>name</code>属性，就可以知道传入的参数是什么函数。</p><p><strong>length 属性</strong></p><p>函数的<code>length</code>属性返回函数预期传入的参数个数，即函数定义之中的参数个数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function f(a, b) &#123;&#125;</span><br><span class="line">f.length &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码定义了空函数<code>f</code>，它的<code>length</code>属性就是定义时的参数个数。不管调用时输入了多少个参数，<code>length</code>属性始终等于2。</p><p><code>length</code>属性提供了一种机制，判断定义时和调用时参数的差异，以便实现面向对象编程的“方法重载”（overload）。</p><p><strong>toString()</strong></p><p>函数的<code>toString()</code>方法返回一个字符串，内容是函数的源码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;</span><br><span class="line">  a();</span><br><span class="line">  b();</span><br><span class="line">  c();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f.toString()</span><br><span class="line">&#x2F;&#x2F; function f() &#123;</span><br><span class="line">&#x2F;&#x2F;  a();</span><br><span class="line">&#x2F;&#x2F;  b();</span><br><span class="line">&#x2F;&#x2F;  c();</span><br><span class="line">&#x2F;&#x2F; &#125;</span><br></pre></td></tr></table></figure><p>上面示例中，函数<code>f</code>的<code>toString()</code>方法返回了<code>f</code>的源码，包含换行符在内。</p><p>对于那些原生的函数，<code>toString()</code>方法返回<code>function (){[native code]}</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Math.sqrt.toString()</span><br><span class="line">&#x2F;&#x2F; &quot;function sqrt() &#123; [native code] &#125;&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，<code>Math.sqrt()</code>是 JavaScript 引擎提供的原生函数，<code>toString()</code>方法就返回原生代码的提示。</p><p>函数内部的注释也可以返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;&#x2F;*</span><br><span class="line">  这是一个</span><br><span class="line">  多行注释</span><br><span class="line">*&#x2F;&#125;</span><br><span class="line"></span><br><span class="line">f.toString()</span><br><span class="line">&#x2F;&#x2F; &quot;function f()&#123;&#x2F;*</span><br><span class="line">&#x2F;&#x2F;   这是一个</span><br><span class="line">&#x2F;&#x2F;   多行注释</span><br><span class="line">&#x2F;&#x2F; *&#x2F;&#125;&quot;</span><br></pre></td></tr></table></figure><p>利用这一点，可以变相实现多行字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var multiline &#x3D; function (fn) &#123;</span><br><span class="line">  var arr &#x3D; fn.toString().split(&#39;\n&#39;);</span><br><span class="line">  return arr.slice(1, arr.length - 1).join(&#39;\n&#39;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function f() &#123;&#x2F;*</span><br><span class="line">  这是一个</span><br><span class="line">  多行注释</span><br><span class="line">*&#x2F;&#125;</span><br><span class="line"></span><br><span class="line">multiline(f);</span><br><span class="line">&#x2F;&#x2F; &quot; 这是一个</span><br><span class="line">&#x2F;&#x2F;   多行注释&quot;</span><br></pre></td></tr></table></figure><p>上面示例中，函数<code>f</code>内部有一个多行注释，<code>toString()</code>方法拿到<code>f</code>的源码后，去掉首尾两行，就得到了一个多行字符串。</p><h4 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h4><p><strong>定义</strong></p><p>作用域（scope）指的是变量存在的范围。在 ES5 的规范中，JavaScript 只有两种作用域：一种是全局作用域，变量在整个程序中一直存在，所有地方都可以读取；另一种是函数作用域，变量只在函数内部存在。ES6 又新增了块级作用域，本教程不涉及。</p><p>对于顶层函数来说，函数外部声明的变量就是全局变量，它可以在函数内部读取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var v &#x3D; 1;</span><br><span class="line"></span><br><span class="line">function f() &#123;</span><br><span class="line">  console.log(v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f()</span><br><span class="line">&#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面的代码表明，函数<code>f</code>内部可以读取全局变量<code>v</code>。</p><p>在函数内部定义的变量，外部无法读取，称为“局部变量”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function f()&#123;</span><br><span class="line">  var v &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v &#x2F;&#x2F; ReferenceError: v is not defined</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>v</code>在函数内部定义，所以是一个局部变量，函数之外就无法读取。</p><p>函数内部定义的变量，会在该作用域内覆盖同名全局变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var v &#x3D; 1;</span><br><span class="line"></span><br><span class="line">function f()&#123;</span><br><span class="line">  var v &#x3D; 2;</span><br><span class="line">  console.log(v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f() &#x2F;&#x2F; 2</span><br><span class="line">v &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>v</code>同时在函数的外部和内部有定义。结果，在函数内部定义，局部变量<code>v</code>覆盖了全局变量<code>v</code>。</p><p>注意，对于<code>var</code>命令来说，局部变量只能在函数内部声明，在其他区块中声明，一律都是全局变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (true) &#123;</span><br><span class="line">  var x &#x3D; 5;</span><br><span class="line">&#125;</span><br><span class="line">console.log(x);  &#x2F;&#x2F; 5</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>x</code>在条件判断区块之中声明，结果就是一个全局变量，可以在区块之外读取。</p><p><strong>函数内部的变量提升</strong></p><p>与全局作用域一样，函数作用域内部也会产生“变量提升”现象。<code>var</code>命令声明的变量，不管在什么位置，变量声明都会被提升到函数体的头部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function foo(x) &#123;</span><br><span class="line">  if (x &gt; 100) &#123;</span><br><span class="line">    var tmp &#x3D; x - 100;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于</span><br><span class="line">function foo(x) &#123;</span><br><span class="line">  var tmp;</span><br><span class="line">  if (x &gt; 100) &#123;</span><br><span class="line">    tmp &#x3D; x - 100;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数本身的作用域</strong></p><p>函数本身也是一个值，也有自己的作用域。它的作用域与变量一样，就是其声明时所在的作用域，与其运行时所在的作用域无关。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; 1;</span><br><span class="line">var x &#x3D; function () &#123;</span><br><span class="line">  console.log(a);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function f() &#123;</span><br><span class="line">  var a &#x3D; 2;</span><br><span class="line">  x();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f() &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>x</code>是在函数<code>f</code>的外部声明的，所以它的作用域绑定外层，内部变量<code>a</code>不会到函数<code>f</code>体内取值，所以输出<code>1</code>，而不是<code>2</code>。</p><p>总之，函数执行时所在的作用域，是定义时的作用域，而不是调用时所在的作用域。</p><p>很容易犯错的一点是，如果函数<code>A</code>调用函数<code>B</code>，却没考虑到函数<code>B</code>不会引用函数<code>A</code>的内部变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; function () &#123;</span><br><span class="line">  console.log(a);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function y(f) &#123;</span><br><span class="line">  var a &#x3D; 2;</span><br><span class="line">  f();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">y(x)</span><br><span class="line">&#x2F;&#x2F; ReferenceError: a is not defined</span><br></pre></td></tr></table></figure><p>上面代码将函数<code>x</code>作为参数，传入函数<code>y</code>。但是，函数<code>x</code>是在函数<code>y</code>体外声明的，作用域绑定外层，因此找不到函数<code>y</code>的内部变量<code>a</code>，导致报错。</p><p>同样的，函数体内部声明的函数，作用域绑定函数体内部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function foo() &#123;</span><br><span class="line">  var x &#x3D; 1;</span><br><span class="line">  function bar() &#123;</span><br><span class="line">    console.log(x);</span><br><span class="line">  &#125;</span><br><span class="line">  return bar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var x &#x3D; 2;</span><br><span class="line">var f &#x3D; foo();</span><br><span class="line">f() &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>foo</code>内部声明了一个函数<code>bar</code>，<code>bar</code>的作用域绑定<code>foo</code>。当我们在<code>foo</code>外部取出<code>bar</code>执行时，变量<code>x</code>指向的是<code>foo</code>内部的<code>x</code>，而不是<code>foo</code>外部的<code>x</code>。正是这种机制，构成了下文要讲解的“闭包”现象。</p><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>函数运行的时候，有时需要提供外部数据，不同的外部数据会得到不同的结果，这种外部数据就叫参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function square(x) &#123;</span><br><span class="line">  return x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">square(2) &#x2F;&#x2F; 4</span><br><span class="line">square(3) &#x2F;&#x2F; 9</span><br></pre></td></tr></table></figure><p>上式的<code>x</code>就是<code>square</code>函数的参数。每次运行的时候，需要提供这个值，否则得不到结果。</p><h4 id="参数的省略"><a href="#参数的省略" class="headerlink" title="参数的省略"></a>参数的省略</h4><p>函数参数不是必需的，JavaScript 允许省略参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function f(a, b) &#123;</span><br><span class="line">  return a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1, 2, 3) &#x2F;&#x2F; 1</span><br><span class="line">f(1) &#x2F;&#x2F; 1</span><br><span class="line">f() &#x2F;&#x2F; undefined</span><br><span class="line"></span><br><span class="line">f.length &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码的函数<code>f</code>定义了两个参数，但是运行时无论提供多少个参数（或者不提供参数），JavaScript 都不会报错。省略的参数的值就变为<code>undefined</code>。需要注意的是，函数的<code>length</code>属性与实际传入的参数个数无关，只反映函数预期传入的参数个数。</p><p>但是，没有办法只省略靠前的参数，而保留靠后的参数。如果一定要省略靠前的参数，只有显式传入<code>undefined</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function f(a, b) &#123;</span><br><span class="line">  return a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f( , 1) &#x2F;&#x2F; SyntaxError: Unexpected token ,(…)</span><br><span class="line">f(undefined, 1) &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><p>上面代码中，如果省略第一个参数，就会报错。</p><h4 id="传递方式"><a href="#传递方式" class="headerlink" title="传递方式"></a>传递方式</h4><p>函数参数如果是原始类型的值（数值、字符串、布尔值），传递方式是传值传递（passes by value）。这意味着，在函数体内修改参数值，不会影响到函数外部。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var p &#x3D; 2;</span><br><span class="line"></span><br><span class="line">function f(p) &#123;</span><br><span class="line">  p &#x3D; 3;</span><br><span class="line">&#125;</span><br><span class="line">f(p);</span><br><span class="line"></span><br><span class="line">p &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>p</code>是一个原始类型的值，传入函数<code>f</code>的方式是传值传递。因此，在函数内部，<code>p</code>的值是原始值的拷贝，无论怎么修改，都不会影响到原始值。</p><p>但是，如果函数参数是复合类型的值（数组、对象、其他函数），传递方式是传址传递（pass by reference）。也就是说，传入函数的原始值的地址，因此在函数内部修改参数，将会影响到原始值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123; p: 1 &#125;;</span><br><span class="line"></span><br><span class="line">function f(o) &#123;</span><br><span class="line">  o.p &#x3D; 2;</span><br><span class="line">&#125;</span><br><span class="line">f(obj);</span><br><span class="line"></span><br><span class="line">obj.p &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，传入函数<code>f</code>的是参数对象<code>obj</code>的地址。因此，在函数内部修改<code>obj</code>的属性<code>p</code>，会影响到原始值。</p><p>注意，如果函数内部修改的，不是参数对象的某个属性，而是替换掉整个参数，这时不会影响到原始值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; [1, 2, 3];</span><br><span class="line"></span><br><span class="line">function f(o) &#123;</span><br><span class="line">  o &#x3D; [2, 3, 4];</span><br><span class="line">&#125;</span><br><span class="line">f(obj);</span><br><span class="line"></span><br><span class="line">obj &#x2F;&#x2F; [1, 2, 3]</span><br></pre></td></tr></table></figure><p>上面代码中，在函数<code>f()</code>内部，参数对象<code>obj</code>被整个替换成另一个值。这时不会影响到原始值。这是因为，形式参数（<code>o</code>）的值实际是参数<code>obj</code>的地址，重新对<code>o</code>赋值导致<code>o</code>指向另一个地址，保存在原地址上的值当然不受影响。</p><h4 id="同名参数"><a href="#同名参数" class="headerlink" title="同名参数"></a>同名参数</h4><p>如果有同名的参数，则取最后出现的那个值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function f(a, a) &#123;</span><br><span class="line">  console.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1, 2) &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f()</code>有两个参数，且参数名都是<code>a</code>。取值的时候，以后面的<code>a</code>为准，即使后面的<code>a</code>没有值或被省略，也是以其为准。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function f(a, a) &#123;</span><br><span class="line">  console.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1) &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><p>调用函数<code>f()</code>的时候，没有提供第二个参数，<code>a</code>的取值就变成了<code>undefined</code>。这时，如果要获得第一个<code>a</code>的值，可以使用<code>arguments</code>对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function f(a, a) &#123;</span><br><span class="line">  console.log(arguments[0]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1) &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><h4 id="arguments-对象"><a href="#arguments-对象" class="headerlink" title="arguments 对象"></a>arguments 对象</h4><p><strong>（1）定义</strong></p><p>由于 JavaScript 允许函数有不定数目的参数，所以需要一种机制，可以在函数体内部读取所有参数。这就是<code>arguments</code>对象的由来。</p><p><code>arguments</code>对象包含了函数运行时的所有参数，<code>arguments[0]</code>就是第一个参数，<code>arguments[1]</code>就是第二个参数，以此类推。这个对象只有在函数体内部，才可以使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function (one) &#123;</span><br><span class="line">  console.log(arguments[0]);</span><br><span class="line">  console.log(arguments[1]);</span><br><span class="line">  console.log(arguments[2]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1, 2, 3)</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line">&#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>正常模式下，<code>arguments</code>对象可以在运行时修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function(a, b) &#123;</span><br><span class="line">  arguments[0] &#x3D; 3;</span><br><span class="line">  arguments[1] &#x3D; 2;</span><br><span class="line">  return a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1, 1) &#x2F;&#x2F; 5</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f()</code>调用时传入的参数，在函数内部被修改成<code>3</code>和<code>2</code>。</p><p>严格模式下，<code>arguments</code>对象与函数参数不具有联动关系。也就是说，修改<code>arguments</code>对象不会影响到实际的函数参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function(a, b) &#123;</span><br><span class="line">  &#39;use strict&#39;; &#x2F;&#x2F; 开启严格模式</span><br><span class="line">  arguments[0] &#x3D; 3;</span><br><span class="line">  arguments[1] &#x3D; 2;</span><br><span class="line">  return a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1, 1) &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，函数体内是严格模式，这时修改<code>arguments</code>对象，不会影响到真实参数<code>a</code>和<code>b</code>。</p><p>通过<code>arguments</code>对象的<code>length</code>属性，可以判断函数调用时到底带几个参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function f() &#123;</span><br><span class="line">  return arguments.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(1, 2, 3) &#x2F;&#x2F; 3</span><br><span class="line">f(1) &#x2F;&#x2F; 1</span><br><span class="line">f() &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure><p><strong>（2）与数组的关系</strong></p><p>需要注意的是，虽然<code>arguments</code>很像数组，但它是一个对象。数组专有的方法（比如<code>slice</code>和<code>forEach</code>），不能在<code>arguments</code>对象上直接使用。</p><p>如果要让<code>arguments</code>对象使用数组方法，真正的解决方法是将<code>arguments</code>转为真正的数组。下面是两种常用的转换方法：<code>slice</code>方法和逐一填入新数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var args &#x3D; Array.prototype.slice.call(arguments);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 或者</span><br><span class="line">var args &#x3D; [];</span><br><span class="line">for (var i &#x3D; 0; i &lt; arguments.length; i++) &#123;</span><br><span class="line">  args.push(arguments[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）callee 属性</strong></p><p><code>arguments</code>对象带有一个<code>callee</code>属性，返回它所对应的原函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function () &#123;</span><br><span class="line">  console.log(arguments.callee &#x3D;&#x3D;&#x3D; f);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f() &#x2F;&#x2F; true</span><br></pre></td></tr></table></figure><p>可以通过<code>arguments.callee</code>，达到调用函数自身的目的。这个属性在严格模式里面是禁用的，因此不建议使用。</p><h4 id="函数的其他知识点"><a href="#函数的其他知识点" class="headerlink" title="函数的其他知识点"></a>函数的其他知识点</h4><p><strong>闭包</strong></p><p>闭包（closure）是 JavaScript 语言的一个难点，也是它的特色，很多高级应用都要依靠闭包实现。</p><p>理解闭包，首先必须理解变量作用域。前面提到，JavaScript 有两种作用域：全局作用域和函数作用域。函数内部可以直接读取全局变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var n &#x3D; 999;</span><br><span class="line"></span><br><span class="line">function f1() &#123;</span><br><span class="line">  console.log(n);</span><br><span class="line">&#125;</span><br><span class="line">f1() &#x2F;&#x2F; 999</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f1</code>可以读取全局变量<code>n</code>。</p><p>但是，正常情况下，函数外部无法读取函数内部声明的变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function f1() &#123;</span><br><span class="line">  var n &#x3D; 999;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(n)</span><br><span class="line">&#x2F;&#x2F; Uncaught ReferenceError: n is not defined(</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f1</code>内部声明的变量<code>n</code>，函数外是无法读取的。</p><p>如果出于种种原因，需要得到函数内的局部变量。正常情况下，这是办不到的，只有通过变通方法才能实现。那就是在函数的内部，再定义一个函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function f1() &#123;</span><br><span class="line">  var n &#x3D; 999;</span><br><span class="line">  function f2() &#123;</span><br><span class="line">　　console.log(n); &#x2F;&#x2F; 999</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f2</code>就在函数<code>f1</code>内部，这时<code>f1</code>内部的所有局部变量，对<code>f2</code>都是可见的。但是反过来就不行，<code>f2</code>内部的局部变量，对<code>f1</code>就是不可见的。这就是 JavaScript 语言特有的”链式作用域”结构（chain scope），子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。</p><p>既然<code>f2</code>可以读取<code>f1</code>的局部变量，那么只要把<code>f2</code>作为返回值，我们不就可以在<code>f1</code>外部读取它的内部变量了吗！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function f1() &#123;</span><br><span class="line">  var n &#x3D; 999;</span><br><span class="line">  function f2() &#123;</span><br><span class="line">    console.log(n);</span><br><span class="line">  &#125;</span><br><span class="line">  return f2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var result &#x3D; f1();</span><br><span class="line">result(); &#x2F;&#x2F; 999</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f1</code>的返回值就是函数<code>f2</code>，由于<code>f2</code>可以读取<code>f1</code>的内部变量，所以就可以在外部获得<code>f1</code>的内部变量了。</p><p>闭包就是函数<code>f2</code>，即能够读取其他函数内部变量的函数。由于在 JavaScript 语言中，只有函数内部的子函数才能读取内部变量，因此可以把闭包简单理解成“定义在一个函数内部的函数”。闭包最大的特点，就是它可以“记住”诞生的环境，比如<code>f2</code>记住了它诞生的环境<code>f1</code>，所以从<code>f2</code>可以得到<code>f1</code>的内部变量。在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。</p><p>闭包的最大用处有两个，一个是可以读取外层函数内部的变量，另一个就是让这些变量始终保持在内存中，即闭包可以使得它诞生环境一直存在。请看下面的例子，闭包使得内部变量记住上一次调用时的运算结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function createIncrementor(start) &#123;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    return start++;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var inc &#x3D; createIncrementor(5);</span><br><span class="line"></span><br><span class="line">inc() &#x2F;&#x2F; 5</span><br><span class="line">inc() &#x2F;&#x2F; 6</span><br><span class="line">inc() &#x2F;&#x2F; 7</span><br></pre></td></tr></table></figure><p>上面代码中，<code>start</code>是函数<code>createIncrementor</code>的内部变量。通过闭包，<code>start</code>的状态被保留了，每一次调用都是在上一次调用的基础上进行计算。从中可以看到，闭包<code>inc</code>使得函数<code>createIncrementor</code>的内部环境，一直存在。所以，闭包可以看作是函数内部作用域的一个接口。</p><p>为什么闭包能够返回外层函数的内部变量？原因是闭包（上例的<code>inc</code>）用到了外层变量（<code>start</code>），导致外层函数（<code>createIncrementor</code>）不能从内存释放。只要闭包没有被垃圾回收机制清除，外层函数提供的运行环境也不会被清除，它的内部变量就始终保存着当前值，供闭包读取。</p><p>闭包的另一个用处，是封装对象的私有属性和私有方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function Person(name) &#123;</span><br><span class="line">  var _age;</span><br><span class="line">  function setAge(n) &#123;</span><br><span class="line">    _age &#x3D; n;</span><br><span class="line">  &#125;</span><br><span class="line">  function getAge() &#123;</span><br><span class="line">    return _age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  return &#123;</span><br><span class="line">    name: name,</span><br><span class="line">    getAge: getAge,</span><br><span class="line">    setAge: setAge</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var p1 &#x3D; Person(&#39;张三&#39;);</span><br><span class="line">p1.setAge(25);</span><br><span class="line">p1.getAge() &#x2F;&#x2F; 25</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>Person</code>的内部变量<code>_age</code>，通过闭包<code>getAge</code>和<code>setAge</code>，变成了返回对象<code>p1</code>的私有变量。</p><p>注意，外层函数每次运行，都会生成一个新的闭包，而这个闭包又会保留外层函数的内部变量，所以内存消耗很大。因此不能滥用闭包，否则会造成网页的性能问题。</p><h4 id="立即调用的函数表达式（IIFE）"><a href="#立即调用的函数表达式（IIFE）" class="headerlink" title="立即调用的函数表达式（IIFE）"></a>立即调用的函数表达式（IIFE）</h4><p>根据 JavaScript 的语法，圆括号<code>()</code>跟在函数名之后，表示调用该函数。比如，<code>print()</code>就表示调用<code>print</code>函数。</p><p>有时，我们需要在定义函数之后，立即调用该函数。这时，你不能在函数的定义之后加上圆括号，这会产生语法错误。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function()&#123; &#x2F;* code *&#x2F; &#125;();</span><br><span class="line">&#x2F;&#x2F; SyntaxError: Unexpected token (</span><br></pre></td></tr></table></figure><p>产生这个错误的原因是，<code>function</code>这个关键字即可以当作语句，也可以当作表达式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 语句</span><br><span class="line">function f() &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 表达式</span><br><span class="line">var f &#x3D; function f() &#123;&#125;</span><br></pre></td></tr></table></figure><p>当作表达式时，函数可以定义后直接加圆括号调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var f &#x3D; function f()&#123; return 1&#125;();</span><br><span class="line">f &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面的代码中，函数定义后直接加圆括号调用，没有报错。原因就是<code>function</code>作为表达式，引擎就把函数定义当作一个值。这种情况下，就不会报错。</p><p>为了避免解析的歧义，JavaScript 规定，如果<code>function</code>关键字出现在行首，一律解释成语句。因此，引擎看到行首是<code>function</code>关键字之后，认为这一段都是函数的定义，不应该以圆括号结尾，所以就报错了。</p><p>函数定义后立即调用的解决方法，就是不要让<code>function</code>出现在行首，让引擎将其理解成一个表达式。最简单的处理，就是将其放在一个圆括号里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(function()&#123; &#x2F;* code *&#x2F; &#125;());</span><br><span class="line">&#x2F;&#x2F; 或者</span><br><span class="line">(function()&#123; &#x2F;* code *&#x2F; &#125;)();</span><br></pre></td></tr></table></figure><p>上面两种写法都是以圆括号开头，引擎就会认为后面跟的是一个表达式，而不是函数定义语句，所以就避免了错误。这就叫做“立即调用的函数表达式”（Immediately-Invoked Function Expression），简称 IIFE。</p><p>注意，上面两种写法最后的分号都是必须的。如果省略分号，遇到连着两个 IIFE，可能就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 报错</span><br><span class="line">(function()&#123; &#x2F;* code *&#x2F; &#125;())</span><br><span class="line">(function()&#123; &#x2F;* code *&#x2F; &#125;())</span><br></pre></td></tr></table></figure><p>上面代码的两行之间没有分号，JavaScript 会将它们连在一起解释，将第二行解释为第一行的参数。</p><p>推而广之，任何让解释器以表达式来处理函数定义的方法，都能产生同样的效果，比如下面三种写法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var i &#x3D; function()&#123; return 10; &#125;();</span><br><span class="line">true &amp;&amp; function()&#123; &#x2F;* code *&#x2F; &#125;();</span><br><span class="line">0, function()&#123; &#x2F;* code *&#x2F; &#125;();</span><br></pre></td></tr></table></figure><p>甚至像下面这样写，也是可以的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">!function () &#123; &#x2F;* code *&#x2F; &#125;();</span><br><span class="line">~function () &#123; &#x2F;* code *&#x2F; &#125;();</span><br><span class="line">-function () &#123; &#x2F;* code *&#x2F; &#125;();</span><br><span class="line">+function () &#123; &#x2F;* code *&#x2F; &#125;();</span><br></pre></td></tr></table></figure><p>通常情况下，只对匿名函数使用这种“立即执行的函数表达式”。它的目的有两个：一是不必为函数命名，避免了污染全局变量；二是 IIFE 内部形成了一个单独的作用域，可以封装一些外部无法读取的私有变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 写法一</span><br><span class="line">var tmp &#x3D; newData;</span><br><span class="line">processData(tmp);</span><br><span class="line">storeData(tmp);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 写法二</span><br><span class="line">(function () &#123;</span><br><span class="line">  var tmp &#x3D; newData;</span><br><span class="line">  processData(tmp);</span><br><span class="line">  storeData(tmp);</span><br><span class="line">&#125;());</span><br></pre></td></tr></table></figure><p>上面代码中，写法二比写法一更好，因为完全避免了污染全局变量。</p><h3 id="eval-命令"><a href="#eval-命令" class="headerlink" title="eval 命令"></a>eval 命令</h3><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><p><code>eval</code>命令接受一个字符串作为参数，并将这个字符串当作语句执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eval(&#39;var a &#x3D; 1;&#39;);</span><br><span class="line">a &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码将字符串当作语句运行，生成了变量<code>a</code>。</p><p>如果参数字符串无法当作语句运行，那么就会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(&#39;3x&#39;) &#x2F;&#x2F; Uncaught SyntaxError: Invalid or unexpected token</span><br></pre></td></tr></table></figure><p>放在<code>eval</code>中的字符串，应该有独自存在的意义，不能用来与<code>eval</code>以外的命令配合使用。举例来说，下面的代码将会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(&#39;return;&#39;); &#x2F;&#x2F; Uncaught SyntaxError: Illegal return statement</span><br></pre></td></tr></table></figure><p>上面代码会报错，因为<code>return</code>不能单独使用，必须在函数中使用。</p><p>如果<code>eval</code>的参数不是字符串，那么会原样返回。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval(123) &#x2F;&#x2F; 123</span><br></pre></td></tr></table></figure><p><code>eval</code>没有自己的作用域，都在当前作用域内执行，因此可能会修改当前作用域的变量的值，造成安全问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; 1;</span><br><span class="line">eval(&#39;a &#x3D; 2&#39;);</span><br><span class="line"></span><br><span class="line">a &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><p>上面代码中，<code>eval</code>命令修改了外部变量<code>a</code>的值。由于这个原因，<code>eval</code>有安全风险。</p><p>为了防止这种风险，JavaScript 规定，如果使用严格模式，<code>eval</code>内部声明的变量，不会影响到外部作用域。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(function f() &#123;</span><br><span class="line">  &#39;use strict&#39;;</span><br><span class="line">  eval(&#39;var foo &#x3D; 123&#39;);</span><br><span class="line">  console.log(foo);  &#x2F;&#x2F; ReferenceError: foo is not defined</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>上面代码中，函数<code>f</code>内部是严格模式，这时<code>eval</code>内部声明的<code>foo</code>变量，就不会影响到外部。</p><p>不过，即使在严格模式下，<code>eval</code>依然可以读写当前作用域的变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(function f() &#123;</span><br><span class="line">  &#39;use strict&#39;;</span><br><span class="line">  var foo &#x3D; 1;</span><br><span class="line">  eval(&#39;foo &#x3D; 2&#39;);</span><br><span class="line">  console.log(foo);  &#x2F;&#x2F; 2</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>上面代码中，严格模式下，<code>eval</code>内部还是改写了外部变量，可见安全风险依然存在。</p><p>总之，<code>eval</code>的本质是在当前作用域之中，注入代码。由于安全风险和不利于 JavaScript 引擎优化执行速度，所以一般不推荐使用。通常情况下，<code>eval</code>最常见的场合是解析 JSON 数据的字符串，不过正确的做法应该是使用原生的<code>JSON.parse</code>方法。</p><h4 id="eval-的别名调用"><a href="#eval-的别名调用" class="headerlink" title="eval 的别名调用"></a>eval 的别名调用</h4><p>前面说过<code>eval</code>不利于引擎优化执行速度。更麻烦的是，还有下面这种情况，引擎在静态代码分析的阶段，根本无法分辨执行的是<code>eval</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var m &#x3D; eval;</span><br><span class="line">m(&#39;var x &#x3D; 1&#39;);</span><br><span class="line">x &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，变量<code>m</code>是<code>eval</code>的别名。静态代码分析阶段，引擎分辨不出<code>m(&#39;var x = 1&#39;)</code>执行的是<code>eval</code>命令。</p><p>为了保证<code>eval</code>的别名不影响代码优化，JavaScript 的标准规定，凡是使用别名执行<code>eval</code>，<code>eval</code>内部一律是全局作用域。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; 1;</span><br><span class="line"></span><br><span class="line">function f() &#123;</span><br><span class="line">  var a &#x3D; 2;</span><br><span class="line">  var e &#x3D; eval;</span><br><span class="line">  e(&#39;console.log(a)&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f() &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure><p>上面代码中，<code>eval</code>是别名调用，所以即使它是在函数中，它的作用域还是全局作用域，因此输出的<code>a</code>为全局变量。这样的话，引擎就能确认<code>e()</code>不会对当前的函数作用域产生影响，优化的时候就可以把这一行排除掉。</p><p><code>eval</code>的别名调用的形式五花八门，只要不是直接调用，都属于别名调用，因为引擎只能分辨<code>eval()</code>这一种形式是直接调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eval.call(null, &#39;...&#39;)</span><br><span class="line">window.eval(&#39;...&#39;)</span><br><span class="line">(1, eval)(&#39;...&#39;)</span><br><span class="line">(eval, eval)(&#39;...&#39;)</span><br></pre></td></tr></table></figure><p>上面这些形式都是<code>eval</code>的别名调用，作用域都是全局作用域。</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>数组（array）是按次序排列的一组值。每个值的位置都有编号（从0开始），整个数组用方括号表示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];</span><br></pre></td></tr></table></figure><p>上面代码中的<code>a</code>、<code>b</code>、<code>c</code>就构成一个数组，两端的方括号是数组的标志。<code>a</code>是0号位置，<code>b</code>是1号位置，<code>c</code>是2号位置。</p><p>除了在定义时赋值，数组也可以先定义后赋值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [];</span><br><span class="line"></span><br><span class="line">arr[0] &#x3D; &#39;a&#39;;</span><br><span class="line">arr[1] &#x3D; &#39;b&#39;;</span><br><span class="line">arr[2] &#x3D; &#39;c&#39;;</span><br></pre></td></tr></table></figure><p>任何类型的数据，都可以放入数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [</span><br><span class="line">  &#123;a: 1&#125;,</span><br><span class="line">  [1, 2, 3],</span><br><span class="line">  function() &#123;return true;&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">arr[0] &#x2F;&#x2F; Object &#123;a: 1&#125;</span><br><span class="line">arr[1] &#x2F;&#x2F; [1, 2, 3]</span><br><span class="line">arr[2] &#x2F;&#x2F; function ()&#123;return true;&#125;</span><br></pre></td></tr></table></figure><p>上面数组<code>arr</code>的3个成员依次是对象、数组、函数。</p><p>如果数组的元素还是数组，就形成了多维数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [[1, 2], [3, 4]];</span><br><span class="line">a[0][1] &#x2F;&#x2F; 2</span><br><span class="line">a[1][1] &#x2F;&#x2F; 4</span><br></pre></td></tr></table></figure><h4 id="数组的本质"><a href="#数组的本质" class="headerlink" title="数组的本质"></a>数组的本质</h4><p>本质上，数组属于一种特殊的对象。<code>typeof</code>运算符会返回数组的类型是<code>object</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typeof [1, 2, 3] &#x2F;&#x2F; &quot;object&quot;</span><br></pre></td></tr></table></figure><p>上面代码表明，<code>typeof</code>运算符认为数组的类型就是对象。</p><p>数组的特殊性体现在，它的键名是按次序排列的一组整数（0，1，2…）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];</span><br><span class="line"></span><br><span class="line">Object.keys(arr)</span><br><span class="line">&#x2F;&#x2F; [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;]</span><br></pre></td></tr></table></figure><p>上面代码中，<code>Object.keys</code>方法返回数组的所有键名。可以看到数组的键名就是整数0、1、2。</p><p>由于数组成员的键名是固定的（默认总是0、1、2…），因此数组不用为每个元素指定键名，而对象的每个成员都必须指定键名。JavaScript 语言规定，对象的键名一律为字符串，所以，数组的键名其实也是字符串。之所以可以用数值读取，是因为非字符串的键名会被转为字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];</span><br><span class="line"></span><br><span class="line">arr[&#39;0&#39;] &#x2F;&#x2F; &#39;a&#39;</span><br><span class="line">arr[0] &#x2F;&#x2F; &#39;a&#39;</span><br></pre></td></tr></table></figure><p>上面代码分别用数值和字符串作为键名，结果都能读取数组。原因是数值键名被自动转为了字符串。</p><p>注意，这点在赋值时也成立。一个值总是先转成字符串，再作为键名进行赋值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [];</span><br><span class="line"></span><br><span class="line">a[1.00] &#x3D; 6;</span><br><span class="line">a[1] &#x2F;&#x2F; 6</span><br></pre></td></tr></table></figure><p>上面代码中，由于<code>1.00</code>转成字符串是<code>1</code>，所以通过数字键<code>1</code>可以读取值。</p><p>上一章说过，对象有两种读取成员的方法：点结构（<code>object.key</code>）和方括号结构（<code>object[key]</code>）。但是，对于数值的键名，不能使用点结构。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [1, 2, 3];</span><br><span class="line">arr.0 &#x2F;&#x2F; SyntaxError</span><br></pre></td></tr></table></figure><p>上面代码中，<code>arr.0</code>的写法不合法，因为单独的数值不能作为标识符（identifier）。所以，数组成员只能用方括号<code>arr[0]</code>表示（方括号是运算符，可以接受数值）。</p><h4 id="length-属性-1"><a href="#length-属性-1" class="headerlink" title="length 属性"></a>length 属性</h4><p>数组的<code>length</code>属性，返回数组的成员数量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;].length &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>JavaScript 使用一个32位整数，保存数组的元素个数。这意味着，数组成员最多只有 4294967295 个（232 - 1）个，也就是说<code>length</code>属性的最大值就是 4294967295。</p><p>只要是数组，就一定有<code>length</code>属性。该属性是一个动态的值，等于键名中的最大整数加上<code>1</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&#39;a&#39;, &#39;b&#39;];</span><br><span class="line">arr.length &#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line">arr[2] &#x3D; &#39;c&#39;;</span><br><span class="line">arr.length &#x2F;&#x2F; 3</span><br><span class="line"></span><br><span class="line">arr[9] &#x3D; &#39;d&#39;;</span><br><span class="line">arr.length &#x2F;&#x2F; 10</span><br><span class="line"></span><br><span class="line">arr[1000] &#x3D; &#39;e&#39;;</span><br><span class="line">arr.length &#x2F;&#x2F; 1001</span><br></pre></td></tr></table></figure><p>上面代码表示，数组的数字键不需要连续，<code>length</code>属性的值总是比最大的那个整数键大<code>1</code>。另外，这也表明数组是一种动态的数据结构，可以随时增减数组的成员。</p><p><code>length</code>属性是可写的。如果人为设置一个小于当前成员个数的值，该数组的成员数量会自动减少到<code>length</code>设置的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ];</span><br><span class="line">arr.length &#x2F;&#x2F; 3</span><br><span class="line"></span><br><span class="line">arr.length &#x3D; 2;</span><br><span class="line">arr &#x2F;&#x2F; [&quot;a&quot;, &quot;b&quot;]</span><br></pre></td></tr></table></figure><p>上面代码表示，当数组的<code>length</code>属性设为2（即最大的整数键只能是1）那么整数键2（值为<code>c</code>）就已经不在数组中了，被自动删除了。</p><p>清空数组的一个有效方法，就是将<code>length</code>属性设为0。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ];</span><br><span class="line"></span><br><span class="line">arr.length &#x3D; 0;</span><br><span class="line">arr &#x2F;&#x2F; []</span><br></pre></td></tr></table></figure><p>如果人为设置<code>length</code>大于当前元素个数，则数组的成员数量会增加到这个值，新增的位置都是空位。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [&#39;a&#39;];</span><br><span class="line"></span><br><span class="line">a.length &#x3D; 3;</span><br><span class="line">a[1] &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><p>上面代码表示，当<code>length</code>属性设为大于数组个数时，读取新增的位置都会返回<code>undefined</code>。</p><p>如果人为设置<code>length</code>为不合法的值，JavaScript 会报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 设置负值</span><br><span class="line">[].length &#x3D; -1</span><br><span class="line">&#x2F;&#x2F; RangeError: Invalid array length</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 数组元素个数大于等于2的32次方</span><br><span class="line">[].length &#x3D; Math.pow(2, 32)</span><br><span class="line">&#x2F;&#x2F; RangeError: Invalid array length</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置字符串</span><br><span class="line">[].length &#x3D; &#39;abc&#39;</span><br><span class="line">&#x2F;&#x2F; RangeError: Invalid array length</span><br></pre></td></tr></table></figure><p>值得注意的是，由于数组本质上是一种对象，所以可以为数组添加属性，但是这不影响<code>length</code>属性的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [];</span><br><span class="line"></span><br><span class="line">a[&#39;p&#39;] &#x3D; &#39;abc&#39;;</span><br><span class="line">a.length &#x2F;&#x2F; 0</span><br><span class="line"></span><br><span class="line">a[2.1] &#x3D; &#39;abc&#39;;</span><br><span class="line">a.length &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure><p>上面代码将数组的键分别设为字符串和小数，结果都不影响<code>length</code>属性。因为，<code>length</code>属性的值就是等于最大的数字键加1，而这个数组没有整数键，所以<code>length</code>属性保持为<code>0</code>。</p><p>如果数组的键名是添加超出范围的数值，该键名会自动转为字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [];</span><br><span class="line">arr[-1] &#x3D; &#39;a&#39;;</span><br><span class="line">arr[Math.pow(2, 32)] &#x3D; &#39;b&#39;;</span><br><span class="line"></span><br><span class="line">arr.length &#x2F;&#x2F; 0</span><br><span class="line">arr[-1] &#x2F;&#x2F; &quot;a&quot;</span><br><span class="line">arr[4294967296] &#x2F;&#x2F; &quot;b&quot;</span><br></pre></td></tr></table></figure><p>上面代码中，我们为数组<code>arr</code>添加了两个不合法的数字键，结果<code>length</code>属性没有发生变化。这些数字键都变成了字符串键名。最后两行之所以会取到值，是因为取键值时，数字键名会默认转为字符串。</p><h4 id="in-运算符"><a href="#in-运算符" class="headerlink" title="in 运算符"></a>in 运算符</h4><p>检查某个键名是否存在的运算符<code>in</code>，适用于对象，也适用于数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [ &#39;a&#39;, &#39;b&#39;, &#39;c&#39; ];</span><br><span class="line">2 in arr  &#x2F;&#x2F; true</span><br><span class="line">&#39;2&#39; in arr &#x2F;&#x2F; true</span><br><span class="line">4 in arr &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码表明，数组存在键名为<code>2</code>的键。由于键名都是字符串，所以数值<code>2</code>会自动转成字符串。</p><p>注意，如果数组的某个位置是空位，<code>in</code>运算符返回<code>false</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [];</span><br><span class="line">arr[100] &#x3D; &#39;a&#39;;</span><br><span class="line"></span><br><span class="line">100 in arr &#x2F;&#x2F; true</span><br><span class="line">1 in arr &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码中，数组<code>arr</code>只有一个成员<code>arr[100]</code>，其他位置的键名都会返回<code>false</code>。</p><h4 id="for…in-循环和数组的遍历"><a href="#for…in-循环和数组的遍历" class="headerlink" title="for…in 循环和数组的遍历"></a>for…in 循环和数组的遍历</h4><p><code>for...in</code>循环不仅可以遍历对象，也可以遍历数组，毕竟数组只是一种特殊对象。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [1, 2, 3];</span><br><span class="line"></span><br><span class="line">for (var i in a) &#123;</span><br><span class="line">  console.log(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line">&#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>但是，<code>for...in</code>不仅会遍历数组所有的数字键，还会遍历非数字键。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [1, 2, 3];</span><br><span class="line">a.foo &#x3D; true;</span><br><span class="line"></span><br><span class="line">for (var key in a) &#123;</span><br><span class="line">  console.log(key);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 0</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line">&#x2F;&#x2F; foo</span><br></pre></td></tr></table></figure><p>上面代码在遍历数组时，也遍历到了非整数键<code>foo</code>。<code style="color=red;">所以，不推荐使用<code>for...in</code>遍历数组。</code></p><p>数组的遍历可以考虑使用<code>for</code>循环或<code>while</code>循环。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [1, 2, 3];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; for循环</span><br><span class="line">for(var i &#x3D; 0; i &lt; a.length; i++) &#123;</span><br><span class="line">  console.log(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; while循环</span><br><span class="line">var i &#x3D; 0;</span><br><span class="line">while (i &lt; a.length) &#123;</span><br><span class="line">  console.log(a[i]);</span><br><span class="line">  i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var l &#x3D; a.length;</span><br><span class="line">while (l--) &#123;</span><br><span class="line">  console.log(a[l]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码是三种遍历数组的写法。最后一种写法是逆向遍历，即从最后一个元素向第一个元素遍历。</p><p>数组的<code>forEach</code>方法，也可以用来遍历数组，详见《标准库》的 Array 对象一章。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var colors &#x3D; [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;];</span><br><span class="line">colors.forEach(function (color) &#123;</span><br><span class="line">  console.log(color);</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; red</span><br><span class="line">&#x2F;&#x2F; green</span><br><span class="line">&#x2F;&#x2F; blue</span><br></pre></td></tr></table></figure><h4 id="数组的空位"><a href="#数组的空位" class="headerlink" title="数组的空位"></a>数组的空位</h4><p>当数组的某个位置是空元素，即两个逗号之间没有任何值，我们称该数组存在空位（hole）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [1, , 1];</span><br><span class="line">a.length &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>上面代码表明，数组的空位不影响<code>length</code>属性。</p><p>需要注意的是，如果最后一个元素后面有逗号，并不会产生空位。也就是说，有没有这个逗号，结果都是一样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [1, 2, 3,];</span><br><span class="line"></span><br><span class="line">a.length &#x2F;&#x2F; 3</span><br><span class="line">a &#x2F;&#x2F; [1, 2, 3]</span><br></pre></td></tr></table></figure><p>上面代码中，数组最后一个成员后面有一个逗号，这不影响<code>length</code>属性的值，与没有这个逗号时效果一样。</p><p>数组的空位是可以读取的，返回<code>undefined</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [, , ,];</span><br><span class="line">a[1] &#x2F;&#x2F; undefined</span><br></pre></td></tr></table></figure><p>使用<code>delete</code>命令删除一个数组成员，会形成空位，并且不会影响<code>length</code>属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [1, 2, 3];</span><br><span class="line">delete a[1];</span><br><span class="line"></span><br><span class="line">a[1] &#x2F;&#x2F; undefined</span><br><span class="line">a.length &#x2F;&#x2F; 3</span><br></pre></td></tr></table></figure><p>上面代码用<code>delete</code>命令删除了数组的第二个元素，这个位置就形成了空位，但是对<code>length</code>属性没有影响。也就是说，<code>length</code>属性不过滤空位。所以，使用<code>length</code>属性进行数组遍历，一定要非常小心。</p><p>数组的某个位置是空位，与某个位置是<code>undefined</code>，是不一样的。如果是空位，使用数组的<code>forEach</code>方法、<code>for...in</code>结构、以及<code>Object.keys</code>方法进行遍历，空位都会被跳过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [, , ,];</span><br><span class="line"></span><br><span class="line">a.forEach(function (x, i) &#123;</span><br><span class="line">  console.log(i + &#39;. &#39; + x);</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F; 不产生任何输出</span><br><span class="line"></span><br><span class="line">for (var i in a) &#123;</span><br><span class="line">  console.log(i);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 不产生任何输出</span><br><span class="line"></span><br><span class="line">Object.keys(a)</span><br><span class="line">&#x2F;&#x2F; []</span><br></pre></td></tr></table></figure><p>如果某个位置是<code>undefined</code>，遍历的时候就不会被跳过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var a &#x3D; [undefined, undefined, undefined];</span><br><span class="line"></span><br><span class="line">a.forEach(function (x, i) &#123;</span><br><span class="line">  console.log(i + &#39;. &#39; + x);</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 0. undefined</span><br><span class="line">&#x2F;&#x2F; 1. undefined</span><br><span class="line">&#x2F;&#x2F; 2. undefined</span><br><span class="line"></span><br><span class="line">for (var i in a) &#123;</span><br><span class="line">  console.log(i);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 0</span><br><span class="line">&#x2F;&#x2F; 1</span><br><span class="line">&#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line">Object.keys(a)</span><br><span class="line">&#x2F;&#x2F; [&#39;0&#39;, &#39;1&#39;, &#39;2&#39;]</span><br></pre></td></tr></table></figure><p>这就是说，空位就是数组没有这个元素，所以不会被遍历到，而<code>undefined</code>则表示数组有这个元素，值是<code>undefined</code>，所以遍历不会跳过。</p><h4 id="类似数组的对象"><a href="#类似数组的对象" class="headerlink" title="类似数组的对象"></a>类似数组的对象</h4><p>如果一个对象的所有键名都是正整数或零，并且有<code>length</code>属性，那么这个对象就很像数组，语法上称为“类似数组的对象”（array-like object）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  0: &#39;a&#39;,</span><br><span class="line">  1: &#39;b&#39;,</span><br><span class="line">  2: &#39;c&#39;,</span><br><span class="line">  length: 3</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj[0] &#x2F;&#x2F; &#39;a&#39;</span><br><span class="line">obj[1] &#x2F;&#x2F; &#39;b&#39;</span><br><span class="line">obj.length &#x2F;&#x2F; 3</span><br><span class="line">obj.push(&#39;d&#39;) &#x2F;&#x2F; TypeError: obj.push is not a function</span><br></pre></td></tr></table></figure><p>上面代码中，对象<code>obj</code>就是一个类似数组的对象。但是，“类似数组的对象”并不是数组，因为它们不具备数组特有的方法。对象<code>obj</code>没有数组的<code>push</code>方法，使用该方法就会报错。</p><p>“类似数组的对象”的根本特征，就是具有<code>length</code>属性。只要有<code>length</code>属性，就可以认为这个对象类似于数组。但是有一个问题，这种<code>length</code>属性不是动态值，不会随着成员的变化而变化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var obj &#x3D; &#123;</span><br><span class="line">  length: 0</span><br><span class="line">&#125;;</span><br><span class="line">obj[3] &#x3D; &#39;d&#39;;</span><br><span class="line">obj.length &#x2F;&#x2F; 0</span><br></pre></td></tr></table></figure><p>上面代码为对象<code>obj</code>添加了一个数字键，但是<code>length</code>属性没变。这就说明了<code>obj</code>不是数组。</p><p>典型的“类似数组的对象”是函数的<code>arguments</code>对象，以及大多数 DOM 元素集，还有字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; arguments对象</span><br><span class="line">function args() &#123; return arguments &#125;</span><br><span class="line">var arrayLike &#x3D; args(&#39;a&#39;, &#39;b&#39;);</span><br><span class="line"></span><br><span class="line">arrayLike[0] &#x2F;&#x2F; &#39;a&#39;</span><br><span class="line">arrayLike.length &#x2F;&#x2F; 2</span><br><span class="line">arrayLike instanceof Array &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; DOM元素集</span><br><span class="line">var elts &#x3D; document.getElementsByTagName(&#39;h3&#39;);</span><br><span class="line">elts.length &#x2F;&#x2F; 3</span><br><span class="line">elts instanceof Array &#x2F;&#x2F; false</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 字符串</span><br><span class="line">&#39;abc&#39;[1] &#x2F;&#x2F; &#39;b&#39;</span><br><span class="line">&#39;abc&#39;.length &#x2F;&#x2F; 3</span><br><span class="line">&#39;abc&#39; instanceof Array &#x2F;&#x2F; false</span><br></pre></td></tr></table></figure><p>上面代码包含三个例子，它们都不是数组（<code>instanceof</code>运算符返回<code>false</code>），但是看上去都非常像数组。</p><p>数组的<code>slice</code>方法可以将“类似数组的对象”变成真正的数组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; Array.prototype.slice.call(arrayLike);</span><br></pre></td></tr></table></figure><p>除了转为真正的数组，“类似数组的对象”还有一个办法可以使用数组的方法，就是通过<code>call()</code>把数组的方法放到对象上面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function print(value, index) &#123;</span><br><span class="line">  console.log(index + &#39; : &#39; + value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Array.prototype.forEach.call(arrayLike, print);</span><br></pre></td></tr></table></figure><p>上面代码中，<code>arrayLike</code>代表一个类似数组的对象，本来是不可以使用数组的<code>forEach()</code>方法的，但是通过<code>call()</code>，可以把<code>forEach()</code>嫁接到<code>arrayLike</code>上面调用。</p><p>下面的例子就是通过这种方法，在<code>arguments</code>对象上面调用<code>forEach</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; forEach 方法</span><br><span class="line">function logArgs() &#123;</span><br><span class="line">  Array.prototype.forEach.call(arguments, function (elem, i) &#123;</span><br><span class="line">    console.log(i + &#39;. &#39; + elem);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 等同于 for 循环</span><br><span class="line">function logArgs() &#123;</span><br><span class="line">  for (var i &#x3D; 0; i &lt; arguments.length; i++) &#123;</span><br><span class="line">    console.log(i + &#39;. &#39; + arguments[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字符串也是类似数组的对象，所以也可以用<code>Array.prototype.forEach.call</code>遍历。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Array.prototype.forEach.call(&#39;abc&#39;, function (chr) &#123;</span><br><span class="line">  console.log(chr);</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; a</span><br><span class="line">&#x2F;&#x2F; b</span><br><span class="line">&#x2F;&#x2F; c</span><br></pre></td></tr></table></figure><p>注意，这种方法比直接使用数组原生的<code>forEach</code>要慢，所以最好还是先将“类似数组的对象”转为真正的数组，然后再直接调用数组的<code>forEach</code>方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; Array.prototype.slice.call(&#39;abc&#39;);</span><br><span class="line">arr.forEach(function (chr) &#123;</span><br><span class="line">  console.log(chr);</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; a</span><br><span class="line">&#x2F;&#x2F; b</span><br><span class="line">&#x2F;&#x2F; c</span><br></pre></td></tr></table></figure><h3 id="什么是ES5"><a href="#什么是ES5" class="headerlink" title="什么是ES5"></a>什么是ES5</h3><p>作为ECMAScript第五个版本（第四版因为过于复杂废弃了，增加特性如下。</p><p><strong>1. strict模式</strong></p><p>严格模式，限制一些用法，’use strict’;</p><p><strong>2.Array增加方法</strong></p><p>增加了every、some 、forEach、filter 、indexOf、lastIndexOf、isArray、map、reduce、reduceRight方法 ，还有其他方法 Function.prototype.bind、String.prototype.trim、Date.now</p><p><strong>3. Object方法</strong></p><p>Object.getPrototypeOf</p><p>Object.create</p><p>Object.getOwnPropertyNames</p><p>Object.defineProperty</p><p>Object.getOwnPropertyDescriptor</p><p>Object.defineProperties</p><p>Object.keys</p><p>Object.preventExtensions / Object.isExtensible</p><p>Object.seal / Object.isSealed</p><p>Object.freeze / Object.isFrozen</p><p>PS:具体这些方法是什么，可自行深入了解。</p><h3 id="什么是ES6"><a href="#什么是ES6" class="headerlink" title="什么是ES6"></a>什么是ES6</h3><p><a href="http://www.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰</a>大佬通俗易懂ES6入门教程：<a href="https://es6.ruanyifeng.com/" target="_blank" rel="noopener">https://es6.ruanyifeng.com/</a></p><p><strong>ES6是什么</strong></p><p>ECMAScript 6.0（以下简称ES6）是JavaScript语言（现在是遵循ES5标准）的下一代标准，已经在2015年6月正式发布了。它的目标，是使得JavaScript语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p><p><strong>ES6的新特性</strong></p><ul><li>ES6中的let命令，声明变量，用法和var差不多，但是let是为JavaScript新增了块级作用域，ES5中是没有块级作用域的，并且var有变量提升的概念，但是在let中，使用的变量一定要进行声明。</li><li>ES6中变量的解构赋值，比如：var [a,b,c] = [0,1,2];</li><li>ES6中不再像ES5一样使用原型链实现继承，而是引入Class这个概念，听起来和Java中的面向对象编程的语法有些像，但是二者是不一样的。</li><li>ES6中的函数定义也不再使用关键字function，而是利用了=&gt;来进行定义；</li><li>ES6中可以设置默认函数参数，如function A（x,y=9）{};</li></ul><h3 id="Javascript、TypeScript和ES6的关系与区别"><a href="#Javascript、TypeScript和ES6的关系与区别" class="headerlink" title="Javascript、TypeScript和ES6的关系与区别"></a>Javascript、TypeScript和ES6的关系与区别</h3><p><strong>ECMAScript和JavaScript的关系</strong></p><p>由于JavaScript的创造者Netscae公司的版权问题，ECMAScript不能叫Javascript。总之，ECMAScript和JavaScript的关系是，前者是后者的规格（语言规范），后者是前者的一种实现。</p><p><strong>JavaScript 与 TypeScript 的关系</strong></p><p>TypeScript是Javascript的超集，实现以面向对象编程的方式使用Javascript。当然最后代码还是编译为Javascript。</p><p><strong>TypeScript 相比于JavaScript 的优势总结为以下几点:</strong></p><p>1.便于开发人员做注释。</p><p>2.能帮助开发人员检测出错误并修改。</p><p>3.TypeScript工具使重构更变的容易、快捷。</p><p>4.TypeScript 引入了 JavaScript 中没有的“类”概念。</p><p>5.TypeScript 中引入了模块的概念，可以把声明、数据、函数和类封装在模块中。</p><p>6.类型安全功能能在编码期间检测错误，这为开发人员创建了一个更高效的编码和调试过程</p><p><strong>TypeScript和ES6的关系</strong></p><p>typescript相对于ES6,TypeScript最大的改善是增加了类型系统。</p><p>附：typescript相对于ES5有五大改善：</p><ul><li>类型</li><li>类</li><li>注解</li><li>模块导入</li><li>语言工具包（比如，结构）</li></ul><p>TypeScript是ES6的超集。至于需不需要使用，在于你所需要的场景。比如在Angular2中，用TypeScript明显好于ES6。</p><p><strong>总结：</strong></p><p>ES6是Javascript语言的标准，typescript是ES6的超集。Angular2是基于typescript来开发的JS框架。</p>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端技术 </tag>
            
            <tag> 进阶之路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot入门</title>
      <link href="/2021/04/24/SpringBoot%E5%85%A5%E9%97%A8/"/>
      <url>/2021/04/24/SpringBoot%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="常用注解总结"><a href="#常用注解总结" class="headerlink" title="常用注解总结"></a>常用注解总结</h2><h3 id="启动注解-SpringBootApplication"><a href="#启动注解-SpringBootApplication" class="headerlink" title="启动注解@SpringBootApplication"></a>启动注解@SpringBootApplication</h3><p>@SpringBootApplication是一个复合注解，包含了@SpringBootConfiguration，@EnableAutoCofiguration,@ComponentScan这三个注解。</p><ol><li><p><strong>@SpringBootConfiguration</strong>继承自@Configuration,二者功能一致，标注当前类是配置类，并会将当前类内声明的一个或多个以@Bean注解标记的方法的实例纳入到spring容器中，并且实例名就是方法名。</p></li><li><p><strong>@EnableAutoConfiguration注解</strong>，开启自动配置功能</p><p>@EnableAutoConfiguration可以帮助SpringBoot应用将所有符合条件的@Configuration配置都加载到当前SpringBoot创建并使用的IOC容器。借助于Spring框架原有的一个工具类：SpringFactoriesLoader的支持，@EnableAutoConfiguration可以智能的自动配置功效才得以大功告成</p></li><li><p><strong>@ComponentScan：</strong> 主要用于组件扫描和自动装配。个人理解相当于&lt; context:component-scan&gt;，如果扫描到有@Component @Controller @Service等这些注解的类，则把这些类注册为bean。 </p></li></ol><h2 id="Controller-相关注解"><a href="#Controller-相关注解" class="headerlink" title="Controller 相关注解"></a>Controller 相关注解</h2><ol><li><p>@Controller：标注控制器类，处理http请求；控制器中的方法可以返回一个视图，在Web开发中一般使用的少（主要是用@RestController）。</p></li><li><p>@RestController:复合注解，相当于@ResponseBody ＋ @Controller合在一起的作用。使用的效果是将方法返回的对象直接在浏览器上展示成json格式.</p></li><li><p>@RequestBody:通过HttpMessageConverter读取Request Body并反序列化为Object（泛指）对象；将json解析为java对象。</p><p>使用场景：json传参</p></li><li><p>@RequestMapping:最常用的注解之一，这个注解会将 HTTP 请求的URL映射到处理方法上；在实际开发中，在具体的控制器类之前添加该注解即可。</p><p><strong>详细描述</strong></p><p><strong>@RequestMapping</strong> 该注解可以加在方法上，也可以加在类上；如下面例子，加在类上，表示该类所有的方法都加前缀 /user 下面两种方法都是映射到 /user/list </p><p>方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class UserController &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line">    @RequestMapping(value &#x3D; &quot;&#x2F;user&#x2F;list&quot;,method &#x3D; RequestMethod.GET)</span><br><span class="line">    &#x2F;&#x2F;相当于 @GetMapping(&quot;&#x2F;user&#x2F;list&quot;)</span><br><span class="line">    public List&lt;User&gt; userList() &#123;</span><br><span class="line">        return userService.listUsers();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;&#x2F;user&quot;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line">    @RequestMapping(value &#x3D; &quot;&#x2F;list&quot;,method &#x3D; RequestMethod.GET)</span><br><span class="line">    &#x2F;&#x2F;相当于 @GetMapping(&quot;&#x2F;list&quot;)</span><br><span class="line">    public List&lt;User&gt; userList() &#123;</span><br><span class="line">        return userService.listUsers();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>@GetMapping：响应GET请求。用于将HTTP get请求映射到特定处理程序的方法注解</p></li><li><p>@PostMapping：响应POST请求。用于将HTTP post请求映射到特定处理程序的方法注解</p><p>一般来说，POST方法的传参不受限制，可以使用URL传参，也可以使用@RequestBody获取请求体中的json，并解析为响应的java对象。</p><p>POST方法和GET方法可以共用一个URL，不用担心起冲突。@PutMapping、@DeleteMapping使用方式大同小异，其实从功能上来说，<strong>@PostMapping能替代所有的请求</strong>，但是这么使用会导致代码<strong>语义混乱</strong>。</p></li></ol><p><strong>简单说明一下各种请求方法的使用场景：</strong></p><table><thead><tr><th align="left">方法</th><th align="left">场景</th></tr></thead><tbody><tr><td align="left">GET</td><td align="left">获取资源</td></tr><tr><td align="left">POST</td><td align="left">新增资源</td></tr><tr><td align="left">PUT</td><td align="left">更新资源</td></tr><tr><td align="left">DELETE</td><td align="left">删除资源</td></tr></tbody></table><h3 id="Controller和-RestController的区别"><a href="#Controller和-RestController的区别" class="headerlink" title="@Controller和@RestController的区别"></a>@Controller和@RestController的区别</h3><p>知识点：@RestController注解相当于@ResponseBody ＋ @Controller合在一起的作用。</p><p>1) 如果只是使用@RestController注解Controller，则Controller中的方法无法返回jsp页面，或者html，配置的视图解析器 InternalResourceViewResolver不起作用，返回的内容就是Return 里的内容。</p><p>2) 如果需要返回到指定页面，则需要用 @Controller配合视图解析器InternalResourceViewResolver才行。如果需要返回JSON，XML或自定义mediaType内容到页面，则需要在对应的方法上加上@ResponseBody注解。</p><p>例如：</p><ol><li>使用@Controller 注解，在对应的方法上，视图解析器可以解析return 的jsp,html页面，并且跳转到相应页面</li></ol><p>若返回json等内容到页面，则需要加@ResponseBody注解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@CrossOrigin</span><br><span class="line">@Controller</span><br><span class="line">public class FileUploadController &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;跳转到上传文件的页面</span><br><span class="line">@RequestMapping(value&#x3D;&quot;&#x2F;gouploadimg&quot;, method &#x3D; RequestMethod.GET)</span><br><span class="line">public String goUploadImg() &#123;</span><br><span class="line">&#x2F;&#x2F;跳转到 templates 目录下的 uploadimg.html</span><br><span class="line">return &quot;uploadimg&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;处理文件上传</span><br><span class="line">@RequestMapping(value&#x3D;&quot;&#x2F;testuploadimg&quot;, method &#x3D; RequestMethod.POST)</span><br><span class="line">public @ResponseBody String uploadImg(@RequestParam(&quot;file&quot;) MultipartFile file,</span><br><span class="line">HttpServletRequest request) &#123;</span><br><span class="line">System.out.println(&quot;调用文件上传方法&quot;);</span><br><span class="line">String contentType &#x3D; file.getContentType();</span><br><span class="line">String fileName &#x3D; file.getOriginalFilename();</span><br></pre></td></tr></table></figure><ol><li>@RestController注解，Spring 4.0引入了<code>@RestController</code>，相当于@Controller+@ResponseBody两个注解的结合，它会告诉Spring 将返回类型序列化为合适的格式，默认情况下为JSON 格式。返回json数据不需要在方法前面加@ResponseBody注解了，但使用@RestController这个注解，就不能返回jsp,html页面，视图解析器无法解析jsp,html页面</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@CrossOrigin</span><br><span class="line">@RestController &#x2F;* @Controller + @ResponseBody*&#x2F;</span><br><span class="line">public class HospitalController &#123;</span><br><span class="line">&#x2F;&#x2F;注入Service服务对象</span><br><span class="line">@Autowired</span><br><span class="line">private HospitalService hospitalService;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询所有医院信息（未分页）</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">@RequestMapping(value &#x3D; &quot;findAllHospital&quot;,method &#x3D; RequestMethod.GET)</span><br><span class="line">public  List&lt;Hospital&gt; findAllHospital()&#123;</span><br><span class="line">    List&lt;Hospital&gt; hospitalList&#x3D; hospitalService.findAllHospital();</span><br><span class="line">    return hospitalList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><p>共同点：都用来表示Spring某个类是否可以接收HTTP请求</p><p>异同点：<strong>@RestController无法返回指定页面（jsp或html），而@Controller可以</strong>；前者可以直接返回json数据，后者需要@ResponseBody辅助。</p><p><strong>① 是否可以返回页面</strong></p><p>　　答：@RestController无法返回指定页面，而@Controller可以。<br>　　解析：对于Controller， 如果只是使用@RestController注解，则其方法无法返回指定页面，此时配置的视图解析器 InternalResourceViewResolver不起作用，返回的内容就是 return 里的内容。 如果需要返回到指定页面，则需要用 @Controller配合视图解析器InternalResourceViewResolver才行。<br><strong>② 返回内容</strong><br>　　如果需要返回<strong>JSON，XML或自定义mediaType内容</strong>到页面，@RestController自己就可以搞定,这个注解对于返回数据比较方便，因为它会自动将对象实体转换为JSON格式。而@Controller需要在对应的方法加上@ResponseBody注解。</p><p><strong>@ResponseBody和@RequestBody区别</strong></p><ol><li><p>@RequestBody是将Json格式的数据转换成Java对象</p></li><li><p>@ResponseBody：将Java对象转成json格式的数据</p></li></ol><h2 id="取请求参数值"><a href="#取请求参数值" class="headerlink" title="取请求参数值"></a>取请求参数值</h2><ol><li>@PathVariable:获取url中的变量值的（注意是URL上的，不是参数）</li></ol><p>请求示例：<a href="http://localhost:8080/User/getUser/123" target="_blank" rel="noopener">http://localhost:8080/User/getUser/123</a></p><p>应用场景：分页查询时获取url路径的页码</p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/User"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/getUser/&#123;uid&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(@PathVariable(<span class="string">"uid"</span>)</span>Integer id, Model model) </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"id:"</span>+id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"user"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>@RequestParam:获取请求参数的值，默认是必须传参，也可设置为非必要：required=false;未传参的默认值：defaultValue = “ “</li></ol><p>请求示例：<a href="http://localhost:8080/User/getUser?uid=123" target="_blank" rel="noopener">http://localhost:8080/User/getUser?uid=123</a></p><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/User"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/getUser"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(@RequestParam(<span class="string">"uid"</span>)</span>Integer id, Model model) </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"id:"</span>+id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"user"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>@RequestHeader：把Request请求header部分的值绑定到方法的参数上</li><li>@CookieValue：把Request header中关于cookie的值绑定到方法的参数上</li></ol><h2 id="注入bean相关"><a href="#注入bean相关" class="headerlink" title="注入bean相关"></a>注入bean相关</h2><ol><li><p>@Repository</p><p>DAO层注解，DAO层中接口继承JpaRepository,需要在build.gradle中引入相关jpa的一个jar自动加载。</p></li><li><p>@Service：用于标注业务层组件。  </p><ul><li>@Service是@Component注解的一个特例，作用在类上</li><li>@Service注解作用域默认为单例</li><li>使用注解配置和类路径扫描时，被@Service注解标注的类会被Spring扫描并注册为Bean</li><li>@Service用于标注服务层组件,表示定义一个bean</li></ul><ul><li>@Service使用时没有传参数，Bean名称默认为当前类的类名，首字母小写</li><li>@Service](“serviceBeanId”)或@Service(value=”serviceBeanId”)使用时传参数，使用value作为Bean名字</li></ul></li><li><p>@Scope作用域注解</p><p>@Scope作用在类上和方法上，用来配置 spring bean 的作用域，它标识 bean 的作用域</p></li><li><p>@Entity实体类注解</p><ul><li>@Table(name =”数据库表名”)，这个注解也注释在实体类上，对应数据库中相应的</li><li>@Id、@Column注解用于标注实体类中的字段，pk字段标注为@Id，其余@Column。</li></ul></li><li><p>@Bean：相当于XML中的&lt; bean&gt;&lt; /bean&gt;</p><p>@Bean明确地指示了一种方法，放在方法的上面，而不是类，产生一个bean的方法，并且交给Spring容器管理。支持别名@Bean(“xx-name”)</p></li><li><p><strong>@AutoWired:</strong> byType方式。可以实现Bean的自动注入，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。 当加上（required=false）时，就算找不到bean也不报错。</p></li><li><p><strong>@Qualifier：</strong> 当有多个同一类型的Bean时，可以用@Qualifier(“name”)来指定。与@Autowired配合使用  </p></li><li><p><strong>@Resource(name=”name”,type=”type”)：</strong> 没有括号内内容的话，默认byName。与@Autowired干类似的事。 </p></li><li><p><strong>@Component：</strong> 泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。</p><ul><li>把普通pojo实例化到spring容器中，虽然有了@Autowired,但是我们还是要写一堆bean的配置文件,相当麻烦,而@Component就是告诉spring,我是pojo类,把我注册到容器中吧,spring会自动提取相关信息。那么我们就不用写麻烦的xml配置文件了.</li></ul><p><strong>例如：</strong></p><p>@Component用于注解通用性强的工具类（会被多方调用）。</p><ol><li>既被控制器调用，又被服务实现类调用的类</li><li>被多个控制器/服务实现类调用的类</li></ol></li><li><p><strong>@ComponentScan：</strong> 组件扫描。个人理解相当于&lt; context:component-scan&gt;，如果扫描到有@Component @Controller @Service等这些注解的类，则把这些类注册为bean。</p></li><li><p><strong>@Value</strong></p><p>@Value用来从配置文件(.properties/.yaml/.yml)中取参数。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># application.properties</span><br><span class="line">local.name &#x3D; crx</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Value(&quot;$&#123;local.name&#125;&quot;)</span><br><span class="line">private String author;</span><br></pre></td></tr></table></figure><p>一般只有一些账户密码数据需要使用该功能。</p></li></ol><h3 id="Autowired和-Resources注解区别"><a href="#Autowired和-Resources注解区别" class="headerlink" title="@Autowired和@Resources注解区别"></a>@Autowired和@Resources注解区别</h3><p>一、@Autowired和@Resource都可以用来装配bean，都可以写在字段上，或者方法上。</p><p>二、@Autowired属于Spring的；@Resource属于J2EE的。</p><p>三、@Autowired默认按类型装配，默认情况下要求依赖对象必须存在，如果要允许null值，可以设置它的required属性为false。 </p><p><strong>总结：</strong></p><p>当一个接口只有一个实现类，推荐使用@Autowired，默认byType注入，不一定 真的byType，可以修改为byName，@Resource同理；</p><p>当一个接口有多个实现类，推荐使用@Resource，默认byName注入；</p><p><strong>byName和byType有什么区别</strong></p><ol><li><p>byName 通过<strong>参数名</strong>自动装配,如果一个bean的name 和另外一个bean的 property 相同,就自动装配.</p></li><li><p>byType 通过<strong>参数的数据类型</strong>自动自动装配,如果一个bean的数据类型和另外一个bean的property属性的数据类型兼容,就自动装配</p></li></ol><h2 id="详细描述"><a href="#详细描述" class="headerlink" title="详细描述"></a>详细描述</h2><p> <strong>@AutoWired 和 @Resource</strong> 这两个注解都是注入依赖的作用 比如在 UserController 里注入 UserService，在 UserService 注入 UserDao 通常用法如下 UserServiceImpl 类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Service</span><br><span class="line">&#x2F;&#x2F;相当于 @Service(value &#x3D; &quot;userServiceImpl&quot;)</span><br><span class="line">public class UserServiceImpl implements UserService&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public String sayHi() &#123;</span><br><span class="line">        return &quot;Hi!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用@Service注解自动将类 UserServiceImpl 注解为bean，id为 userServiceImpl，即类 UserServiceImpl 第一个字母小写的id。  @Authwired 使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;方法一、寻找可以扫描到的实现了 UserService 接口的类</span><br><span class="line">@Autowired</span><br><span class="line">private UserService userService;</span><br><span class="line">&#x2F;&#x2F;方法二、如果有多个类实现了 UserService，需要指定时哪个实现类</span><br><span class="line">@Autowired</span><br><span class="line">@Qualifier(&quot;userServiceImpl&quot;)</span><br><span class="line">private UserService userService;</span><br></pre></td></tr></table></figure><p> @Resource 使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;方法三、寻找可以扫描到的实现了 UserService 接口的类</span><br><span class="line">@Resource</span><br><span class="line">private UserService userService;</span><br><span class="line">&#x2F;&#x2F;方法四、如果有多个类实现了 UserService，需要指定时哪个实现类</span><br><span class="line">@Resource(name &#x3D; &quot;userServiceImpl&quot;)</span><br><span class="line">private UserService userService;</span><br></pre></td></tr></table></figure><p><strong>@Component、@Repository、@Service、@Controller</strong> 为了控制反转（将创建对象的控制权交给Spring容器），而不需要去 new，而且创建的对象还是单例的，一举多得。 这几个注解作用是通用的，几乎一样，通常我们根据它的含义来写</p><table><thead><tr><th align="left">注解</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">@Component</td><td align="left">泛指组件，当组件不属于以下三层的，或不好归类的时候，我们可以使用这个注解进行标注</td></tr><tr><td align="left">@Repository</td><td align="left">作用于持久层</td></tr><tr><td align="left">@Service</td><td align="left">作用于业务逻辑层</td></tr><tr><td align="left">@Controller</td><td align="left">作用于控制层（spring-mvc的注解）</td></tr></tbody></table><p>注意：这些注解都是写在类上面的，不可以写在接口上，默认是创建类名首字母小写的 Bean</p><h2 id="功能注解"><a href="#功能注解" class="headerlink" title="功能注解"></a>功能注解</h2><ol><li><p>@Async与@EnableAsync</p><p>其中@Async表示这个方法为异步方法；@EnableAsync这个注解需要加在启动类上，表示支持异步操作；如果不加，则@Async将不起作用。</p></li><li><p>@Scheduled与@EnableScheduling</p><p>定时任务。@EnableScheduling这个注解需要加在启动类上，表示支持定时任务</p></li><li><p><strong>@CrossOrigin</strong></p><p>跨域注解，从后端解决跨域问题。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 主要解决跨域问题，用的时候复制粘贴即可，不用记</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Configuration</span><br><span class="line">public class CrosConfig implements WebMvcConfigurer &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addCorsMappings(CorsRegistry registry) &#123;</span><br><span class="line">        registry.addMapping(&quot;&#x2F;**&quot;)</span><br><span class="line">                .allowedOrigins(&quot;*&quot;)</span><br><span class="line">                .allowedMethods(&quot;GET&quot;, &quot;HEAD&quot;, &quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;, &quot;OPTIONS&quot;)</span><br><span class="line">                .allowCredentials(true)</span><br><span class="line">                .maxAge(3600)</span><br><span class="line">                .allowedHeaders(&quot;*&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>跨域的详细例子：</strong></p><table><thead><tr><th align="left">当前页面url</th><th align="left">被请求页面url</th><th align="left">是否跨域</th><th align="left">原因</th></tr></thead><tbody><tr><td align="left"><a href="http://www.test.com/" target="_blank" rel="noopener">http://www.test.com/</a></td><td align="left"><a href="http://www.test.com/index.html" target="_blank" rel="noopener">http://www.test.com/index.html</a></td><td align="left">否</td><td align="left">同源（协议、域名、端口号相同）</td></tr><tr><td align="left"><a href="http://www.test.com/" target="_blank" rel="noopener">http://www.test.com/</a></td><td align="left"><a href="https://www.test.com/index.html" target="_blank" rel="noopener">https://www.test.com/index.html</a></td><td align="left">跨域</td><td align="left">协议不同（http/https）</td></tr><tr><td align="left"><a href="http://www.test.com/" target="_blank" rel="noopener">http://www.test.com/</a></td><td align="left"><a href="http://www.baidu.com/" target="_blank" rel="noopener">http://www.baidu.com/</a></td><td align="left">跨域</td><td align="left">主域名不同（test/baidu）</td></tr><tr><td align="left"><a href="http://www.test.com/" target="_blank" rel="noopener">http://www.test.com/</a></td><td align="left"><a href="http://blog.test.com/" target="_blank" rel="noopener">http://blog.test.com/</a></td><td align="left">跨域</td><td align="left">子域名不同（www/blog）</td></tr><tr><td align="left"><a href="http://www.test.com:8080/" target="_blank" rel="noopener">http://www.test.com:8080/</a></td><td align="left"><a href="http://www.test.com:7001/" target="_blank" rel="noopener">http://www.test.com:7001/</a></td><td align="left">跨域</td><td align="left">端口号不同（8080/7001）</td></tr></tbody></table><h2 id="entity层"><a href="#entity层" class="headerlink" title="entity层"></a>entity层</h2><ol><li><p>通过@Entity将实体类和数据库的表book进行映射绑定;</p></li><li><p>通过@Data是lombok的注解，自动生成各种各样的get方法;</p></li><li><p>通过@Id是给属性加主键绑定;</p></li><li><p>通过 @GeneratedValue给数据库自增的id属性进行映射，否则报错</p><p> @GeneratedValue指定主键的生成策略。有如下四个值</p></li></ol><p>​        TABLE：使用表保存id值</p><p>​        IDENTITY：identitycolumn</p><p>​        SEQUENCR ：sequence</p><p>​        AUTO：根据数据库的不同使用上面三个</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务框架 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPN使用方法</title>
      <link href="/2021/03/04/VPN%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2021/03/04/VPN%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">您好，本篇文章需密码访问，请谅解！</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
      
      <categories>
          
          <category> 黑技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPN </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作动态简历和电子名片记录</title>
      <link href="/2021/02/24/%E5%88%B6%E4%BD%9C%E5%8A%A8%E6%80%81%E7%AE%80%E5%8E%86%E5%92%8C%E7%94%B5%E5%AD%90%E5%90%8D%E7%89%87%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/02/24/%E5%88%B6%E4%BD%9C%E5%8A%A8%E6%80%81%E7%AE%80%E5%8E%86%E5%92%8C%E7%94%B5%E5%AD%90%E5%90%8D%E7%89%87%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="动态简历模板"><a href="#动态简历模板" class="headerlink" title="动态简历模板"></a>动态简历模板</h2><p><strong>本项目源于：<a href="https://github.com/jirengu-inc/animating-resume" target="_blank" rel="noopener">https://github.com/jirengu-inc/animating-resume</a> 。向作者表达深深的敬意。</strong></p><p><strong>本项目借鉴于：<a href="https://zhousiwei.gitee.io/ibooks/opensource/anires.html" target="_blank" rel="noopener">https://zhousiwei.gitee.io/ibooks/opensource/anires.html</a> 。向作者表示非常感谢。</strong></p><p><strong>本项目美化后地址：<a href="https://github.com/panyongkang/anires" target="_blank" rel="noopener">https://github.com/panyongkang/anires</a> 。向读者表示抱歉，个人审美水平有限，欢迎提出改进和美化建议！</strong></p><h3 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h3><p><a href="https://imgtu.com/i/yOLJpR" target="_blank" rel="noopener"><img src="/img/loading.gif" class="lazyload" data-src="https://s3.ax1x.com/2021/02/24/yOLJpR.png"  alt="yOLJpR.png"></a></p><h3 id="简历预览"><a href="#简历预览" class="headerlink" title="简历预览"></a><a href="https://www.xyym.cf/anires/" target="_blank" rel="noopener">简历预览</a></h3><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/panyongkang/anires.git //克隆项目到本地</span><br><span class="line"><span class="built_in">cd</span> anires  //打开anires项目</span><br><span class="line">npm install  //安装npm依赖包</span><br><span class="line">npm run dev  //运行项目</span><br></pre></td></tr></table></figure><h3 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h3><ol><li>编辑 <strong>config/index.js</strong>，修改第 10 行的 <code>assetsPublicPath</code>，值为 <code>项目名/public</code>。如果你没有修改项目名 <code>anires</code>，则可跳过此步骤。</li><li>编译、上传</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm run build  //构建项目，运行修改完项目，需要重新构建生成public文件</span><br><span class="line">git init//初始化本地版本库,生成<span class="string">'.git'</span>文件</span><br><span class="line">git remote -v    //查看远程版本库信息（此时没有关联，需添加）</span><br><span class="line">git remote add origin url    //添加关联远程版本库，在github上面先创建anires仓库，然后复制<span class="string">'url'</span>路径</span><br><span class="line">git add .  //跟踪所有改动过的内容,提交到缓存区</span><br><span class="line">git commit -m <span class="string">"update"</span> //提交所有更新过的文件</span><br><span class="line">git push  //上传代码到远程仓库，第一次上传需要<span class="string">'git push origin master'</span>，以后直接 git push即可</span><br></pre></td></tr></table></figure><ol><li><p>开启 <strong>GitHub Pages</strong> 功能，把本地构建生成的目标文件<code>public</code>放在你的web服务器上。</p></li><li><p>因为Github只允许创建一个<code>your-github-username.github.io</code>仓库，用于实现网页访问。之前已经用于建设博客了，因此需要将生成的<code>public</code>文件复制到本地Hexo博客的<code>source</code>目录下。</p></li><li><p>修改<code>public</code>文件名为<code>anires</code>,因为hexo博客<code>hexo g</code>也会生成一个<code>public</code>文件，便于识别。</p></li><li><p>修改主题<code>_config.yml</code>文件的导航菜单:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">关于我||fa fa-user-circle-o:</span><br><span class="line">  - 母校 || http:&#x2F;&#x2F;www.xbmu.edu.cn&#x2F; || fa fa-graduation-cap</span><br><span class="line">  - 简历 || &#x2F;anires&#x2F; || fa fa-list-alt</span><br><span class="line">  - 名片 || &#x2F;vcard&#x2F; || fa fa-vcard-o</span><br></pre></td></tr></table></figure><ol><li>在 <code>anires</code>目录中新建一个<code>index.md</code>文件，建立<code>type: anires</code>是为了与导航菜单的<code>/anires/</code>进行关联，内容如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: 动态简历</span><br><span class="line">type: anires</span><br><span class="line">date: 2021-02-24 12:31:30</span><br></pre></td></tr></table></figure></li><li><p>跳过渲染：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#跳过渲染</span><br><span class="line">skip_render: </span><br><span class="line">  - &quot;vcard&#x2F;**&quot;</span><br><span class="line">  - &quot;anires&#x2F;**&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="动态电子名片模板"><a href="#动态电子名片模板" class="headerlink" title="动态电子名片模板"></a>动态电子名片模板</h2><h3 id="项目截图-1"><a href="#项目截图-1" class="headerlink" title="项目截图"></a>项目截图</h3><p><a href="https://imgtu.com/i/yOLxN4" target="_blank" rel="noopener"><img src="/img/loading.gif" class="lazyload" data-src="https://s3.ax1x.com/2021/02/24/yOLxN4.png"  alt="yOLxN4.png"></a></p><h3 id="名片预览"><a href="#名片预览" class="headerlink" title="名片预览"></a><a href="https://www.xyym.cf/vcard/" target="_blank" rel="noopener">名片预览</a></h3><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>直接下载<code>vcard</code>代码复制到<code>source</code>目录下面，操作方法与上述动态简历步骤基本相似，不做过多解释。</p><h3 id="下载位置"><a href="#下载位置" class="headerlink" title="下载位置"></a>下载位置</h3><ol><li><p><a href="https://wws.lanzous.com/iBh2Jm3p01g" target="_blank" rel="noopener">蓝奏云下载</a></p></li><li><p>Github单文件下载：</p><p>将<code>https://github.com/panyongkang/panyongkang.github.io/tree/master/vcard</code>路径复制到<a href="https://zhoudaxiaa.gitee.io/downgit/" target="_blank" rel="noopener">DownGit</a>下载即可，下载速度更快。</p></li></ol><h2 id="踩坑注意事项"><a href="#踩坑注意事项" class="headerlink" title="踩坑注意事项"></a>踩坑注意事项</h2><p>执行hexo s 过程中如果出现连接404，很可能是没有添加<code>index.md</code>文件并写入<code>type: vcard</code> 。添加了渲染不了，很可能是<code>index.html</code>修改成了<code>vcard.html</code>，因为先前已经设置跳过渲染，但任然无法连接和渲染，貌似只能用<code>index.html</code>,不能进行自定义修改。最后重新执行命令<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> ,如果本地运行没有问题，就可以执行 <code>hexo deploy</code>部署上传了。</p>]]></content>
      
      
      <categories>
          
          <category> 工具插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态简历 </tag>
            
            <tag> 电子名片 </tag>
            
            <tag> resume </tag>
            
            <tag> vcard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章导航关系网</title>
      <link href="/2021/02/07/%E6%96%87%E7%AB%A0%E5%AF%BC%E8%88%AA%E5%85%B3%E7%B3%BB%E7%BD%91/"/>
      <url>/2021/02/07/%E6%96%87%E7%AB%A0%E5%AF%BC%E8%88%AA%E5%85%B3%E7%B3%BB%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="关于关系网简介"><a href="#关于关系网简介" class="headerlink" title="关于关系网简介"></a>关于关系网简介</h2><p>虽然Butterfly主题的博客自带标签导航模块，但不是很有性格。闲来无聊逛逛博客，无意间发现了一款标签导航插件，正是我想象中需要的效果，首先感谢大佬<a href="https://www.cz5h.com/tagsnet/" target="_blank" rel="noopener">长征部落格</a>提供的插件和帮助，但由于大佬使用的是Volantis主题，本博客使用的是Butterfly主题，与插件不太兼容，在经过和大佬的交流指导和自己修改了部分样式后，在电脑上看起来顺眼多了，但手机显示还是不理想，由于技术有限，期待大佬后续的更新和完善，顺便记录一下修改的地方，分享给有需要的小伙伴！</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-tagsnet --save</span><br></pre></td></tr></table></figure><h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-tagsnet --update --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在Hexo根目录 <code>config.yml</code>追加以下内容，svg参数默认即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 标签关系网插件 注意是放到根目录配置文件下</span><br><span class="line">tagsnet:</span><br><span class="line">  builtin: false #默认即可</span><br><span class="line">  title: 文章导航关系网</span><br><span class="line">  quote:  由标签及分类构建关联。本页使用&lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;https:&#x2F;&#x2F;www.npmjs.com&#x2F;package&#x2F;hexo-generator-tagsnet&quot;&gt;hexo-generator-tagsnet&lt;&#x2F;a&gt;插件构建。&lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;https:&#x2F;&#x2F;www.xyym.cf&#x2F;tagsnet&#x2F;&quot;&gt;[关系网]&lt;&#x2F;a&gt;</span><br><span class="line">  svg:</span><br><span class="line">    svg_big_color: &quot;#ff4081&quot;</span><br><span class="line">    svg_small_color: &quot;#3f51b5&quot;</span><br><span class="line">    svg_line_color: &quot;#b1b1b1&quot;</span><br><span class="line">    svg_line_weight: &quot;0.5&quot;</span><br><span class="line">    svg_text_weight: &quot;12px&quot;</span><br><span class="line">    svg_width: &quot;100%&quot;</span><br><span class="line">    svg_exheight: 20</span><br><span class="line">    svg_bgcolor: &quot;#faf9f900&quot; &#x2F;&#x2F;透明背景</span><br><span class="line">    svg_force: &quot;-20&quot; &#x2F;&#x2F;为了紧凑butterfly主题，可自行调整</span><br><span class="line">  valine: #渲染页面内valine加载不出来时使用</span><br><span class="line">    app_id: z2GwNsG7RRpWpx5rt7psedl5-MdYXbMMI</span><br><span class="line">    app_key: gI6Yhfwz4JiUIv9546gepko8</span><br></pre></td></tr></table></figure><h2 id="美化样式"><a href="#美化样式" class="headerlink" title="美化样式"></a>美化样式</h2><p>修改样式的位置：..\node_modules\hexo-generator-tagsnet\lib\templates\tagsnet.ejs</p><p>打开<code>tagsnet.ejs</code>文件,可根据自己喜好修改文字段落的样式效果，例如修改代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;dbox&quot;&gt;&lt;p class&#x3D;&quot;datacont&quot;&gt;&lt;%- quote; %&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.dbox &#123;</span><br><span class="line">    background: #090c6e;</span><br><span class="line">    border-radius: 15px;</span><br><span class="line">    padding: 8px 8px;</span><br><span class="line">    margin-top: 12px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.dbox .datacont &#123;</span><br><span class="line">    font-size: 1rem;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">    color: #c01f96db;</span><br><span class="line">    width: 100%;</span><br><span class="line">    line-height: 1.38;</span><br><span class="line">padding-top: 16px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> 标签导航 </tag>
            
            <tag> 关系网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客中加入视频播放器</title>
      <link href="/2021/02/05/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8/"/>
      <url>/2021/02/05/%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="引用视频播放器简介"><a href="#引用视频播放器简介" class="headerlink" title="引用视频播放器简介"></a>引用视频播放器简介</h2><p>由于之前添加了一些视频播放器的外链和修改的一些代码，但技术有限，总是不太理想，今日有空网上找到了更好的在博客中插入视频播放器的方法，顺便记录一下笔记，分享给需要的小伙伴。</p><h2 id="关于视频播放器的选择"><a href="#关于视频播放器的选择" class="headerlink" title="关于视频播放器的选择"></a>关于视频播放器的选择</h2><h3 id="样式1"><a href="#样式1" class="headerlink" title="样式1"></a>样式1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;54216146&amp;bvid&#x3D;BV1j4411p7UJ&amp;cid&#x3D;96484563&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; width&#x3D;&quot;100%&quot; height&#x3D;&quot;300px&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot; style&#x3D;&quot;border:3px solid #009ad6;border-radius:45px&quot;&gt; &lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p>说明：该代码的使用适合于从头到尾无快进、无全屏显示，只针对于强迫症快进又想好好看视频的小伙伴使用。</p><p>效果如下：</p><iframe src="//player.bilibili.com/player.html?aid=54216146&bvid=BV1j4411p7UJ&cid=96484563&page=1" scrolling="no" border="0" width="100%" height="300px" frameborder="no" framespacing="0" allowfullscreen="true" style="border:3px solid #009ad6;border-radius:45px"> </iframe><h3 id="样式2"><a href="#样式2" class="headerlink" title="样式2"></a>样式2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.iframe-body-sty&#123;position: relative;overflow: hidden;height:600px;width: 100%;background-color: #145b7d;border-radius:25px;&#125;</span><br><span class="line">.iframe-body-sty&gt;#iframe-shrink&#123;position: absolute;transform:scale(0.55);left: -300px;top: -190px;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;iframe-body-sty&quot; &gt;</span><br><span class="line">&lt;iframe id&#x3D;&quot;iframe-shrink&quot; src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;85793766&amp;bvid&#x3D;BV137411B7vB&amp;cid&#x3D;146678826&amp;page&#x3D;1&quot; width&#x3D;&quot;1400px&quot; height&#x3D;&quot;980px&quot; style&#x3D;&quot;border-radius:10px&quot; &gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>说明：该代码的使用适合可对视频进行快进的小伙伴，但无法全屏观看，仅限于博客文章内容使用，可自由修改CSS样式。</p><p>效果如下：</p><!DOCTYPE HTML><html lang="zh-CN"><body><style>    .iframe-body-sty{position: relative;overflow: hidden;height:600px;width: 100%;background-color: #145b7d;border-radius:25px;}    .iframe-body-sty>#iframe-shrink{position: absolute;transform:scale(0.55);left: -300px;top: -190px;}</style><div class="iframe-body-sty">    <iframe id="iframe-shrink" src="//player.bilibili.com/player.html?aid=85793766&bvid=BV137411B7vB&cid=146678826&page=1" width="1400px" height="980px" style="border-radius:10px"></iframe></div><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"debug":false,"model":{"jsonPath":"/live2dw/assets/platelet.model.json"},"display":{"position":"right","width":200,"height":500},"mobile":{"show":true},"log":false});</script></body></html><h3 id="样式3"><a href="#样式3" class="headerlink" title="样式3"></a>样式3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;div style&#x3D;&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt;&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;23836532&amp;bvid&#x3D;BV11p411o73u&amp;cid&#x3D;39858896&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot; style&#x3D;&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>说明：该代码对原生的播放器标签样式进行美化，具有视频快进和全屏播放功能，可自由修改美化样式，博主强烈推荐该方法。</p><p>效果如下：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=23836532&bvid=BV11p411o73u&cid=39858896&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p>好了，本篇博文到此结束，小伙伴可根据自己想法选择添加~ 最后祝大家 新年快乐！恭喜发财！</p>]]></content>
      
      
      <categories>
          
          <category> 工具插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
            <tag> 播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客增加B站追番页面</title>
      <link href="/2021/02/05/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0B%E7%AB%99%E8%BF%BD%E7%95%AA%E9%A1%B5%E9%9D%A2/"/>
      <url>/2021/02/05/%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0B%E7%AB%99%E8%BF%BD%E7%95%AA%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="哔哩哔哩番剧页面插件"><a href="#哔哩哔哩番剧页面插件" class="headerlink" title="哔哩哔哩番剧页面插件"></a>哔哩哔哩番剧页面插件</h2><p>博客使用了<a href="https://github.com/HCLonely/hexo-bilibili-bangumi" target="_blank" rel="noopener">hexo-bilibili-bangumi</a>，提供哔哩哔哩的个人番剧页的展示。</p><h2 id="安装方式"><a href="#安装方式" class="headerlink" title="安装方式"></a>安装方式</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --update --sav</span><br></pre></td></tr></table></figure><h2 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h2><h3 id="站点配置文件修改"><a href="#站点配置文件修改" class="headerlink" title="站点配置文件修改"></a>站点配置文件修改</h3><p>将下面的配置写入站点的配置文件 <code>_config.yml</code> 里(不是主题的配置文件).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># B站番剧页面插件</span><br><span class="line">bangumi:</span><br><span class="line">  enable: true</span><br><span class="line">  path: bilibili&#x2F;index.html</span><br><span class="line">  vmid: 520059030</span><br><span class="line">  title: &#39;追番列表&#39;</span><br><span class="line">  quote: &#39;生命不息，追番不止！&#39;</span><br><span class="line">  show: 1</span><br><span class="line">  loading:</span><br><span class="line">  metaColor:</span><br><span class="line">  color:</span><br><span class="line">  webp:</span><br><span class="line">  progress:</span><br></pre></td></tr></table></figure><h3 id="标签参数"><a href="#标签参数" class="headerlink" title="标签参数"></a>标签参数</h3><table><thead><tr><th align="center">标签</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">enable</td><td align="center">是否启用</td></tr><tr><td align="center">path</td><td align="center">番剧页面路径，默认是 bangumis/index.html</td></tr><tr><td align="center">vmid</td><td align="center">哔哩哔哩番剧页面的 vmid(uid)</td></tr><tr><td align="center">title:</td><td align="center">该页面的标题</td></tr><tr><td align="center">quote</td><td align="center">写在页面开头的一段话，支持 html 语法</td></tr><tr><td align="center">show</td><td align="center">初始显示页面：0: 想看 , 1: 在看 , 2: 看过，默认为 1</td></tr><tr><td align="center">loading</td><td align="center">图片加载完成前的 loading 图片</td></tr><tr><td align="center">metaColor</td><td align="center">meta 部分 (简介上方) 字体颜色</td></tr><tr><td align="center">color</td><td align="center">简介字体颜色</td></tr><tr><td align="center">webp</td><td align="center">番剧封面使用 webp 格式 (此格式在 safari 浏览器下不显示，但是图片大小可以缩小 100 倍左右), 默认 true</td></tr></tbody></table><h2 id="vmid-获取"><a href="#vmid-获取" class="headerlink" title="vmid 获取"></a>vmid 获取</h2><p>登录哔哩哔哩后前往 <a href="https://space.bilibili.com/" target="_blank" rel="noopener">https://space.bilibili.com/</a> 页面，网址最后的一串数字就是 vmid。</p><blockquote><p>注意：追番列表需要设置为公开才行</p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在 hexo generate 或 hexo deploy 之前使用命令更新番剧数据！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u</span><br></pre></td></tr></table></figure><blockquote><p>删除数据命令:hexo bangumi -d</p></blockquote><h3 id="配置在站点上"><a href="#配置在站点上" class="headerlink" title="配置在站点上"></a>配置在站点上</h3><ul><li>在 source 目录下新建一个文件夹</li><li>命名为 bilibili (自己随意起一个)</li><li>将配置文件里的 path 设置为 bilibili/index.html</li><li>在需要引入的地方引入 /bilibili/ 即可，例如放在导航栏：- 番剧 || /bilibili/ || fa fa-play-circle</li></ul><p><code>注意</code>：由于自定义path为<code>bilibili/index.html</code>，执行hexo g会在public文件下自动生成<code>bilibili/index.html</code>文件,不必到source文件下再次创建。</p>]]></content>
      
      
      <categories>
          
          <category> 工具插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二次元 </tag>
            
            <tag> 哔哩哔哩 </tag>
            
            <tag> hexo-bilibili-bangumi </tag>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客添加豆瓣插件</title>
      <link href="/2021/02/03/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6/"/>
      <url>/2021/02/03/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="豆瓣读书、电影和游戏插件"><a href="#豆瓣读书、电影和游戏插件" class="headerlink" title="豆瓣读书、电影和游戏插件"></a>豆瓣读书、电影和游戏插件</h2><p>本博客使用的是<a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">Hexo-douban</a>这块插件，由于插件主人工作繁忙，无心继续更新维护，也暴露出在使用过程中的问题，比如安装成功却无法爬取豆瓣数据等情况，下面将记录一下安装步骤和踩坑解决方案。</p><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo-douban --save</span><br></pre></td></tr></table></figure><h3 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --update --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>将下面的配置写入站点的全局配置文件 _config.yml 里(不是主题的配置文件).</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">douban:   </span><br><span class="line">  user: xxxxxx</span><br><span class="line">  builtin: true</span><br><span class="line">  book:</span><br><span class="line">    title: &#39;我的书单&#39; # 该页面的标题</span><br><span class="line">    quote: &#39;每读一本书，思维总会发光&#39; # 写在页面开头的一段话,支持html语法.</span><br><span class="line">  movie:</span><br><span class="line">    title: &#39;我的影单&#39;</span><br><span class="line">    quote: &#39;一场电影一场空&#39;</span><br><span class="line">  game:</span><br><span class="line">    title: &#39;我的游戏&#39;</span><br><span class="line">    quote: &#39;一场游戏一场梦&#39;</span><br><span class="line">  timeout: 10000 # 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</span><br></pre></td></tr></table></figure><ul><li><p>user: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://www.douban.com/people/xxxxxx/&quot;" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/&quot;</a> ，其中的”xxxxxx”就是你的个人ID了。</p></li><li><p>builtin: 是否将生成页面的功能嵌入hexo s和hexo g中，默认是false,另一可选项为true(1.x.x版本新增配置项,建议开启)。</p></li><li><p>title: 该页面的标题.</p></li><li><p>quote: 写在页面开头的一段话,支持html语法.</p></li><li><p>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</p></li></ul><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。另外需注意douban:前面必须要顶格才行，有时候复制粘贴会多出空格，导致没有产生相关的页面。</p><h3 id="启用使用"><a href="#启用使用" class="headerlink" title="启用使用"></a>启用使用</h3><p>在0.x.x版本中，文章的更新和豆瓣页面的爬取操作是绑定在一起的，无法支持单独更新文章或者单独爬取文章。</p><p>在1.x.x版本中，使用hexo douban命令即可生成指定页面，如果不加参数，那么默认参数为-bgm。</p><p><strong>1.x.x版本</strong></p><p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban -h</span><br><span class="line">Usage: hexo douban</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Generate pages from douban</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -b, --books   Generate douban books only</span><br><span class="line">  -g, --games   Generate douban games only</span><br><span class="line">  -m, --movies  Generate douban movies only</span><br></pre></td></tr></table></figure><p>当配置了builtin参数为true，那么除了可以使用hexo douban命令生成之外，hexo g或hexo s也内嵌了生成页面的功能。builtin设置为true时，可直接使用命令<code>hexo g</code>即在生成静态页面前爬取豆瓣数据，不需要先执行 hexo douban。</p><p><strong>0.x.x版本</strong><br>直接使用命令hexo g即在生成静态页面前爬取豆瓣数据，如果使用hexo s则会监听文件变动，每有一次变动就会重新爬取数据。</p><p><strong>生成页面命令</strong></p><p>在GitBash下输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清除之前生成的文件</span><br><span class="line">hexo douban -bmg   #生成豆瓣书籍、电影、游戏页面</span><br><span class="line">hexo g             #生成文章</span><br><span class="line">hexo s           #启动本地服务器</span><br><span class="line">hexo deploy        #上传部署</span><br><span class="line"></span><br><span class="line">#-bgm代表的是book、game、movie三个参数，如果只需要其中的一部分就只带你想要的那些参数。</span><br></pre></td></tr></table></figure><blockquote><p>注：由于<code>hexo douban</code>的简写也是hexo d，与hexo deploy的简写指令hexo d冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式</p></blockquote><h3 id="显示测试"><a href="#显示测试" class="headerlink" title="显示测试"></a>显示测试</h3><p>如果上面的配置和操作都没问题，我们只需要在站点目录下测试<a href="http://localhost:4000/books" target="_blank" rel="noopener">http://localhost:4000/books</a> 或者 <a href="http://localhost:4000/movies等，如果看到页面了就说明成功了。" target="_blank" rel="noopener">http://localhost:4000/movies等，如果看到页面了就说明成功了。</a></p><h3 id="菜单配置"><a href="#菜单配置" class="headerlink" title="菜单配置"></a>菜单配置</h3><p>如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件<code>_config.xml</code>，找到菜单按钮，可以选择性的添加下面内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: &#x2F; || fa fa-home</span><br><span class="line">  随机文章: &#x2F;random&#x2F; || fa fa-random</span><br><span class="line">  时间轴: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  清单||fa fa-list:</span><br><span class="line">    - 书籍 || &#x2F;books&#x2F; || fa fa-book # 这是链接到books页面</span><br><span class="line">    - 电影 || &#x2F;movies&#x2F; || fa fa-film # 这是链接到movies页面</span><br><span class="line">    - 游戏 || &#x2F;games&#x2F; || fa fa-gamepad # 这是链接到games页面</span><br></pre></td></tr></table></figure><h3 id="遇到问题及解决方案"><a href="#遇到问题及解决方案" class="headerlink" title="遇到问题及解决方案"></a>遇到问题及解决方案</h3><p>问题：userid设置完成，但是hexo g 爬取不到豆瓣数据，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 books have been loaded in 3066 ms, because you are offline or your network is bad</span><br><span class="line">0 movies have been loaded in 3041 ms, because you are offline or your network is bad</span><br></pre></td></tr></table></figure><p>解决方案：</p><p>由于使用的node.js是15版本的，而Hexo-douban插件不支持，可能是兼容性问题，可尝试使用别的nodejs版本，建议安装<code>v12.18.0</code>版本可解决。</p><h2 id="Win10使用nvm进行node版本管理"><a href="#Win10使用nvm进行node版本管理" class="headerlink" title="Win10使用nvm进行node版本管理"></a>Win10使用nvm进行node版本管理</h2><p>因为兼容性原因，需要降低node版本。可以选择直接卸载现有版本，重新安装其他版本，但是考虑可拓展性，还是准备装一下nvm。</p><h3 id="nvm简介"><a href="#nvm简介" class="headerlink" title="nvm简介"></a>nvm简介</h3><p>nvm是Linux下常用的一个node.js多版本管理工具，但是nvm不能在Windows下使用，在GitHub上有个项目叫<code>nvm-windows</code>，可以让我们在Windows下对node.js进行多版本管理。</p><h3 id="下载nvm安装包"><a href="#下载nvm安装包" class="headerlink" title="下载nvm安装包"></a>下载nvm安装包</h3><p>下载GitHub提供的<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">nvm-windows</a></p><p>下载可执行安装包：<a href="https://github.com/coreybutler/nvm-windows/releases/download/1.1.7/nvm-setup.zip" target="_blank" rel="noopener">nvm-setup.zip</a>，解压，直接安装即可。</p><p>在安装nvm-windows前，由于已经安装过node，需要先卸载，并且要把目录清理干净。</p><h3 id="完全卸载已安装的node-js"><a href="#完全卸载已安装的node-js" class="headerlink" title="完全卸载已安装的node.js"></a>完全卸载已安装的node.js</h3><ol><li>从卸载程序卸载程序node.js，也可以直接右键node.js的安装包并选择卸载。</li><li>从下列的目录中找到相关的内容并删除掉：<ol><li><code>C:\Program Files (x86)\nodejs</code></li><li><code>C:\Program Files\nodejs</code></li><li><code>C:\Users\{User}\AppData\Roaming\npm</code>（或<code>%appdata%\npm</code>）</li><li><code>C:\Users\{User}\AppData\Roaming\npm-cache</code>（或<code>%appdata%\npm-cache</code>）</li></ol></li><li>检查电脑环境变量，将配置过的node.js和npm路径删除掉。</li><li>重启电脑。</li></ol><h3 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h3><p>将下载的文件解压后得到nvm-setup.exe，安装直接点下一步即可，有两个界面需要注意：</p><ol><li><p>Select Destination Location/设置nvm路径<br>安装完成后有个setting.txt文件，此路径相当于该文件中的root。<br><code>注意</code>：路径不支持空格，不能设为类似”C:Program Files”这种，否则node无法使用，建议设置为：D:softwarenvm</p></li><li><p>Set Node.js Symlink/设置node.js映射路径<br>此路径相当于setting.txt文件中的path，该路径会与使用的node版本一一对应 ，根据nvm使用的版本，对应不同的node目录，从而实现node版本切换。<br><code>注意</code>：<br>此路径同样不支持空格，不能设为类似”C:Program Files”这种，否则当你nvm use node版本时会出现如下：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nvm use 12.18.0</span><br><span class="line">exit status 1: &#39;C:\Program&#39; 一串乱码。。。</span><br></pre></td></tr></table></figure><p>也不能将目录设置成nvm安装路径的上一级，比如： D:software，否则明明提示成功用nvm安装了node，但是当你查看node版本时会出现：’node’ 不是内部或外部命令，也不是可运行的程序，建议设置为：D:softwarenodejs<br>NVM_HOME D:softwarenvm<br>NVM_SYMLINK D:softwarenodejs</p><p>查看nvm版本，出现如下，表示nvm安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nvm -v</span><br><span class="line">Running version 1.1.7.</span><br></pre></td></tr></table></figure><h3 id="使用nvm安装node"><a href="#使用nvm安装node" class="headerlink" title="使用nvm安装node"></a>使用nvm安装node</h3><p><strong>设置node与npm下载源</strong></p><blockquote><p>nvm node_mirror <a href="https://npm.taobao.org/mirrors/node/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node/</a><br>nvm npm_mirror <a href="https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/npm/</a></p></blockquote><p>设置完下载源后，会发现settings.txt 文件里的path不见了，不用管他<br>此时setting.txt文件如下：<br>root: D:softwarenvm<br>arch: 64<br>proxy: none<br>originalpath: .<br>originalversion:<br>node_mirror: <a href="https://npm.taobao.org/mirrors/node/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node/</a><br>npm_mirror: <a href="https://npm.taobao.org/mirrors/npm/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/npm/</a></p><h3 id="安装node版本"><a href="#安装node版本" class="headerlink" title="安装node版本"></a>安装node版本</h3><p>以我安装node 12.18.0版本为例：<br>1.安装指定node版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install 12.18.0 64-bit</span><br></pre></td></tr></table></figure><p>2.查看已安装的node版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nvm list</span><br><span class="line">  * 12.18.0 (Currently using 64-bit executable)</span><br></pre></td></tr></table></figure><p>3.使用某个node版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nvm use 12.18.0</span><br><span class="line">Now using node v10.15.3 (64-bit)</span><br></pre></td></tr></table></figure><p>如上3步后，键入node和npm命令，就可以查看到当前的node和npm版本了。</p><p>4.查看node版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v12.18.0</span><br></pre></td></tr></table></figure><p>5.查看npm版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm -v</span><br><span class="line">6.14.4</span><br></pre></td></tr></table></figure><h3 id="nvm常用命令"><a href="#nvm常用命令" class="headerlink" title="nvm常用命令"></a>nvm常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nvm list available              &#x2F;&#x2F;查看可安装的nodejs版本</span><br><span class="line">nvm install &lt;version&gt;        &#x2F;&#x2F; 安装node版本</span><br><span class="line">nvm list               &#x2F;&#x2F; 查看已安装的node版本</span><br><span class="line">nvm use [version] [arch]     &#x2F;&#x2F; 使用某个node版本</span><br><span class="line">nvm uninstall &lt;version&gt;     &#x2F;&#x2F; 卸载node版本</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 豆瓣 </tag>
            
            <tag> hexo-douban </tag>
            
            <tag> 插件使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作免费的V2ray和SSR订阅链接分享</title>
      <link href="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/"/>
      <url>/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>制作免费的订阅链接的目的是为了筛选一些延迟速度比较低的服务器地址，这里选择延迟在30ms以下的用来制作订阅链接分享。制作完成后就可以分享给其他小伙伴使用了，也是为了给自己备份，以防万一。</p><h2 id="利用OneDrive网盘制作订阅链接"><a href="#利用OneDrive网盘制作订阅链接" class="headerlink" title="利用OneDrive网盘制作订阅链接"></a>利用OneDrive网盘制作订阅链接</h2><ul><li>首先打开V2rayN.exe软件，选择几个网络比较好的节点，右键“批量导出订阅内容至剪贴板”，如图：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E6%89%B9%E9%87%8F%E5%AF%BC%E5%87%BA%E8%AE%A2%E9%98%85.png"  alt="img" title="批量导出订阅.png"></p><ul><li><p>桌面新建一个“订阅分享.txt”文件，将导出的订阅内容复制过去进行保存。</p></li><li><p>打开<a href="https://onedrive.live.com/" target="_blank" rel="noopener">OneDrive</a>,上传“订阅分享.txt”文件到自己的OneDrive空间。</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6.png"  alt title="上传文件.png"></p></li><li><p>上传后右键点击该文件，选择“共享”，弹出如下图：</p></li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E5%8F%B3%E9%94%AE%E5%85%B1%E4%BA%AB.png"  alt title="右键共享.png"></p><ul><li>点击“拥有链接的人员都可查看”，进入如下页面：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E5%8F%96%E6%B6%88%E5%85%81%E8%AE%B8%E7%BC%96%E8%BE%91.png"  alt title="取消允许编辑.png"></p><ul><li>点击取消允许编辑，然后点击应用，返回下图：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E7%82%B9%E5%87%BB%E5%A4%8D%E5%88%B6%E9%93%BE%E6%8E%A5.png"  alt title="点击复制链接.png"></p><ul><li>点击“复制链接”，复制URL，然后再打开<a href="https://onedrive.gimhoy.com/" target="_blank" rel="noopener">OneDrive直链获取工具</a>,因为OneDrive生成的URL无法直接加入订阅使用，因此需要进行转换。</li><li>将复制的URL粘贴进去，文件的拓展名选择mp3格式，点击”获取”按钮，即可生成永久链接，如图：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E7%94%9F%E6%88%90%E5%A4%96%E9%93%BE.png"  alt title="生成外链.png"></p><ul><li>将永久链接生成的链接URL的后缀名.mp3删除，就能得到一个完整的订阅链接了,URL如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;onedrive.gimhoy.com&#x2F;1drv&#x2F;aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBZ204d3BjSVhDanNnNHRuV2VyWDNxWk9BM0JBcUE&#x3D;</span><br></pre></td></tr></table></figure><ul><li>接下来打开V2ray.exe程序，点击“订阅设置”，将其粘贴进去再点击“确定”按钮，然后点击“更新订阅”就能刷新出刚才制作的订阅链接的节点了，如图所示：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E8%AE%A2%E9%98%85%E8%AE%BE%E7%BD%AE.png"  alt title="订阅设置.png"></p><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E6%9B%B4%E6%96%B0%E8%AE%A2%E9%98%85.png"  alt title="更新订阅.png"></p><h2 id="GitHub托管V2ray订阅方法"><a href="#GitHub托管V2ray订阅方法" class="headerlink" title="GitHub托管V2ray订阅方法"></a>GitHub托管V2ray订阅方法</h2><ul><li>首先登录<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>,小白没有注册，只需要一个邮箱就能注册使用。</li><li>新建一个仓库：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93.png"  alt title="新建仓库.png"></p><ul><li>仓库名称和说明可随意，公开或私人的都行，然后点击“创建仓库”按钮。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png"  alt title="创建仓库.png"></p><ul><li>进入如下界面，再点击“创建新文件”。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E5%88%9B%E5%BB%BA%E6%96%B0%E6%96%87%E4%BB%B6.png"  alt title="创建新文件.png"></p><ul><li>文件名随意，最好都是在英文状态下进行，防止出错，粘贴的内容就是在V2ray.exe程序中右键“批量导出订阅内容至剪贴板”的内容。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E6%96%87%E4%BB%B6%E5%90%8D.png"  alt title="文件名.png"></p><ul><li>最后点击“Commit new file”,生成该文件,再点击“Go to file”,再进入该文件找到“Raw”按钮。</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/Go.png"  alt title="Go.png"></p><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/Raw.png"  alt title="Raw.png"></p><ul><li>点击“Raw”按钮，进入到该界面，上面的URL链接就是可直接使用的订阅地址链接了，不需要再进行转换：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E8%AE%A2%E9%98%85%E7%BD%91%E5%9D%80.png"  alt title="订阅网址.png"></p><h2 id="SSR的订阅制作方法"><a href="#SSR的订阅制作方法" class="headerlink" title="SSR的订阅制作方法"></a>SSR的订阅制作方法</h2><ul><li>方法与上面类似，先打开SSR.exe程序，右键选择“服务器连接统计”：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9E%E6%8E%A5%E7%BB%9F%E8%AE%A1.png"  alt title="服务器连接统计.png"></p><ul><li>选择“导出”，点击“复制所有节点链接”:</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E5%A4%8D%E5%88%B6%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E9%93%BE%E6%8E%A5.png"  alt title="复制所有节点链接.png"></p><ul><li>将复制的SSR节点链接进行<a href="https://tool.oschina.net/encrypt?type=3" target="_blank" rel="noopener">BASE64编码转换</a>：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/22/%E5%88%B6%E4%BD%9C%E5%85%8D%E8%B4%B9%E7%9A%84V2ray%E5%92%8CSSR%E8%AE%A2%E9%98%85%E9%93%BE%E6%8E%A5%E5%88%86%E4%BA%AB/%E7%BC%96%E7%A0%81%E5%8A%A0%E5%AF%86.png"  alt title="编码加密.png"></p><ul><li>加密转换后的编码就是订阅源（内容），和右键“批量导出订阅内容至剪贴板”的是一样的编码，后面的步骤与上面的一模一样，将编码存放在OneDrive或Github都行。</li></ul><p>以上笔记均为实践后进行整理，不用每个节点挨个输入，既方便分享又能进行备份，有不懂的可以访问<a href="https://www.youtube.com/watch?v=4SpbyqkBRVQ" target="_blank" rel="noopener">工具大师视频教程</a>或评论留言给我哦！</p>]]></content>
      
      
      <categories>
          
          <category> 黑技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
            <tag> 订阅地址 </tag>
            
            <tag> v2ray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题配置Valine评论及邮件提醒</title>
      <link href="/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/"/>
      <url>/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>博客也上线很久了，但之前配置的Valine评论系统注册使用的<a href="https://leancloud.app/" target="_blank" rel="noopener">LeanCloud</a>是国内版-华北节点的，由于国内的域名需要审核备案，比较麻烦，因此改用<a href="https://leancloud.app/" target="_blank" rel="noopener">LeanCloud</a>国际版，顺便记录一下博主踩过的坑。</p><h2 id="为博客配置Valine评论系统"><a href="#为博客配置Valine评论系统" class="headerlink" title="为博客配置Valine评论系统"></a>为博客配置Valine评论系统</h2><p>Valine评论系统的配置其实很简单，在这里就简单介绍一下。</p><ul><li>首先要去<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud官网</a>注册一个帐号，账号注册成功后，我们在控制台创建一个应用，如下：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200710120906355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTE3MDI0,size_16,color_FFFFFF,t_70"  alt="img"></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200710120918650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTE3MDI0,size_16,color_FFFFFF,t_70"  alt="img"></p><ul><li>应用创建完成后，点击应用小卡片右上角的设置按钮进入到应用设置面板，在此面板下的【设置 | 应用Keys】菜单下，获取应用的AppID和AppKey，如下图：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://img-blog.csdnimg.cn/2020071012093913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTE3MDI0,size_16,color_FFFFFF,t_70"  alt="img"></p><ul><li>然后将AppID和AppKey这两个属性值复制粘贴到Butterfly主题的_config.yml配置文件中，由于之前配置了华北节点的AppID和AppKey,只需要将国际版的AppID和AppKey复制粘贴过去即可。代码如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # if you want use valine,please set this value is true</span><br><span class="line">  appId: 在国际版的配置中心查看并粘贴 # leancloud application app id</span><br><span class="line">  appKey: 在国际版的配置中心查看并粘贴 # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true&#x2F;false) https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">  verify: false # valine verify code (true&#x2F;false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: en # i18n: zh-cn&#x2F;en</span><br><span class="line">  placeholder: 来吧，造作吧，快活吧，肆无忌惮吧！(～￣▽￣)～ # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header info</span><br><span class="line">  recordIP: false # Record reviewer </span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: &#x2F;img&#x2F;comment_bg.png # valine background</span><br><span class="line">  count: true # top_img显示评论数</span><br></pre></td></tr></table></figure><ul><li>此时，我们的博客页面已经出现了评论面板了，如下所示：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/%E8%AF%84%E8%AE%BA%E9%9D%A2%E6%9D%BF.png"  alt title="评论面板.png"></p><ul><li>最后，我们在leancloud中的应用设置界面中，通过【设置 | 安全中心】菜单，将我们博客的域名添加到安全中心，如下：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/%E5%AE%89%E5%85%A8%E4%B8%AD%E5%BF%83.png"  alt title="安全中心.png"></p><ul><li>如果配置完之后没有出现评论面板，那你可要认真看看对应的主题应该怎么配置Valine评论系统了，如果使用最新版的Butterfly主题后，配置了Valine但是没有出现评论面板，应该是漏写了一处配置，如下：</li></ul><p><img src="/img/loading.gif" class="lazyload" data-src="https://img-blog.csdnimg.cn/20200710121050308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MTE3MDI0,size_16,color_FFFFFF,t_70"  alt="img"></p><p>加上以上语句就可以正常显示评论面板了，当然了，修改了配置文件得需要重新部署上传才能生效。</p><h2 id="为Valine评论系统增加邮件提醒功能"><a href="#为Valine评论系统增加邮件提醒功能" class="headerlink" title="为Valine评论系统增加邮件提醒功能"></a>为Valine评论系统增加邮件提醒功能</h2><p>配置了Valine评论系统就能在博客查看评论留言，如果别人给我发的评论，我还要到后台去看，实在是太麻烦了，于是找到了一个好项目<a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">valine-admin</a>。Valine Admin是<a href="https://deserts.io/diy-a-comment-system/" target="_blank" rel="noopener">Valine评论系统</a>的扩展和增强，主要实现评论邮件通知，评论管理，垃圾评论过滤等功能。</p><p>本博客教程使用<a href="https://leancloud.app/" target="_blank" rel="noopener">LeanCloud国际版</a>做演示，注意要进入的是国际版，以免出问题也不知道问题在哪。</p><h3 id="云引擎“一键”部署"><a href="#云引擎“一键”部署" class="headerlink" title="云引擎“一键”部署"></a>云引擎“一键”部署</h3><p>进入评论系统数据库所在的LeanCloud应用。进入“云引擎-设置”，设置环境变量以及云引擎域名。**以下参数需要正确设置。云引擎域名（ADMIN_URL参数）用于评论后台管理，如 。</p><table><thead><tr><th>变量</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>沙漠</td><td>[必填]博客名称</td></tr><tr><td>SITE_URL</td><td><a href="http://www.xyym.cf/" target="_blank" rel="noopener">http://www.xyym.cf/</a></td><td>[必填]博客首页地址</td></tr><tr><td><strong>SMTP_SERVICE</strong></td><td>QQ</td><td>[新版支持]邮件服务提供商，支持QQ，163、126，Gmail以及<a href="https://nodemailer.com/smtp/well-known/#supported-services" target="_blank" rel="noopener">更多</a></td></tr><tr><td>SMTP_USER</td><td><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td>[必填] SMTP登录用户</td></tr><tr><td>SMTP_PASS</td><td>ccxxxxxxxxch</td><td>[必填] SMTP登录密码（QQ邮箱需要获取独立密码,也就是授权码）</td></tr><tr><td>发件人名称</td><td>沙漠</td><td>[必填]发件人</td></tr><tr><td>SENDER_EMAIL</td><td><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td>[必填]发件邮箱</td></tr><tr><td>ADMIN_URL</td><td><a href="https://xxx.leanapp.cn/" target="_blank" rel="noopener">https://xxx.leanapp.cn/</a></td><td>[建议] Web主机二级域名（云引擎域名），用于自动唤醒</td></tr><tr><td>BLOGGER_EMAIL</td><td><a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a></td><td>[任选]博主通知收件地址，替换使用SENDER_EMAIL</td></tr><tr><td>AKISMET_KEY</td><td>xxxxxxxx</td><td>[任选] Akismet键用于垃圾评论检测，设置MANUAL_REVIEW打开人工审核，留空不使用反垃圾</td></tr></tbody></table><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png"  alt title="自定义环境变量.png"></p><p>以上图片中关于”SMTP_PASS”的值获取方式如下：</p><p>首先打开QQ邮箱界面，然后依次点击【设置 | 账户】菜单，如下：</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/QQ%E9%82%AE%E7%AE%B1%E7%95%8C%E9%9D%A2.png"  alt="img" title="QQ邮箱界面.png"></p><p>然后下拉到下方，找到开启IMAP/SMTP服务，如下：</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2021/01/21/Butterfly%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AEValine%E8%AF%84%E8%AE%BA%E5%8F%8A%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92/%E6%8E%88%E6%9D%83%E7%A0%81%E7%94%9F%E6%88%90.png"  alt="img" title="授权码生成.png"></p><p>开启后会得到一串字符串，将那一串字符串复制粘贴到云引擎面板中的”SMTP_PASS”属性后面作为它的值。要是先前开启了QQ邮箱登录保护，导致”开启服务”不能使用，用手机下载”QQ安全中心”，先把”邮箱登录保护”关闭就可以使用了。</p><p>切换到“云引擎-部署”，部署模式选择“部署项目-Git部署”，分支“主”，手动部署目标环境为“生产环境”在<a href="https://leancloud.cn/dashboard/#/apps" target="_blank" rel="noopener">Leancloud</a>云引擎设置界面，填充代码库并保存：<a href="https://github.com/DesertsP/Valine-Admin.git" target="_blank" rel="noopener">https://github.com/DesertsP/Valine-Admin.git</a>，设置好即可一键部署了。</p><p><a href="https://github.com/DesertsP/Valine-Admin/blob/master/assets/imgs/deploy4.png" target="_blank" rel="noopener"><img src="/img/loading.gif" class="lazyload" data-src="https://github.com/DesertsP/Valine-Admin/raw/master/assets/imgs/deploy4.png"  alt="部署3"></a></p><h2 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h2><p>首先需要设置管理员信息。访问管理员注册页面<code>https://云引擎域名/sign-up</code>，注册管理员登录信息，如：<a href="https://xyym.avosapps.us/sign-up" target="_blank" rel="noopener">https://xyym.avosapps.us/sign-up</a> ,注册好QQ邮箱号和密码之后即可登录管理评论信息了。</p><p><a href="https://github.com/DesertsP/Valine-Admin/blob/master/assets/imgs/signup2.png" target="_blank" rel="noopener"><img src="/img/loading.gif" class="lazyload" data-src="https://github.com/DesertsP/Valine-Admin/raw/master/assets/imgs/signup2.png"  alt="注册"></a></p><ul><li>注：使用原版Valine如果遇到注册页面不显示直接重定向至登录页的情况，请手动删除_User表中的全部数据。</li></ul><h2 id="定时任务设置"><a href="#定时任务设置" class="headerlink" title="定时任务设置"></a>定时任务设置</h2><p>关于自动休眠的官方说法：<a href="https://leancloud.cn/docs/leanengine_plan.html#hash633315134" target="_blank" rel="noopener">点击查看</a>。目前实现了两个云函数定时任务来解决云引擎休眠的问题：</p><ul><li>自动唤醒，定时访问Web APP二级域名阻止云引擎休眠；</li><li>每天定时检查过去24小时内漏发的邮件通知。</li></ul><p>进入“云引擎-定时任务”，创建两个定时任务。</p><p><a href="https://github.com/DesertsP/Valine-Admin/blob/master/assets/imgs/cron4.png" target="_blank" rel="noopener"><img src="/img/loading.gif" class="lazyload" data-src="https://github.com/DesertsP/Valine-Admin/raw/master/assets/imgs/cron4.png"  alt="img"></a></p><p>选择self-wake云函数，Cron表达式为<code>0 */30 0-16 * * ?</code>，表示每天早0点到晚16点每隔30分钟访问云引擎。</p><p>选择resend-mails云函数，Cron表达为<code>0 0 0 * * ?</code>，表示每天0点检查过去24小时内漏发的通知邮件并补发。</p><ul><li><a href="https://github.com/DesertsP/Valine-Admin/issues/63#issuecomment-533784574" target="_blank" rel="noopener">关于国际版时区的问题</a>：国际版使用UTC-0时间，注意与内部时间对应。</li></ul><p><strong>至此，Valine Admin已经可以正常工作。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 评论系统 </tag>
            
            <tag> Valine Admin </tag>
            
            <tag> 邮件提醒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js</title>
      <link href="/2021/01/03/Node-js/"/>
      <url>/2021/01/03/Node-js/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Node-js简介"><a href="#Node-js简介" class="headerlink" title="Node.js简介"></a>Node.js简介</h2><p> Node.js 就是运行在服务端的 JavaScript。它让 JavaScript 成为与PHP、Python 等服务端语言平起平坐的脚本语言。Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><h2 id="npm简介"><a href="#npm简介" class="headerlink" title="npm简介"></a>npm简介</h2><p>npm 是javascript的包管理工具，是前端模块化下的一个标志性产物，当一个网站依赖的js代码越来越多，程序员发现这是一件很麻烦的事情，于是npm就出来了。这一点和maven、gradle十分相似，只不过maven、gradle是用来管理java jar包的，而npm是用来管理js包的。</p><p>简单地说，就是通过npm下载模块，复用已有的代码，提高工作效率。</p><ol><li>从社区的角度：把针对某一特定问题的模块发布到npm的服务器上，供社区里的其他人下载和使用，同时自己也可以在社区里寻找特定的模块的资源，解决问题。</li><li>从团队的角度：有了npm这个包管理工具，复用团队既有的代码也变的更加地方便。</li></ol><h2 id="Node-js和npm的发展"><a href="#Node-js和npm的发展" class="headerlink" title="Node.js和npm的发展"></a>Node.js和npm的发展</h2><p>npm作者已经将npm开发完成，于是发邮件通知 jQuery、Bootstrap、Underscore 作者，希望他们把 jquery、bootstrap 、 underscore 放到npm远程仓库，但是没有收到回应，于是npm的发展遇到了瓶颈。<br>Node.js作者也将Node.js开发完成，但是 Node.js 缺少一个包管理器，于是他和 npm 的作者一拍即合、抱团取暖，最终 Node.js 内置了 npm。<br>后来的事情大家都知道，Node.js 火了。随着 Node.js 的火爆，大家开始用 npm 来共享 JS 代码了，于是 jQuery 作者也将 jQuery 发布到 npm 了。所以现在，你可以使用 npm install jquery 来下载 jQuery 代码。现在用 npm 来分享代码已经成了前端的标配。</p><h2 id="Node-js和npm的安装"><a href="#Node-js和npm的安装" class="headerlink" title="Node.js和npm的安装"></a>Node.js和npm的安装</h2><p>Node.js的<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装教程</a>直接上菜鸟教程有详细介绍。由于最新版的Node.js内置了npm，所以就一并安装了。有时候我们只想单独安装npm，不想安装Node.js，这个好像是不行的。</p><h2 id="npm-全局安装和局部安装的区别"><a href="#npm-全局安装和局部安装的区别" class="headerlink" title="npm 全局安装和局部安装的区别"></a>npm 全局安装和局部安装的区别</h2><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h3><p><strong>全局安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g 或 npm install webpack --global</span><br></pre></td></tr></table></figure><p><strong>本地安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack 或 npm install webpack --save-dev</span><br></pre></td></tr></table></figure><h3 id="安装位置"><a href="#安装位置" class="headerlink" title="安装位置"></a>安装位置</h3><p>全局安装：<br>安装到全局环境里面，包安装在Node安装目录下的node_modules文件夹中，一般在 \Users\用户名\AppData\Roaming\ 目录下，可以使用npm root -g查看全局安装目录。</p><blockquote><p>C:\Users\lenovo&gt;npm root -g<br>D:\Program Files\nodejs\node_global\node_modules</p></blockquote><p>本地安装：<br>把安装包信息写入package.json文件的devDependencies字段中，包安装在指定项目的node_modules文件夹下。</p><h3 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h3><p>全局安装：<br>用户可以在命令行中直接运行该组件包支持的命令。</p><p>本地安装：<br>直接通过require()的方式引入项目中node_modules目录下的模块。</p><h3 id="全局安装局限性"><a href="#全局安装局限性" class="headerlink" title="全局安装局限性"></a>全局安装局限性</h3><p>1.全局安装，不能直接通过require()的方式去引用模块</p><p>在js实例代码中，默认下node.js会在NODE_PATH和目前js所在项目下的node_modules文件夹下去寻找模块，全局安装需要手动解决包路径的配置问题，当然你也可以复制全局安装的node_modules文件夹到项目下，还有办法可以选择将环境变量的NODE_PATH设置为C:\Program Files\nodejs。</p><p>2.不利于包的更新管理</p><p>可能需要为每个包重新命名，如<a href="mailto:gulp@3.8.1">gulp@3.8.1</a>、gulp@3.9.1…，为了区别不同项目使用指定的包，保证模块之间的相互依赖，区别每个项目正常运行。</p><h3 id="本地安装的重要性"><a href="#本地安装的重要性" class="headerlink" title="本地安装的重要性"></a>本地安装的重要性</h3><p>本地安装可以让每个项目拥有独立的包，不受全局包的影响，方便项目的移动、复制、打包等，保证不同版本包之间的相互依赖，这些优点是全局安装难以做到的。另外，本地安装包对于项目的加载会更快。缺点，如每次新项目都要本地安装所依赖的包，安装包时间相对较长。</p><h2 id="npm的使用"><a href="#npm的使用" class="headerlink" title="npm的使用"></a>npm的使用</h2><h3 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h3><p>使用npm发布之前必须先进入<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm官网</a>注册自己的账户。</p><ol><li>本地创建自己需要发布的目录文件。执行npm init命令，生成package.json文件。</li><li>发布自己的npm包。命令如下：</li></ol><p>第一次发布包：</p><ul><li>添加账号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm adduser &#x2F;&#x2F; 输入自己的npm账号、密码、邮箱</span><br></pre></td></tr></table></figure><p>非第一次发布包：</p><ul><li>登录npm</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login &#x2F;&#x2F; 输入账号、密码、邮箱，登录后方可发包</span><br></pre></td></tr></table></figure><p><code>注意:</code>npm adduser成功的时候默认你已经登陆了，所以不需要再接着npm login.</p><ul><li>发布包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><ul><li>取消发布</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unpublish [--force] &#x2F;&#x2F; 不成功可以强制取消</span><br></pre></td></tr></table></figure><h3 id="查看发布的包信息"><a href="#查看发布的包信息" class="headerlink" title="查看发布的包信息"></a>查看发布的包信息</h3><p>登录<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm官网</a> ，即可看到刚才发布的包，如果网不是很好，可能等一会才能看到。</p><h3 id="更新包"><a href="#更新包" class="headerlink" title="更新包"></a>更新包</h3><p>更新包和发布包的命令是一样的，更新包只需修改package.json里面的<code>version</code>字段，也可以使用npm 自带的版本控制命令修改版本号，更新的步骤为：</p><ol><li>修改包的版本（package.json里的version字段）</li><li>npm publish //发布</li><li>npm version  //查看版本信息</li></ol><p><strong>npm有一套自己的版本控制标准——Semantic versioning（语义化版本）</strong></p><p><strong>具体体现为：</strong></p><p>对于”version”:”x.y.z”</p><blockquote><p><strong>1. 修复bug,小改动，增加z</strong></p><p><strong>2. 增加了新特性，但仍能向后兼容，增加y</strong></p><p><strong>3. 有很大的改动，无法向后兼容,增加x</strong></p></blockquote><p>例如：初始的项目为1.0.0版本，相关变动如下：</p><p>若是1中情况，变为1.0.1</p><p>若是2中情况，变为1.1.0</p><p>若是3中情况，变为2.0.0</p><h3 id="删除上传的包"><a href="#删除上传的包" class="headerlink" title="删除上传的包"></a>删除上传的包</h3><p><strong>注意:</strong>根据规范，只有在发包的24小时内才允许撤销发布的包</p><p>由于本人发布的包是测试包，不希望污染npm网站，所以在测试成功后需要删除包。</p><p>终端打开包项目，输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unpublish --force &#x2F;&#x2F;实际上是执行撤销操作</span><br></pre></td></tr></table></figure><p>删除后重新登录<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm网站</a>上搜索这个包，发现已经不存在了。超过24小时已发布的包，一般不允许删除，若非要删除则可以通过邮件联系npm官网人员进行彻底删除。</p>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Hexo博客新增血小板模型</title>
      <link href="/2021/01/03/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%96%B0%E5%A2%9E%E8%A1%80%E5%B0%8F%E6%9D%BF%E6%A8%A1%E5%9E%8B/"/>
      <url>/2021/01/03/%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2%E6%96%B0%E5%A2%9E%E8%A1%80%E5%B0%8F%E6%9D%BF%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="下载模型文件"><a href="#下载模型文件" class="headerlink" title="下载模型文件"></a>下载模型文件</h2><p>血小板模型<a href="https://cdn.imjad.cn/usr/uploads/kesshouban_v2.7z" target="_blank" rel="noopener">资源包</a>，首先点击资源包，下载血小板的模型文件。</p><h2 id="修改模型文件"><a href="#修改模型文件" class="headerlink" title="修改模型文件"></a>修改模型文件</h2><p>该血小板模型在Hexo博客之前安装的<code>hexo-helper-live2d</code>插件中是没有的，需要自己先下载模型文件，上传到npm,再安装到博客中。可根据原来配置的<code>live2d-widget-model-unitychan</code>模型文件目录进行修改，让该模型在hexo博客中能够使用。把血小板的文件结构梳理成和<code>unitychan</code>的一样，然后再进行安装操作。</p><h2 id="安装模型"><a href="#安装模型" class="headerlink" title="安装模型"></a>安装模型</h2><p>先将模型发布到 npm，再从npm下载到博客配置应用。具体步骤如下：</p><ol><li>本地新建一个目录命名为<code>live2d-widget-model-platelet</code>, 右键点击<code>Git Bash Here</code>,用已安装的 Node 环境执行 npm init, 推荐使用 live2d-widget-model-xxx 的包名。</li><li>在刚刚创建的<code>live2d-widget-model-platelet</code>目录下创建 <code>assets</code> 子目录, 把<code style="color:green">修改好的模型文件</code>放进去。</li><li>使用 <code>npm publish</code>进行发布。</li><li>然后使用 npm install live2d-widget-model-xxx 来安装。</li><li>通过向 model.use 键入包名 (live2d-widget-model-xxx) 来使用。</li></ol><h2 id="开发并发布一个npm包"><a href="#开发并发布一个npm包" class="headerlink" title="开发并发布一个npm包"></a>开发并发布一个npm包</h2><p>注意：在进行npm publish发布之前必须先进行 <a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm官网</a>注册。否则上面第3步骤会出现404 错误。</p><p>发布教程如下：</p><ol><li><p>创建自己的npm包，如上面第2步骤已经创建和修改好文件目录，执行<code>npm init</code>命令的目的是生成<code>package.json</code>文件，可以看到文件中包含了我们刚才填写的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;live2d-widget-model-plt&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;live2d-widget-model-plt&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [</span><br><span class="line">    &quot;live2d-widget-model-plt&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;author&quot;: &quot;panyongkang&quot;, &#x2F;&#x2F;这里就是事先在npm官网注册的账号名称</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为目录名称和路径已改变，还要修改一下<code>platelet.model.json</code> 文件的内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;type&quot;: &quot;Live2D Model Setting&quot;,</span><br><span class="line">&quot;name&quot;: &quot;live2d-widget-model-platelet&quot;,</span><br><span class="line">&quot;model&quot;: &quot;moc&#x2F;platelet.moc&quot;,</span><br><span class="line">&quot;textures&quot;: [</span><br><span class="line">&quot;moc&#x2F;platelet.2048&#x2F;texture_00.png&quot;</span><br><span class="line">],</span><br><span class="line">&quot;motions&quot;:&#123;</span><br><span class="line">&quot;idle&quot;:[</span><br><span class="line">&#123;&quot;file&quot;:&quot;mtn&#x2F;Idle.mtn&quot;&#125;</span><br><span class="line">],</span><br><span class="line">        &quot;sleepy&quot;:[</span><br><span class="line">            &#123;&quot;file&quot;:&quot;mtn&#x2F;Nemui.mtn&quot;&#125;</span><br><span class="line">        ],</span><br><span class="line">&quot;flick_head&quot;:[</span><br><span class="line">&#123;&quot;file&quot;:&quot;mtn&#x2F;Anone_Synced.mtn&quot;&#125;</span><br><span class="line">],</span><br><span class="line">&quot;tap_body&quot;:[</span><br><span class="line">&#123;&quot;file&quot;:&quot;mtn&#x2F;Dance.mtn&quot;&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>发布npm包的准备命令如下：</p></li></ol><ul><li>添加账号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm adduser &#x2F;&#x2F; 输入自己注册的npm账号名称、密码、邮箱</span><br></pre></td></tr></table></figure><ul><li>登录npm</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login &#x2F;&#x2F; 输入账号、密码、邮箱，登录后方可发包</span><br></pre></td></tr></table></figure><ul><li>发布包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><ul><li>取消发布</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unpublish [--force] &#x2F;&#x2F; 不成功可以强制取消</span><br></pre></td></tr></table></figure><ol start="3"><li><p>查看发布的包</p><p>登录<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm官网</a> ，即可看到刚才发布的包，如果网不是很好，可能等一会才能看到。</p><p><span style="color:red;">注意：执行<code>npm publish</code>命令可能会报403无权发布的错误，很可能是<code>package.json</code>文件的包名<code>live2d-widget-model-plt</code>与其他人发布的重复了，要改成没有重名的重新发布就好了。当再次发布新包或更新包时，如果报502 等代理错误，需要将代理关闭，关闭网络重新连接，等待10分钟左右（也许不用那么久）就可以重新上传包了。</span></p></li></ol><h2 id="向博客添加模型"><a href="#向博客添加模型" class="headerlink" title="向博客添加模型"></a>向博客添加模型</h2><p>以上工作都准备完成之后，就可以在Hexo博客根目录执行 <code>cnpm install live2d-widget-model-plt</code>命令进行下载安装了，可以通过node_modules文件中查看是否下载成功，接下来在Hexo博客的_config.yml文件中将<code>unitychan</code>模型改为自定义npm模型即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 设置宠物模型</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw&#x2F;</span><br><span class="line">  pluginJsPath: lib&#x2F;</span><br><span class="line">  pluginModelPath: assets&#x2F;</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-plt  &#x2F;&#x2F;在这里改成自己的血小板模型的包名即可。</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 130</span><br><span class="line">    height: 280</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure><h2 id="干物妹小埋模型"><a href="#干物妹小埋模型" class="headerlink" title="干物妹小埋模型"></a>干物妹小埋模型</h2><p>干物妹小埋的<a href="https://file.sword.studio/typecho%E6%8F%92%E4%BB%B6/umaru.zip" target="_blank" rel="noopener">资源包</a> 是基于Typecho博客的模型，与Hexo博客不兼容，因此也需要修改后使用。</p><p>修改的干物妹小埋模型也上传了<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a>官网，需要使用的可以直接 <code>cnpm i live2d-widget-model-umaru</code>命令下载即可，当然也可以下载资源包自行修改，因为资源包涉及了声音的设置，不过能力有限，尚未调试成功，后续可能持续会更新。。</p><h2 id="伊斯特瓦尔模型"><a href="#伊斯特瓦尔模型" class="headerlink" title="伊斯特瓦尔模型"></a>伊斯特瓦尔模型</h2><p>经过某大佬修改后可通过网络直接引入到网站中使用，简直无脑复制粘贴呀！该模型可自由拖动哦！</p><p>引入CSS：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ahzoa&#x2F;Live2d-Histoire@latest&#x2F;JSD&#x2F;css&#x2F;live2d.css&quot;&gt;</span><br></pre></td></tr></table></figure><p>引入Html：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;landlord&quot; style&#x3D;&quot;left:5px;bottom:0px;&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;message&quot; style&#x3D;&quot;opacity:0&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;canvas id&#x3D;&quot;live2d&quot; width&#x3D;&quot;500&quot; height&#x3D;&quot;560&quot; class&#x3D;&quot;live2d&quot;&gt;&lt;&#x2F;canvas&gt;</span><br><span class="line">    &lt;!--添加聊天窗口--&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;live_talk_input_body&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;live_talk_input_name_body&quot;&gt;</span><br><span class="line">        &lt;input name&#x3D;&quot;name&quot; type&#x3D;&quot;text&quot; class&#x3D;&quot;live_talk_name white_input&quot; id&#x3D;&quot;AIuserName&quot; autocomplete&#x3D;&quot;off&quot; placeholder&#x3D;&quot;你的名字&quot; &#x2F;&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;live_talk_input_text_body&quot;&gt;</span><br><span class="line">        &lt;input name&#x3D;&quot;talk&quot; type&#x3D;&quot;text&quot; class&#x3D;&quot;live_talk_talk white_input&quot; id&#x3D;&quot;AIuserText&quot; autocomplete&#x3D;&quot;off&quot; placeholder&#x3D;&quot;要和我聊什么呀？&quot;&#x2F;&gt;</span><br><span class="line">            &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;live_talk_send_btn&quot; id&#x3D;&quot;talk_send&quot;&gt;发送&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!--主体部分--&gt;</span><br><span class="line">    &lt;input name&#x3D;&quot;live_talk&quot; id&#x3D;&quot;live_talk&quot; value&#x3D;&quot;1&quot; type&#x3D;&quot;hidden&quot; &#x2F;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;live_ico_box&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;live_ico_item type_info&quot; id&#x3D;&quot;showInfoBtn&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;live_ico_item type_talk&quot; id&#x3D;&quot;showTalkBtn&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;live_ico_item type_music&quot; id&#x3D;&quot;musicButton&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;live_ico_item type_youdu&quot; id&#x3D;&quot;youduButton&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;live_ico_item type_quit&quot; id&#x3D;&quot;hideButton&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;input name&#x3D;&quot;live_statu_val&quot; id&#x3D;&quot;live_statu_val&quot; value&#x3D;&quot;0&quot; type&#x3D;&quot;hidden&quot; &#x2F;&gt;</span><br><span class="line">        &lt;audio src&#x3D;&quot;&quot; style&#x3D;&quot;display:none;&quot; id&#x3D;&quot;live2d_bgm&quot; data-bgm&#x3D;&quot;0&quot; preload&#x3D;&quot;none&quot;&gt;&lt;&#x2F;audio&gt;</span><br><span class="line">        &lt;!--添加音乐--&gt;</span><br><span class="line">        &lt;input name&#x3D;&quot;live2dBGM&quot; value&#x3D;&quot;http:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;song?id&#x3D;189986&quot; type&#x3D;&quot;hidden&quot;&gt;</span><br><span class="line">        &lt;input name&#x3D;&quot;live2dBGM&quot; value&#x3D;&quot;音乐地址&quot; type&#x3D;&quot;hidden&quot;&gt; &lt;!--可添加多条音乐--&gt;</span><br><span class="line">        &lt;input id&#x3D;&quot;duType&quot; value&#x3D;&quot;douqilai,l2d_caihong&quot; type&#x3D;&quot;hidden&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;open_live2d&quot;&gt;召唤伊斯特瓦尔&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>引入JS：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;apps.bdimg.com&#x2F;libs&#x2F;jquery&#x2F;1.7.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var message_Path &#x3D; &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ahzoa&#x2F;Live2d-Histoire@latest&#x2F;JSD&#x2F;&#39;;</span><br><span class="line">var talkAPI &#x3D; &quot;&quot;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ahzoa&#x2F;Live2d-Histoire@latest&#x2F;JSD&#x2F;js&#x2F;live2d.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ahzoa&#x2F;Live2d-Histoire@latest&#x2F;JSD&#x2F;js&#x2F;message.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="夏日美女模型"><a href="#夏日美女模型" class="headerlink" title="夏日美女模型"></a>夏日美女模型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!------ 用于存放Live2d模型的元素，位置可自定义 ------&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;Canvas&quot; style&#x3D;&quot;position: fixed; right: 10px; bottom: 10px;z-index: 99999999&quot; id&#x3D;&quot;L2dCanvas&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!------ 依赖 JS ------&gt;</span><br><span class="line">&lt;!---- 可选 ----&gt;</span><br><span class="line">&lt;!-- 兼容低版本浏览器 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;promise-polyfill@8&#x2F;dist&#x2F;polyfill.min.js&quot;&gt; &lt;&#x2F;script&gt;</span><br><span class="line">&lt;!-- 音频播放兼容 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;howler@2.1.3&#x2F;dist&#x2F;howler.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!---- 必需 ----&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cubism.live2d.com&#x2F;sdk-web&#x2F;cubismcore&#x2F;live2dcubismcore.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pixi.js@4.6.1&#x2F;dist&#x2F;pixi.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!-- live2dv3.js --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;live2dv3@1.2.2&#x2F;live2dv3.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!------ 加载Live2d模型 ------&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    new l2dViewer(&#123;</span><br><span class="line">        el: document.getElementById(&#39;L2dCanvas&#39;), &#x2F;&#x2F; 要添加Live2d的元素</span><br><span class="line">        basePath: &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;HCLonely&#x2F;Live2dV3&#x2F;assets&#39;, &#x2F;&#x2F; 模型根目录</span><br><span class="line">        modelName: &#39;biaoqiang_3&#39;, &#x2F;&#x2F; 模型名称</span><br><span class="line">        sounds: [ &#x2F;&#x2F; 触摸播放声音</span><br><span class="line">            &#39;sounds&#x2F;demo.mp3&#39;, &#x2F;&#x2F; 相对路径是相对于模型文件夹</span><br><span class="line">            &#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;live2dv3@latest&#x2F;assets&#x2F;biaoqiang_3&#x2F;sounds&#x2F;demo.mp3&#39; &#x2F;&#x2F; 也可以是网址</span><br><span class="line">        ]</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 模型库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 血小板 </tag>
            
            <tag> live 2D </tag>
            
            <tag> 模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客恢复笔记</title>
      <link href="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="win10系统恢复Hexo博客"><a href="#win10系统恢复Hexo博客" class="headerlink" title="win10系统恢复Hexo博客"></a>win10系统恢复Hexo博客</h2><h3 id="安装Node-js，git"><a href="#安装Node-js，git" class="headerlink" title="安装Node.js，git"></a>安装<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a>，<a href="https://git-scm.com/download/" target="_blank" rel="noopener">git</a></h3><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/1.png"  alt></p><p>重新安装git最新版本，但是cmd窗口无法识别的原因是没有配置D:\Program Files\Git\bin环境变量到Path路径中，配置好就能在cmd中通过git version查看版本信息了。</p><p>因为安装最新版的Node.js，环境变量自动已配置好了，也自动安装了npm,一般可以直接通过cmd窗口查看到安装的版本信息。但npm使用的是外网，不稳定，接下来还需要安装cnpm，选择国内淘宝镜像，下载速度更快，避免报出很多错误。</p><p>Node.js环境配置：因为执行类似的npm install express -g 安装语句时，默认是安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。</p><p> 例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\Program Files\nodejs】下手动创建两个文件夹【node_global】及【node_cache】如下图：</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/2.png"  alt></p><p> 创建完两个空文件夹之后，打开cmd命令窗口，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\Develop\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\Develop\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><p>查看配置好的信息：npm config list,确保已经切换好路径。</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/3.png"  alt></p><p>在系统环境变量PATH，输入路径D:\Program Files\nodejs\node_global\node_modules，此后所安装的模块都会安装到该路径下 。</p><p> 配置完后，安装个module测试下，我们就安装最常用的express模块</p><p>打开cmd窗口，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g     # -g是全局安装的意思</span><br></pre></td></tr></table></figure><p>安装好之后就会保存到该路径下面。</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/4.png"  alt></p><h3 id="安装cnpm-下载淘宝镜像"><a href="#安装cnpm-下载淘宝镜像" class="headerlink" title="安装cnpm,下载淘宝镜像"></a>安装cnpm,下载淘宝镜像</h3><p>在cmd窗口执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>输入cnpm -v输入是否正常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><p>若报错，’cnpm’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。</p><p>原因是下载cnpm的cnpm和cnpm.cmd两个文件需要放在D:\Program Files\nodejs目录下面，</p><p>具体请参考这篇文章：<a href="https://blog.csdn.net/pengyujuan/article/details/103693369" target="_blank" rel="noopener">https://blog.csdn.net/pengyujuan/article/details/103693369</a></p><p>检查一下镜像站是否正常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm config get registry</span><br></pre></td></tr></table></figure><h3 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h3><p>先查看C:\Users\用户名.ssh下有无ssh文件夹，没有则创建，一般重装系统是需要重新生成的。</p><p>创建命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;. ssh #查看有无ssh</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot; #创建ssh文件</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/5.png"  alt></p><p>打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/11/22/Hexo%E5%8D%9A%E5%AE%A2%E6%81%A2%E5%A4%8D%E7%AC%94%E8%AE%B0/6.png"  alt></p><p>新建好的ssh密钥，先测试一下是否成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h3 id="用户名-邮箱配置"><a href="#用户名-邮箱配置" class="headerlink" title="用户名 邮箱配置"></a>用户名 邮箱配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;&#x2F;&#x2F; 你的github用户名，非昵称</span><br><span class="line">git config --global user.email  &quot;xxx@qq.com&quot;&#x2F;&#x2F; 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><h3 id="进入到博客-Hexo-文件夹"><a href="#进入到博客-Hexo-文件夹" class="headerlink" title="进入到博客(Hexo)文件夹"></a>进入到博客(Hexo)文件夹</h3><p>文件夹只需要删除node_modules、 public、 .git 、.deploy_git，剩下的保留。</p><h3 id="关联Github项目"><a href="#关联Github项目" class="headerlink" title="关联Github项目"></a>关联Github项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:panyongkang&#x2F;panyongkang.github.io.git</span><br></pre></td></tr></table></figure><p>查看关联好的的url是否成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>所有必备的应用程序安装完成后，即可在cmd窗口使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="安装项目依赖"><a href="#安装项目依赖" class="headerlink" title="安装项目依赖"></a>安装项目依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>在hexo文件使用git执行下载，若出现报错解决方法如下。</p><p>查看所有全局已安装的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls -g</span><br></pre></td></tr></table></figure><h3 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h3><p>问题1：执行npm install失败，错误为fatal: Too many arguments.</p><p>换成cnpm install就好了，原因是之前cnpm路径没有配置好，用npm网络被限，导致node_modules无法下载到当前hexo根目录下面。</p><p>问题2：git bash中用不了hexo的命令?</p><p>错误：bash: hexo: command not found</p><p>原因：环境变量没有配置好，要找到正确的hexo安装地址，比如我把我npm的下载地址都改到d盘了，我的path就是D:\Program Files\nodejs\node_global\node_modules\hexo-cli\bin</p><p>问题3：环境配置好之后，执行Hexo命令还是失败？</p><p>错误：ERROR Cannot find module ‘hexo’ from ‘E:\MyBlog\blog\Hexo’</p><p>原因：当前Hexo目录没有node_modules依赖包，执行很多次npm install也下载不出来，甚至报错，可以考虑删除和清理缓存后，再次通过cnpm install下载依赖包，刷新一下node_modeles就有了。</p><p>命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm -rf node_modules</span><br><span class="line"></span><br><span class="line">npm cache clean --force</span><br><span class="line"></span><br><span class="line">cnpm install  ##因为依赖太多，npm install下载报错，外网不稳定的缘故吧</span><br></pre></td></tr></table></figure><h3 id="执行hexo命令"><a href="#执行hexo命令" class="headerlink" title="执行hexo命令"></a>执行hexo命令</h3><p>在hexo根目录使用git窗口依次执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo version #查看安装版本信息</span><br><span class="line">hexo g  #生成public目录的本地预览文件</span><br><span class="line">hexo s #本地预览，浏览器中输入 http:&#x2F;&#x2F;localhost:4000&#x2F;打开</span><br><span class="line">hexo d  # 部署上传到github仓库</span><br></pre></td></tr></table></figure><p><strong>不要用hexo init初始化，部分文件已经拷贝生成，如果不慎使用，则站点配置文件_config.yml会被初始化为默认值</strong></p><h3 id="添加备份"><a href="#添加备份" class="headerlink" title="添加备份"></a>添加备份</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#39;modify&#39;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><p>问题：git add . 无法备份themes/Butterfly</p><p>错误：</p><blockquote><p>Changes not staged for commit:<br> (use “git add &lt; file&gt;…” to update what will be committed)<br> (use “git restore &lt; file&gt;…” to discard changes in working directory)<br> (commit or discard the untracked or modified content in submodules)<br> modified:   themes/Butterfly (modified content, untracked content)</p></blockquote><p>原因：因为之前备份themes/Butterfly下面还有.git，冲突了，删除掉，然后hexo根目录的.git也删除重新初始化生成即可。</p><p>问题：git add . 后使用git status查看报错</p><p>错误信息：</p><blockquote><p>Changes not staged for commit:<br>(use “git add &lt; file&gt;…” to update what will be committed)<br>(use “git restore &lt; file&gt;…” to discard changes in working directory)<br>modified:  “source/_posts/\347\263\273\347\273\237\351\207\215\350\243\205-Hexo\345\215\232\345\256\242\346\201\242\345\244\215.md”</p></blockquote><p>原因：估计是我刚创建的md文件名称命名有问题，命名不允许用”-“连接，改了之后删除.git重新生成就好了。</p><h3 id="备份的文件描述"><a href="#备份的文件描述" class="headerlink" title="备份的文件描述"></a>备份的文件描述</h3><ol><li><code>_config.yml</code> 文件：站点配置文件，很多功能、插件需要修改该配置文件应用生效。</li><li><code>node_modules</code> 文件夹：包含依赖的模块。</li><li><code>package.json</code> 文件：依赖的模块列表。</li><li><code>package-lock.json</code> 文件：依赖的模块安装记录。</li><li><code>public</code> 文件夹：包含生成的网页静态文件。</li><li><code>scaffolds</code> 文件夹：包含创建的文章、分类、标签界面的模板。博客的定制修改会对模板进行修改。</li><li><code>source</code> 文件夹：包含生成网页所需要的源文件，包括包含我们心血的 Markdown 文稿，这也是最重要的内容。</li><li><code>themes</code> 文件夹：其中 <code>landscape</code> 是默认的主题，其他文件夹是克隆下来时的主题。</li></ol><p><strong>最终需要备份文件列表如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scaffolds</span><br><span class="line">source</span><br><span class="line">themes</span><br><span class="line">.gitignore</span><br><span class="line">.gitmodules</span><br><span class="line">_config.yml</span><br><span class="line">package.json</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo恢复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贵阳银行项目</title>
      <link href="/2020/09/22/%E8%B4%B5%E9%98%B3%E9%93%B6%E8%A1%8C%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/09/22/%E8%B4%B5%E9%98%B3%E9%93%B6%E8%A1%8C%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">您好，本篇文章需密码访问，请谅解！</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> 贵阳银行 </tag>
            
            <tag> EsgynDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>购机小技能</title>
      <link href="/2020/09/12/%E8%B4%AD%E6%9C%BA%E5%B0%8F%E6%8A%80%E8%83%BD/"/>
      <url>/2020/09/12/%E8%B4%AD%E6%9C%BA%E5%B0%8F%E6%8A%80%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="玩机技巧"><a href="#玩机技巧" class="headerlink" title="玩机技巧"></a>玩机技巧</h2><p>无论购买笔记本还是台式机主要还是看CPU、内存条、主板、显卡、硬盘这五大参数。购买电脑时可通过<a href="http://www.zol.com.cn/" target="_blank" rel="noopener">中关村在线</a>进行同等价位的对比，选取性价比最高的那一款。</p><h3 id="笔记本的类型"><a href="#笔记本的类型" class="headerlink" title="笔记本的类型"></a>笔记本的类型</h3><p>笔记本电脑市场现在主要分为三大类：<strong>超极本（轻薄本）、普通办公本（全能本）、游戏本（设计工作站）</strong>。</p><h3 id="CPU的选择"><a href="#CPU的选择" class="headerlink" title="CPU的选择"></a>CPU的选择</h3><p>电脑的CPU就相当于人的大脑，现在市面上的CPU主要分为两大阵营，分别是Intel（英特尔）和 AMD ，性能都是以产品型号来区分。</p><p>玩游戏的话，至少选择4核以上的，i5-6代以上的都是4核的，选购时注意一下。</p><p>CPU还有一个重要的参数：CPU主频,单位是兆赫（MHz）或千兆赫（GHz），用来表示CPU的运算、处理数据的速度。通常，主频越高，CPU处理数据的速度就越快。我们选择CPU最好选择2.0GHZ以上的，越大越好。</p><p>CPU参数解读图</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=2130559338,3838269846&fm=173&app=25&f=JPEG?w=558&h=291&s=C902C41A8FD04DC8426528DB010010B2"  alt></p><p>经常看见很多超薄本大吹自己用了 i7 的处理器，可到头来性能却不敌一个装了 i3 的台式机，原因就在最后跟的字母上面。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3548825333,147474063&fm=173&app=25&f=JPEG?w=515&h=451&s=6194EC33411E45CE4C54A0DA0000C0B3"  alt></p><h3 id="显卡的选择"><a href="#显卡的选择" class="headerlink" title="显卡的选择"></a>显卡的选择</h3><p>显卡主要的功能就是画面的渲染，一般不玩游戏的用户，集成显卡已足够使用了。对于游戏玩家、设计和开发的用户，选购独立显卡就很重要了，首先要确定自己的主板上有独立显卡相对应的显卡扩展插槽，主板有PCI,AGP,PCI-E三种扩展插槽。现在新出的主板，几乎完全是PCI-E的插槽的，另外需要注意以下参数：<br><img src="/img/loading.gif" class="lazyload" data-src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=2898893439,3648526149&fm=173&app=25&f=JPEG?w=558&h=335&s=00B6E833CDCA5CCA4A4184DB0000C0B3"  alt></p><p><img src="/img/loading.gif" class="lazyload" data-src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=689705162,632691153&fm=173&app=25&f=JPEG?w=558&h=344&s=20B6E8334B507CCA5E4194CB000050B1"  alt></p><h3 id="内存条的选择"><a href="#内存条的选择" class="headerlink" title="内存条的选择"></a>内存条的选择</h3><p>内存条主要作用是临时存放CPU的运算数据，以及与硬盘等外部存储器交换的数据。内存条的大小直接关系到系统运行以及应用程序快慢，一般建议选择8G以上的，毕竟内存越大，运行速度越快。<br><img src="/img/loading.gif" class="lazyload" data-src="https://ss0.baidu.com/6ONWsjip0QIZ8tyhnq/it/u=1189508832,2129396602&fm=173&app=25&f=JPEG?w=558&h=317&s=4AAC3C620D585CC84E4170D70000F0B1"  alt></p><h3 id="硬盘的选择"><a href="#硬盘的选择" class="headerlink" title="硬盘的选择"></a>硬盘的选择</h3><p>硬盘大体可以分为机械硬盘和固态硬盘。机械硬盘读写速度慢、比较笨重，但价格便宜，适用于存放较多文件；固态硬盘读写速度快，又轻又小，但价格很贵，适用于多系统安装，保证开机速度。如果你的目标不是游戏本那样追求极致运算性能，而是一台轻巧便携、开机速度又快的超极本，那么固态硬盘一定是首选。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1749318695,3167737785&fm=173&app=25&f=JPEG?w=558&h=317&s=0DA874324B507CC84AD554CB0000D0B1"  alt></p><h3 id="电脑品牌简介"><a href="#电脑品牌简介" class="headerlink" title="电脑品牌简介"></a>电脑品牌简介</h3><p>（01）苹果</p><p>苹果为全球高端电脑与音视频便携媒体制造商，是世界十大笔记本电脑品牌。pc机之外的“世外高人”，苹果公司等于精简的ibm加上精简的微软。</p><p>（02）联想</p><p>联想是一家营业额达340亿美元的个人科技产品公司，是全球第一大个人电脑厂商之一，也是pc+产品领域新晋领导厂商。2013年，联想电脑销售量升居世界第一，成为全球最大的pc生产厂商。</p><p>（03）华硕</p><p>华硕电脑股份有限公司是全球领先的3c解决方案提供商，致力于为个人和企业用户提供最具创新价值的产品及应用方案。其中显卡和主板以及笔记本电脑三大产品已经成为华硕的主要竞争实力。</p><p>（04）索尼</p><p>索尼公司推出第一款笔记本电脑以来，以其时尚的外观设计与独特的使用体验在用户和业界中一直获得高度的认可。vaio产品线丰富，经典机型层出不穷，广泛覆盖便携商务，炫彩时尚与家庭娱乐等领域，是业界时尚与科技的引领者与标杆。</p><p>（05）thinkpad</p><p>原ibm旗下便携式电脑品牌由联想收购，全球商用笔记本市场销量领先品牌，全球最具价值品牌之一，后被联想收购。thinkpad自问世以来一直保持着黑色的经典外观并对技术有着自己独到的见解。</p><p>（06）惠普</p><p>惠普一家来自美国的资讯科技公司，成立于1939年，主要专注于生产打印机、数码影像、软件、计算机与资讯服务等业务。即便是在同等配置i5的情况下，没有带固态惠普也比带着固态的dell或者lenovo强得多，比如电脑运行流畅度，以及最直观的开机速度。</p><p>（07）戴尔</p><p>戴尔(中国)有限公司，pc电脑十大品牌，笔记本电脑十大品牌，全球最大的直销个人电脑公司。戴尔之所以能够不断巩固其市场领先地位，是因其一贯坚持直接销售基于标准的计算产品和服务，并提供最佳的客户体验。</p><p>（08）宏碁</p><p>宏碁以高性价比著称，秉持“创新关怀”的企业理念，主要从事自主品牌的笔记本电脑、台式机、液晶显示器、服务器及数字家庭等产品的研发、设计、行销与服务，持续提供全球消费者易用、可靠的资讯产品。</p><p>（09）三星</p><p>韩国三星集团是集电子、机械、化工、金融及贸易服务为一体的集团，全球消费电子领域龙头企业。三星笔记本的型号比较多，能够满足各种用户的选择，每一款笔记本都有自己独特的功能，所以大家可以根据自己的实际选择购买。</p><p>（10）神州</p><p>以电脑技术开发为核心，集研发、生产、销售为一体的高科技企业。在11年的时间里，神舟电脑走过了一条从创立自有品牌的电脑整机，到实现自主研发生产高性能笔记本电脑、台式电脑、屏式电脑、平板电脑、液晶显示器和智能电视及其周边设备的发展之路。</p>]]></content>
      
      
      <categories>
          
          <category> 购机小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 选购 </tag>
            
            <tag> 数码产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站搭建</title>
      <link href="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Gitee免费部署静态网站"><a href="#Gitee免费部署静态网站" class="headerlink" title="Gitee免费部署静态网站"></a>Gitee免费部署静态网站</h2><p>  码云 Pages 是一个免费的静态网页托管服务，您可以使用 码云 Pages 托管博客、项目官网等静态网页。<br>搭建过程中会使用到GIT，需要先<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">下载git</a></p><h3 id="登录Gitee后点击新建仓库"><a href="#登录Gitee后点击新建仓库" class="headerlink" title="登录Gitee后点击新建仓库"></a>登录Gitee后点击新建仓库</h3><p>点击右上角 + 号，选择“新建仓库”<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/001.gif"  alt></p><p>私有：别人无法查看你创建的私有仓库</p><p>公开：所有人都能够查看你创建的仓库并且能够下载源码</p><p>（因为已经创建过了，所以会提示仓库名已存在）<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/002.gif"  alt><br>点击创建，完成第一个gitee仓库的创建。</p><h3 id="下载仓库到本地"><a href="#下载仓库到本地" class="headerlink" title="下载仓库到本地"></a>下载仓库到本地</h3><p>点击 “克隆/下载按钮” 并且复制链接</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/003.gif"  alt></p><h3 id="在本地磁盘创建一个目录"><a href="#在本地磁盘创建一个目录" class="headerlink" title="在本地磁盘创建一个目录"></a>在本地磁盘创建一个目录</h3><p>右击刚创建好的目录，选择Git Bash Here（右键没有出现 Gti Bash Here 表明还没有安装git）<br><img src="/img/loading.gif" class="lazyload" data-src="https://img-blog.csdnimg.cn/20190830164148638.png"  alt><br>输入”git clone 复制的链接” 然后回车执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;xiaokangpp&#x2F;blog.git</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/004.gif"  alt><br>克隆好之后，会生成一个仓库名的文件夹，打开文件夹把提前编辑好的网站代码放进去</p><p>继续输入命令,进到仓库名称的文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 仓库名称</span><br></pre></td></tr></table></figure><p>将编辑好的网站代码和文件添加到.git本地仓库缓存中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure><p>正式提交代码文件到本地仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;个人主页&quot;</span><br></pre></td></tr></table></figure><p>上传到gitee创建好的远程仓库<br>第一次上传需要加上-u origin master，后面再次编辑上传直接git push即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>在输入git命令的过程中会提示输入gitee账号和密码，按照提示输入gitee账户以及用户名即可</p><p>到此时，我们所有的文件便都上传到了gitee仓库中</p><h3 id="启动更新"><a href="#启动更新" class="headerlink" title="启动更新"></a>启动更新</h3><p>刷新当前页面，点击 “服务”按钮，选择 “Gitee Pages”<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/005.gif"  alt></p><p>点击 “启动” 按钮（由于我之前发布过，所以此时为更新按钮），等待网站部署之后，在网站地址处（如下图）会显示当前主页网址，点击即可进行访问。<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/09/10/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/006.gif"  alt></p><p>以上操作都完成之后，点击<a href="https://xiaokangpp.gitee.io/blog/OnlyI.html" target="_blank" rel="noopener">我的网页</a>即可快速访问啦哈哈哈，相比部署在github上又快又简单！<br><code color="red">注意：每次编辑代码上传到远程仓库后，还需要点击“更新”按钮网页才会变化，和github有点点不同。</code></p><h3 id="更换域名"><a href="#更换域名" class="headerlink" title="更换域名"></a>更换域名</h3><p>想要将github上面的二级域名panyongkang.github.io更换成自定义的域名，首先要申请一个免费的域名。</p><p>具体申请域名请查看：<a href="https://iyideng.me/welfare/freenom-free-domain-register.html" target="_blank" rel="noopener">一灯不是和尚 </a>的教程 ,下面叙述是对该教程的一些补充。</p><ol><li><p>获取免费域名网站：<a href="https://www.freenom.com/zh/index.html?lang=zh" target="_blank" rel="noopener">Freenow</a></p></li><li><p>域名解析DNS加速网站：<a href="https://dash.cloudflare.com/login" target="_blank" rel="noopener">Cloudflare</a> </p><p>因为freenow申请的域名服务器网站是国外的，可能访问网速比较慢，所以需要更换为Cloudflare的服务器。在Cloudflare中添加记录时，需要填入IPv4 address，就是你的服务器ip地址，如果没有购买自己的服务器，可以暂时填入github的ip地址，接着只需要找到Github Pages的IP地址，这个好办，打开<code>cmd</code>窗口。</p><p>输入<code>ping xxx.github.io</code>xxx是你的Github用户名。</p><p>找到了IP地址后，再将这个IP地址填入到之前DNS解析的Target里面，点击保存。</p></li><li><p>保存后需要等待一会（大概30分钟左右），如果你注册的邮箱收到短信，就可以在cmd中 ping+你的免费域名，如果出现和邮箱中提示的ip地址相同，说明域名已经解析成功了，这时候就可以到github中设置你的域名了。</p></li><li><p>到你的Github仓库中点击Settings。向下翻找到Custom domain，输入刚才申请的域名如<code>www.xyym.cf</code>，点击保存。下面那个HTTPS证书会在你保存域名后自动帮你申请，不过可能最长需要24小时才能申请成功。</p><p>如果上面的步骤都完成后，等待一会，在浏览器的地址栏输入新增域名 <a href="http://www.xyym.cf" target="_blank" rel="noopener">www.xyym.cf</a> ，应该就可以跳转到你的博客页面了。</p></li></ol><h4 id="将http访问转为https访问"><a href="#将http访问转为https访问" class="headerlink" title="将http访问转为https访问"></a>将http访问转为https访问</h4><p>使用Cloudflare解析域名成功，虽然可以在博客上使用，但访问会提示“不安全”，我们可以登录Cloudflare选择“页面规则”》创建页面规则》设置为“始终使用HTTPS》点击”保存并部署“，配置生效可能有时间延迟，重新刷新访问博客就可以显示”连接是安全的“了。</p><h4 id="问题及解决方案"><a href="#问题及解决方案" class="headerlink" title="问题及解决方案"></a>问题及解决方案</h4><p>问题：在Github设置好自定义域名后，远程仓库会生成一个CNAME文件，里面保存的就是域名。由于本地没有这个CNAME文件，直接Hexo d 部署上传会把CNAME文件删除掉，导致每次上传域名会失效。</p><p>解决办法：设置好域名的同时，先在本地仓库的source文件夹下创建一个无后缀名的CNAME文件，写上域名。然后再重新hexo g &amp;&amp; hexo d 就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> 网站搭建手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站部署 </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>银行卡业务</title>
      <link href="/2020/07/10/%E9%93%B6%E8%A1%8C%E5%8D%A1%E4%B8%9A%E5%8A%A1/"/>
      <url>/2020/07/10/%E9%93%B6%E8%A1%8C%E5%8D%A1%E4%B8%9A%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">您好，本篇文章需密码访问，请谅解！</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
      
      <categories>
          
          <category> 工作笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 银行卡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活小常识</title>
      <link href="/2020/06/25/%E7%94%9F%E6%B4%BB%E5%B0%8F%E5%B8%B8%E8%AF%86/"/>
      <url>/2020/06/25/%E7%94%9F%E6%B4%BB%E5%B0%8F%E5%B8%B8%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><b style="color:blue">人只有在不断尝试失败的过程中才能快速成长</b>,<b style="color:#c00040">以下是博主在日常生活中的掉坑总结</b>，<b style="color:#009ad6">希望后面的人不要掉队，同时避免无意义的踩坑</b> 。。。</p><hr><h2 id="更换内存条"><a href="#更换内存条" class="headerlink" title="更换内存条"></a><code style="color:green">更换内存条</code></h2><blockquote><pre><code>大家都知道电脑一旦使用久了会变得很卡或者电脑散热性能下降，想换电脑吧又没钱，而且电脑已经安装了很多重要的软件，换了电脑还要考虑重装很不方便，如何快速给电脑满血复活呢？这时可以考虑给电脑换一个大一点的运行内存，当然有条件的可以再加一个固态硬盘。博主笔记本是联想的，原先的运行内存只有4G,一般人使用肯定足够了，不过无奈博主没事喜欢瞎折腾，胡乱安装各种奇葩盗版软件，导致电脑不堪重负，压力山大呀！又穷又苦逼的博主肯定不会送到厂家去修啦，可以在网上买个两三百块的内存条，自己手动装上再重启，电脑蹭蹭满血复活，还是原来的味道！嘻嘻！</code></pre><p>   但是，博主在购买的过程中犯了一个小错误，DDR3是标压内存，DDR3L是低压内存，博主电脑原装是DDR3低压版的，当初懒得下载鲁大师检测，本来以为直接看任务管理器的内存类型是DDR3就可以买了，但上天给博主开了一个小玩笑，原装的内存条居然是三星牌子DDR3L类型的，买回来的联想牌子DDR3内存条和三星DDR3L内存条不兼容，导致无法使用，又退回去换成DDR3L类型的，所以买之前一定要用鲁大师检测一下，最好买同一类型的内存条组成双通道，这样速度会更快，就能避免这种尴尬的情况发生啦。。。</p></blockquote><h2 id="更换固态硬盘"><a href="#更换固态硬盘" class="headerlink" title="更换固态硬盘"></a><code style="color:green">更换固态硬盘</code></h2><p>记录一下血的教训，引以为戒吧！</p><p>电脑硬盘损坏的原因是之前一直在下载大量数据文件，再加上开启多个软件编辑代码保存的时候卡死，连任务管理器也打不开，最后强制非法关机，拔掉电源，听到电脑硬盘的针头哗哗作响，造成物理坏道损坏，导致机械硬盘损坏，开机黑屏无法进入系统。之前以为做了系统还原备份就可以了，没想到防不胜防，以后还是不要非法关机了。只能送到维修店换成了固态硬盘，重装了系统就好了。但很多软件需要重装很麻烦，还是提前做好数据备份吧。 </p><h2 id="购买手机"><a href="#购买手机" class="headerlink" title="购买手机"></a><code style="color:green">购买手机</code></h2><blockquote><p>   回忆博主在上学的时候，分期花费1500多买的4+32G荣耀V8系列手机，以前买的手机都是1500左右的，但老是购买到使用不久就开始掉链子，性价比不高的产品，不是内存不足导致的手机卡顿就是电池容易产生虚电，荣耀V8用久了有时候50%的电量直接关机了，做了补电处理也无济于事，这样下去很容易让博主对荣耀系列的手机产生心理阴影滴。只怪博主年少无知，买手机之前不做任何攻略，因此导致这样不愉快的情况发生。<br>吸取教训后，在换购手机之前一定记得做好性价比攻略，追求物美价廉一贯是博主的信仰啦！可以上<a href="http://mobile.zol.com.cn/" target="_blank" rel="noopener">中关村在线</a>搜索喜欢的手机进行对比，然后就可以选择自己心仪的手机对象啦！<br>给大家推荐一款目前来说性价比很高的手机，<a href="http://detail.zol.com.cn/cell_phone/index1318065.shtml?t=1346&v=26129" target="_blank" rel="noopener">荣耀Play4T Pro手机</a>，购买下来不到1500元，实力碾压博主之前购买的劣质产品，当然也可以与其他品牌的手机去对比，毕竟博主还是支持国产，支持华为滴，嘻嘻！</p></blockquote><h2 id="选择洗发水"><a href="#选择洗发水" class="headerlink" title="选择洗发水"></a><code style="color:green">选择洗发水</code></h2><blockquote><p>给大家推荐一款洗发水，由于博主临近毕业之前，忙于毕业设计和实习工作等各种糟心的压力，导致有段时间就开始疯狂掉头发，一个菜鸟工程师怎么能提前掉头发呢？这完全不符合菜鸟工程师该有的身份嘛！因此，选择一款好用又见效的防脱发洗发水很重要啦！大家可以点击<a href="https://detail.tmall.com/item.htm?spm=a230r.1.14.6.46903d4eNS3D3q&id=619366836671&cm_id=140105335569ed55e27b&abbucket=9" target="_blank" rel="noopener">三个魔发匠</a>生姜洗发水查看，毕竟不贵且耐用，经过博主考验的产品一定不会差啦！博主已经持续回购好几次啦，也可以购买一些护发素进行护理，但博主就这几根头发能长下去就不错了，护理就算了哈哈。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 黑技能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Oracle</title>
      <link href="/2020/06/02/Oracle/"/>
      <url>/2020/06/02/Oracle/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Oracle安装"><a href="#Oracle安装" class="headerlink" title="Oracle安装"></a>Oracle安装</h2><p><a href="https://pan.baidu.com/s/1ZP8hm1so44DllaZj3sdndg" target="_blank" rel="noopener">下载链接</a><br>提取码：ac8c</p><p><a href="https://blog.csdn.net/Feng_xiaoqi/article/details/88780749" target="_blank" rel="noopener">安装参考</a></p><h3 id="口令管理"><a href="#口令管理" class="headerlink" title="口令管理"></a>口令管理</h3><p>数据库创建完毕后，在默认的用户中，SYS和SYSTEM用户没有锁定，安装成功后可以直接使用，SCOTT用户默认是锁定的，需要把SCOTT用户解锁才能正常使用。</p><h2 id="SQL-Plus命令行工具"><a href="#SQL-Plus命令行工具" class="headerlink" title="SQL*Plus命令行工具"></a>SQL*Plus命令行工具</h2><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>该命令行工具，提供了与数据库交互的能力和维护数据库的能力，包括了Oracle自带的SQL*Plus工具的全部功能，在Oracle管理中经常使用。</p><ul><li>启动该工具：在命令输入 sqlplus/nolog</li><li>与Oracle服务器连接：conn 用户名/密码 as 连接身份@服务器连接字符串<br>例如：conn scott/scott@localhost:1521/orcl  </li></ul><p><a href="https://blog.csdn.net/czh500/article/details/90449467" target="_blank" rel="noopener">详情参考</a></p><h3 id="Oracle连接身份"><a href="#Oracle连接身份" class="headerlink" title="Oracle连接身份"></a>Oracle连接身份</h3><ol><li><p>“sysdba” 即数据库管理员,权限有:打开数据库服务器;关闭数据库服务器;备份数据库;恢复数据库;日志归档;会话限制;管理功能;创建数据库;</p></li><li><p>“sysyoper”即数据库操作员,权限包括:打开数据库服务器;关闭数据库服务器;备份数据库;恢复数据库;日志归档;会话限制;</p></li><li><p>“normal”即普通用户,权限只有查询某些数据表的数据;</p></li><li><p>SYS和SYSTEM 是每个ORACLE 数据库系统缺省安装的两个帐户。</p><ul><li>SYS 是所有内部数据库表、结构、过程包、等拥有者，此外它还拥有 V$ 和数据字典视图，并创建所有封装的数据库角色(DBA，CONNECT，RESOURCE)。Sys是一个唯一能访问特定内部数据字典的用户。</li><li>System 也是在安装ORACLE 时创建的用户，用于 DBA 任务的管理。</li></ul></li></ol><h3 id="使用出错记录"><a href="#使用出错记录" class="headerlink" title="使用出错记录"></a>使用出错记录</h3><ol><li>ORA-12560TNS:协议适配器错误<br>原因：服务没开<br>处理办法：需启动OracleOraDb11g_home1TNSlistener和启动OracleServiceORCL两个服务。  </li><li>ORA-01017: invalid username/password; logon denied<br>原因：密码输入不正确<br>用户名:system   密码:manager<br>用户名:sys     密码:change_on_install </li></ol><p>处理办法：密码口令输入方式 ：密码 as sysdba  </p><h2 id="Oracle用户和权限"><a href="#Oracle用户和权限" class="headerlink" title="Oracle用户和权限"></a>Oracle用户和权限</h2><p>创建用户语法：create user 用户名 identified by 口令 account lock|unlock;  </p><p>例如：创建一个用户tom,密码是tompassword(密码不能使用数字开头，因为oracle需要转成大写），默认非锁定。  </p><p>语句为：create user tom identified by tompassword account unlock;</p><p>创建好用户，还需要把权限和角色授予用户，一般情况下，一个普通用户scott，拥有connect和resource两个角色即可进行常规的数据库开发工作。系统权限只能由DBA用户授权，对象授权由拥有该对象的用户授权。  </p><p>授权语法：grant 角色|权限 to 用户（角色）<br>例如：给tom用户授权connect和resource<br>语句：<br>grant connect to tom;<br>grant resource to tom;  </p><p>回收权限语法：revoke 角色|权限 from 用户（角色）</p><p>修改用户的密码语法：alter user 用户名 identified by 新密码</p><p>修改用户处于锁定（非锁定）状态：alter user 用户名 account lock|unlock;</p><h2 id="数据操作与查询"><a href="#数据操作与查询" class="headerlink" title="数据操作与查询"></a>数据操作与查询</h2><h3 id="SQL命令组成"><a href="#SQL命令组成" class="headerlink" title="SQL命令组成"></a>SQL命令组成</h3><ol><li>数据定义语言（DDL）：包括create（创建）、alter(修改）和drop命令等</li><li>数据操纵语言（DML）:包括insert(插入）、updata(更新）、delete（删除）和select… for updata（查询）等。</li><li>事务控制语言（TCL）:包括commit（提交）命令、savepoint（保存点）命令、rollback（回滚）命令。</li><li>数据查询语言（DQL）:包括基本查询语句、Order By 子句、Group By 子句等。</li><li>数据控制语言（DCL），grant（授权）命令、revoke（撤销）命令。</li></ol><h3 id="数据定义语言（DDL）"><a href="#数据定义语言（DDL）" class="headerlink" title="数据定义语言（DDL）"></a>数据定义语言（DDL）</h3><p>数据库操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">-- 日期类型</span><br><span class="line">--DATE 存储日期和时间</span><br><span class="line">--TIMESTAMP 存储日期的年月日，时分秒，以及秒后6 位，同时包含时区。</span><br><span class="line">--sysdate内置函数可以获取当前的系统日期和时间，返回DATE类型</span><br><span class="line">--用systimestamp函数可以返回当前日期、时间和时区。</span><br><span class="line"></span><br><span class="line">--查询系统当前日期</span><br><span class="line">SELECT SYSDATE,SYSTIMESTAMP FROM DUAL</span><br><span class="line"></span><br><span class="line">--创建表和约束</span><br><span class="line">--Oracle 创建表使用CREATE TABLE 命令。</span><br><span class="line">--创建约束使用命令：ALTER TABLE 表名 ADD CONSTRAINT 约束名 约束内容。</span><br><span class="line"></span><br><span class="line">--删除表数据和结构</span><br><span class="line">drop table infos;</span><br><span class="line"></span><br><span class="line">--创建infos表和约束</span><br><span class="line">CREATE TABLE INFOS</span><br><span class="line">(</span><br><span class="line">STUID VARCHAR2(7) NOT NULL, --学号 学号&#x3D;‘S’+班号+2位序号</span><br><span class="line">STUNAME VARCHAR2(10) NOT NULL, --姓名</span><br><span class="line">GENDER VARCHAR2(4) NOT NULL, --性别</span><br><span class="line">AGE NUMBER(2) NOT NULL, --年龄</span><br><span class="line">SEAT NUMBER(2) NOT NULL, --座号</span><br><span class="line">ENROLLDATE DATE, --入学时间</span><br><span class="line">STUADDRESS VARCHAR2(50) DEFAULT &#39;地址不详&#39;, --住址</span><br><span class="line">CLASSNO VARCHAR2(4) NOT NULL --班号 班号&#x3D;学期序号+班级序号</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">--添加主键约束</span><br><span class="line">alter table infos add constraint pk_infos primary key(stuid)</span><br><span class="line"></span><br><span class="line">--检查性别是男或女</span><br><span class="line">ALTER TABLE INFOS ADD CONSTRAINT CK_INFOS_GENDER</span><br><span class="line">CHECK(GENDER &#x3D; &#39;男&#39; OR GENDER &#x3D; &#39;女&#39;)</span><br><span class="line"></span><br><span class="line">--检查座号要大于等于0，且小于等于50</span><br><span class="line">ALTER TABLE INFOS ADD CONSTRAINT CK_INFOS_SEAT</span><br><span class="line">CHECK(SEAT &gt;&#x3D;0 AND SEAT &lt;&#x3D;50)</span><br><span class="line"></span><br><span class="line">--检查年龄在0~100之间</span><br><span class="line">ALTER TABLE INFOS ADD CONSTRAINT CK_INFOS_AGE</span><br><span class="line">CHECK(AGE &gt;&#x3D;0 AND AGE&lt;&#x3D;100)</span><br><span class="line"></span><br><span class="line">--检查班号在1001~1999或在2001~2999之间</span><br><span class="line">ALTER TABLE INFOS ADD CONSTRAINT CK_INFOS_CLASSNO</span><br><span class="line">CHECK((CLASSNO &gt;&#x3D;&#39;1001&#39; AND CLASSNO&lt;&#x3D;&#39;1999&#39;) OR</span><br><span class="line">(CLASSNO &gt;&#x3D;&#39;2001&#39; AND CLASSNO&lt;&#x3D;&#39;2999&#39;))</span><br><span class="line"></span><br><span class="line">--为姓名指定唯一约束UNIQUE</span><br><span class="line">ALTER TABLE INFOS ADD CONSTRAINTS UN_STUNAME UNIQUE(STUNAME)</span><br></pre></td></tr></table></figure><h3 id="数据操纵语言（DML）"><a href="#数据操纵语言（DML）" class="headerlink" title="数据操纵语言（DML）"></a>数据操纵语言（DML）</h3><p>插入数据的语法为：  </p><p>INSERT INTO 表名(列名1，列名2……) VALUES (值1，值2……)</p><p>查询数据的语法是：</p><p>SELECT * |列名|表达式 FROM 表名 WHERE 条件 ORDER BY 列名</p><p>更新数据的语法是：</p><p>UPDATE 表名 SET 列名1=值，列名2=值…… WHERE 条件</p><p>删除数据的语法是：</p><p>DELETE FROM 表名 WHERE 条件</p><p>删除表中所有数据语法：  </p><p>TRUNCATE TABLE 表名</p><p>truncate 和delete都能把表中的数据全部删除，他们的区别是：  </p><ol><li><p>truncate是DDL命令,删除的数据不能恢复；DELETE 命令是DML 命令，删除后的数据可以通过日志文件恢复。</p></li><li><p>如果一个表中数据记录很多，truncate相对delete速度快。</p></li></ol><p>由于truncate命令比较危险，因此在实际开发中，truncate命令慎用。</p><p>一般而言，drop &gt; truncate &gt; delete  </p><ol><li><p>truncate只能对table,delete可以是table和view</p></li><li><p>truncate 和delete只删除数据,drop则删除整个表（结构和数据）。</p></li></ol><p>数据库操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--插入语句</span><br><span class="line">insert into infos(STUID,STUNAME,GENDER,AGE,SEAT,ENROLLDATE,STUADDRESS,CLASSNO) values(&#39;1005&#39;,&#39;李4&#39;,&#39;男&#39;,12,25,TO_DATE(&#39;2009-8-9 06:30:10&#39;,&#39; YYYY-MM-DD HH24:MI:SS &#39;) ,default ,&#39;1995&#39;)</span><br><span class="line"></span><br><span class="line">--简单查询</span><br><span class="line">--ordery by 默认是升序asc,降序为desc</span><br><span class="line">select stuname,gender,age,stuaddress from infos where gender&#x3D;&#39;男&#39; order by age;</span><br><span class="line"></span><br><span class="line">--更新数据</span><br><span class="line">update infos set gender&#x3D;&#39;女&#39;,age&#x3D;&#39;18&#39; where stuname&#x3D;&#39;李2&#39;</span><br><span class="line">update infos set age&#x3D;&#39;27&#39;,STUADDRESS&#x3D;&#39;贵州贵阳&#39;,gender&#x3D;&#39;男&#39;,CLASSNO&#x3D;&#39;1278&#39; where stuname&#x3D;&#39;李1&#39;</span><br><span class="line"></span><br><span class="line">--删除数据</span><br><span class="line">delete from infos where STUNAME&#x3D;&#39;李白&#39;</span><br><span class="line"></span><br><span class="line">-- 一次性删除表数据，保留表结构</span><br><span class="line">truncate table infos</span><br><span class="line"></span><br><span class="line">-完全删除表数据和结构</span><br><span class="line">drop table infos</span><br></pre></td></tr></table></figure><h3 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">--消除重复行查询</span><br><span class="line">SELECT DISTINCT DEPTNO FROM EMP;</span><br><span class="line"></span><br><span class="line">--NULL值查询</span><br><span class="line">--NULL 值用 IS NULL 作条件，非 NULL 值用IS NOT NULL 做条件</span><br><span class="line">SELECT ENAME,JOB,SAL,COMM FROM EMP WHERE SAL&lt;2000 AND COMM IS NOT NULL;</span><br><span class="line"></span><br><span class="line">--IN和OR操作，下面查询结果是一样的</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP Where job&#x3D; &#39;SALESMAN&#39; or job&#x3D; &#39;PRESIDENT&#39; or job&#x3D; &#39;ANALYST&#39;</span><br><span class="line"></span><br><span class="line">--还可以使用not in 条件</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP Where job in (&#39;SALESMAN&#39;, &#39;PRESIDENT&#39;, &#39;ANALYST&#39;)</span><br><span class="line"></span><br><span class="line">--between..and..</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP WHERE SAL BETWEEN 1000 AND 2000;</span><br><span class="line"></span><br><span class="line">--LIKE 模糊查询</span><br><span class="line">-- %：表示零个或者多个任意字符。</span><br><span class="line">-- _：代表一个任意字符。</span><br><span class="line"></span><br><span class="line">--显示员工名称以J 开头以S 结尾的员工的姓名、工作和工资。</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP WHERE ENAME LIKE &#39;J%S&#39;;</span><br><span class="line"></span><br><span class="line">--内连接一般写法</span><br><span class="line">SELECT e.ENAME,e.JOB,e.SAL,d.DNAME</span><br><span class="line">FROM EMP e,DEPT d</span><br><span class="line">WHERE e.DEPTNO&#x3D;d.DEPTNO</span><br><span class="line">AND e.SAL&gt;2000</span><br><span class="line"></span><br><span class="line">--内连接inner join on,INNER 可以省略。</span><br><span class="line">SELECT e.ENAME,e.JOB,e.SAL,d.DNAME</span><br><span class="line">FROM EMP e INNER JOIN DEPT d ON e.DEPTNO&#x3D;d.DEPTNO</span><br><span class="line">WHERE e.SAL&gt;2000</span><br><span class="line"></span><br><span class="line">--右外连接right outer join on,OUTER 可以省略</span><br><span class="line">SELECT e.ENAME,e.JOB,e.SAL,d.DNAME</span><br><span class="line">FROM EMP e RIGHT OUTER JOIN DEPT d ON e.DEPTNO&#x3D;d.DEPTNO</span><br><span class="line"></span><br><span class="line">-- 子查询操作</span><br><span class="line">-- 子查询的类型有：</span><br><span class="line">-- 1. 单行子查询：不向外部返回结果，或者只返回一行结果。</span><br><span class="line">-- 2. 多行子查询：向外部返回零行、一行或者多行结果。</span><br><span class="line"></span><br><span class="line">-- 查询出销售部（SALES）下面的员工姓名，工作，工资。</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP</span><br><span class="line">WHERE DEPTNO&#x3D;(SELECT DEPTNO FROM DEPT WHERE DNAME&#x3D;&#39;SALES&#39;)</span><br><span class="line"></span><br><span class="line">-- &lt;any:比子查询结果中任意的值都小，也就是说，比子查询结果中最大值还小，那么同</span><br><span class="line">-- 理&gt;any 表示比子查询结果中最小的还大。</span><br><span class="line"></span><br><span class="line">-- 查询出Emp表中比任意一个销售员(“SALESMAN”)工资低的员工姓名、工作、工资。</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP</span><br><span class="line">WHERE SAL&lt;ANY (SELECT SAL FROM EMP WHERE JOB&#x3D;&#39;SALESMAN&#39;)</span><br><span class="line"></span><br><span class="line">-- 查询出比所有销售员的工资都高的员工姓名，工作，工资。</span><br><span class="line">SELECT ENAME,JOB,SAL FROM EMP</span><br><span class="line">WHERE SAL&gt;ALL (SELECT SAL FROM EMP WHERE JOB&#x3D;&#39;SALESMAN&#39;)</span><br><span class="line"></span><br><span class="line">-- 聚合查询</span><br><span class="line">-- 查询出工资最高、最低、平均工资、总工资、员工人数</span><br><span class="line">SELECT max(sal),min(sal),avg(sal),sum(sal),count(sal) from emp</span><br></pre></td></tr></table></figure><h3 id="Oracle中的伪列"><a href="#Oracle中的伪列" class="headerlink" title="Oracle中的伪列"></a>Oracle中的伪列</h3><p>伪列就像表中的列一样，但是在表中并不存储。伪列只能查询，不能进行增删改操作。</p><p>伪列ROWID和ROWNUM区别：  </p><p>ROWNUM 与ROWID 不同，ROWID 是插入记录时生成，ROWNUM 是查询数据<br>时生成。ROWID 标识的是行的物理地址。ROWNUM 标识的是查询结果中的行<br>的次序。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- Oracle 中的伪列</span><br><span class="line">-- 查询ROWID</span><br><span class="line">SELECT ROWID,ENAME FROM EMP WHERE SAL&gt;2000;</span><br><span class="line"></span><br><span class="line">--伪列ROWNUM</span><br><span class="line">SELECT ROWNUM,ENAME,JOB,SAL FROM EMP WHERE ROWNUM&lt;&#x3D;5;</span><br></pre></td></tr></table></figure><h3 id="序列的创建"><a href="#序列的创建" class="headerlink" title="序列的创建"></a>序列的创建</h3><p><strong>什么是序列</strong></p><p>Sequence（序列）是oracle用来生成连续的整数数据的对象。由于oracle中没有设置自增列的方法，所以在oracle数据库中主要用序列来实现主键自增的功能。</p><p><strong>创建序列的语法</strong></p><pre><code>CREATE SEQUENCE sequence //创建序列名称[INCREMENT BY n] //递增的序列值是 n 如果 n 是正数就递增,如果是负数就递减 默认是 1[START WITH n] //开始的值,递增默认是 minvalue 递减是 maxvalue[{MAXVALUE n | NOMAXVALUE}] //最大值  [{MINVALUE n | NOMINVALUE}] //最小值[{CYCLE | NOCYCLE}] //循环/不循环[{CACHE n | NOCACHE}];//分配并存入到内存中</code></pre><p>数据库操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">--创建序列</span><br><span class="line">-- 创建一个从1 开始，默认最大值，每次增长1 的序列，要求NOCYCLE，缓存中有30 个预先分配好的序列号。</span><br><span class="line"></span><br><span class="line">CREATE SEQUENCE MYSEQ</span><br><span class="line">MINVALUE 1</span><br><span class="line">START WITH 1</span><br><span class="line">NOMAXVALUE</span><br><span class="line">INCREMENT BY 1</span><br><span class="line">NOCYCLE</span><br><span class="line">CACHE 30</span><br><span class="line"></span><br><span class="line">-- 序列创建之后，通过序列对象的CURRVAL和NEXTVAL两个“伪列”分别访问该序列的当前值和下一个值。</span><br><span class="line"></span><br><span class="line">--每运行一次查询下一个值</span><br><span class="line">SELECT MYSEQ.NEXTVAL FROM DUAL;</span><br><span class="line">NEXTVAL</span><br><span class="line"></span><br><span class="line">--查询当前值</span><br><span class="line">SELECT MYSEQ.CURRVAL FROM DUAL;</span><br><span class="line">CURRVAL</span><br><span class="line"></span><br><span class="line">-- 插入数据时使用序列</span><br><span class="line">insert into infos(STUID,STUNAME,GENDER,AGE,SEAT,CLASSNO) values(MYSEQ.NEXTVAL, &#39;序列&#39;,&#39;女&#39;,23,26,&#39;1001&#39;);</span><br><span class="line">insert into infos(STUID,STUNAME,GENDER,AGE,SEAT,CLASSNO) values(MYSEQ.NEXTVAL, &#39;序列2&#39;,&#39;女&#39;,23,26,&#39;1005&#39;);</span><br><span class="line">insert into infos(STUID,STUNAME,GENDER,AGE,SEAT,CLASSNO) values(MYSEQ.NEXTVAL, &#39;序列3&#39;,&#39;女&#39;,23,26,&#39;1006&#39;);</span><br></pre></td></tr></table></figure><h2 id="更多入门教程"><a href="#更多入门教程" class="headerlink" title="更多入门教程"></a>更多入门教程</h2><p><a href="https://blog.csdn.net/qq_42589612/article/details/80943957" target="_blank" rel="noopener">详情参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Xshell</title>
      <link href="/2020/06/01/Xshell/"/>
      <url>/2020/06/01/Xshell/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Xshell常用命令整理"><a href="#Xshell常用命令整理" class="headerlink" title="Xshell常用命令整理"></a>Xshell常用命令整理</h2><h3 id="命令cd——更改目录"><a href="#命令cd——更改目录" class="headerlink" title="命令cd——更改目录"></a>命令cd——更改目录</h3><ul><li><p>cd ~ 切换到用户目录，比如是root用户，则切换到/root下</p></li><li><p>cd /tmp 切换到目录/tmp</p></li><li><p>cd dir 切换到当前目录下的dir目录</p></li><li><p>cd / 切换到根目录</p></li><li><p>cd .. 切换到到上一级目录</p></li><li><p>cd ../.. 切换到上二级目录</p></li></ul><h3 id="命令ls——列出文件"><a href="#命令ls——列出文件" class="headerlink" title="命令ls——列出文件"></a>命令ls——列出文件</h3><ul><li>ls -la 给出当前目录下所有文件的一个长列表，包括以句点开头的“隐藏”文件</li><li>ls a* 列出当前目录下以字母a开头的所有文件</li><li>ls -l *.doc 给出当前目录下以.doc结尾的所有文件</li></ul><h3 id="命令cp——复制文件"><a href="#命令cp——复制文件" class="headerlink" title="命令cp——复制文件"></a>命令cp——复制文件</h3><ul><li>cp file newfile.bak 把文件file复制为新文件newfile.bak</li><li>cp file /home/bible/ 把文件file从当前目录复制到/home/bible/目录下</li><li>cp * /tmp 把当前目录下的所有未隐藏文件复制到/tmp/目录下</li><li>cp -a docs docs.bak 递归性把docs目录复制为新目录docs.bak,保持文件属性，并复制所有的文件，包括以句点开头的隐藏文件。</li><li>cp -i 在覆盖前询问用户</li><li>cp -v 告诉用户正在做什么</li></ul><h3 id="命令mv——移动和重命名文件"><a href="#命令mv——移动和重命名文件" class="headerlink" title="命令mv——移动和重命名文件"></a>命令mv——移动和重命名文件</h3><ul><li>mv aflie bfile 将afile重命名为bfile</li><li>mv afile /tmp 把当前目录下的afile移动到/tmp/目录下</li></ul><h3 id="命令rm——删除文件和目录"><a href="#命令rm——删除文件和目录" class="headerlink" title="命令rm——删除文件和目录"></a>命令rm——删除文件和目录</h3><ul><li><p>rm afile 删除文件afile</p></li><li><p>rm * 删除当前目录下的所有文件(未隐藏文件)。rm命令不删除目录，除非也指定了-r(递归)参数。</p></li><li><p>rm -rf domed 删除domed目录以及它所包含的所有内容</p></li><li><p>rm -i a* 删除当前目录下所有以字母a开头的文件，并且在每次删除时，提示用户进行确认</p></li></ul><h3 id="命令mkdir——建立目录"><a href="#命令mkdir——建立目录" class="headerlink" title="命令mkdir——建立目录"></a>命令mkdir——建立目录</h3><ul><li><p>mkdir photos 在当前目录中建立名为photos的目录</p></li><li><p>mkdir -p this/that/theother 在当前目录下建立指定的嵌套子目录</p></li></ul><h3 id="命令rmkdir——删除目录"><a href="#命令rmkdir——删除目录" class="headerlink" title="命令rmkdir——删除目录"></a>命令rmkdir——删除目录</h3><ul><li>rmkdir  空目录名 将删除空目录</li></ul><h3 id="命令touch——创建一个空文件"><a href="#命令touch——创建一个空文件" class="headerlink" title="命令touch——创建一个空文件"></a>命令touch——创建一个空文件</h3><ul><li>touch aaa.txt 创建一个空文件，文件名为aaa.txt</li></ul><h3 id="命令more、less——查看文件内容"><a href="#命令more、less——查看文件内容" class="headerlink" title="命令more、less——查看文件内容"></a>命令more、less——查看文件内容</h3><ul><li>more /etc/passwd 查看/etc/passwd的内容</li><li>less /etc/passwd 查看/etc/passwd的内容</li></ul><h3 id="命令tail——查看文件详细信息"><a href="#命令tail——查看文件详细信息" class="headerlink" title="命令tail——查看文件详细信息"></a>命令tail——查看文件详细信息</h3><ul><li><p>tail -f aaa.txt  看aaa.txt文件的详细信息(查看实时的日志)</p><p>例如：tail -200f normal.log (查看近200条实时运行的日志)</p><pre><code>tail -200 normal.log (查看近200条日志(不实时))</code></pre></li><li><p>tail -n x aaa.log  x:最后几行的信息  </p></li></ul><h3 id="命令head——查看文件名字和后缀"><a href="#命令head——查看文件名字和后缀" class="headerlink" title="命令head——查看文件名字和后缀"></a>命令head——查看文件名字和后缀</h3><ul><li>head -n x aaa.log 查看x行数的aaa.log文件</li></ul><h3 id="命令grep——过滤搜索文件内容"><a href="#命令grep——过滤搜索文件内容" class="headerlink" title="命令grep——过滤搜索文件内容"></a>命令grep——过滤搜索文件内容</h3><ul><li>grep bible /etc/exports 在文件exports中查找包含bible的所有行</li><li>tail -100 /var/log/apache/access.log | grep 404 在WEB服务器日志文件access.log的后100行中查找包含“404”的行</li><li>tail -100 /var/log/apache/access.log | grep -v googlebot 在WEB服务器日志文件access.log的后100行中，查找没有被google访问的行</li><li>grep -v ^# /etc/apache2/httpd.conf 在主apache配置文件中，查找所有非注释行</li></ul><p><strong>在xshell上查看某个时间段的日志 ，记两种方式</strong></p><p>​    (1) 用grep：格式为：grep -E ‘起始时间|结束时间’ 日志文件<br>grep -E ‘2019-10-22 09:00:05|2019-10-22 10:50:15’ common.log</p><p>​    (2) 用sed命令，格式为：sed -n ‘/起始时间/,/结束时间/p’ 日志文件<br>sed -n ‘/2019-10-22 10:44/,/2019-10-22 10:47/p’ common.log</p><h3 id="命令find——查找文件"><a href="#命令find——查找文件" class="headerlink" title="命令find——查找文件"></a>命令find——查找文件</h3><ul><li><p>find ./name *.doc 在当前目录中查找.doc文件</p></li><li><p>find .|grep page 在当前目录及其子目录中查找文件名包含page的文件 locate traceroute 在系统的任何地方查找文件名包含traceroute的文件</p></li></ul><h3 id="命令vi——编辑文件"><a href="#命令vi——编辑文件" class="headerlink" title="命令vi——编辑文件"></a>命令vi——编辑文件</h3><ul><li>vi /etc/bubby.txt 用vi编辑文件/etc/bubby.txt</li><li>vim /etc/bubby.txt 用vi编辑文件/etc/bubby.txt</li></ul><p>按住 i键进入编辑模式<br>　　编辑完 按住Esc取消编辑<br>　　输入 : wq! 保存<br>　　        : q! 是不保存</p><p>快捷操作：</p><p>　　切换窗口：alt+1,alt+2</p><p>　　全屏：alt+回车</p><p>　　将vim挂起(暂停)：ctrl+z，暂停后可进行其他shell操作，完了之后可通过 fg 命令切换回vim界面继续编辑</p><p>　　:MR：查看历史文件记录(注意：MR大写)</p><p>　　:sp 横向切换界面窗口</p><p>　　:vsp 纵向切换界面窗口</p><h3 id="命令rz、sz——文件上传下载"><a href="#命令rz、sz——文件上传下载" class="headerlink" title="命令rz、sz——文件上传下载"></a>命令rz、sz——文件上传下载</h3><ul><li><p>运行命令Sudo rz，即是接收文件，xshell就会弹出文件选择对话框，选好文件之后关闭对话框，文件就会上传到linux里的当前目录 。</p></li><li><p>运行命令Sudo sz file 就是发文件到windows上(保存的目录是可以配置)</p></li><li><p>比ftp命令方便多了，而且服务器不用再开FTP服务了。</p></li></ul><h3 id="命令cat——显示文件内容"><a href="#命令cat——显示文件内容" class="headerlink" title="命令cat——显示文件内容"></a>命令cat——显示文件内容</h3><ul><li>cat file</li></ul><h3 id="netstat是查看端口是否被占用"><a href="#netstat是查看端口是否被占用" class="headerlink" title="netstat是查看端口是否被占用"></a>netstat是查看端口是否被占用</h3><p>　　例如：netstat -app|grep 10086</p><h3 id="命令ps——查看进程"><a href="#命令ps——查看进程" class="headerlink" title="命令ps——查看进程"></a>命令ps——查看进程</h3><ul><li>ps [options]</li></ul><p>　　DESCRIPTION(描述)：ps命令显示运行程序选项的一些信息。如果你想显示选项的一些重复信息，请使用top命令替代。 用标准语法查看系统上的每一个进程。</p><p>　　ps -e</p><p>　　ps -ef</p><p>　　ps -eF</p><p>　　ps -ely</p><p>例如：</p><ul><li><p>查看运行的进程</p><p> ps -ef|grep ServerRun  </p></li><li><p>查看全部进程数</p><p>ps -ef  | wc -l</p><p>-e：显示所有程序。</p><p>-f：显示UID,PPIP,C与STIME栏位。</p></li><li><p>查看httpd的进程数</p><p>ps -ef | grep httpd | wc -l </p></li></ul><h3 id="命令kill——杀掉进程"><a href="#命令kill——杀掉进程" class="headerlink" title="命令kill——杀掉进程"></a>命令kill——杀掉进程</h3><p>　　[root@linux ~]# kill -signal %jobnumber</p><p>　　[root@linux ~]# kill -l</p><p>　　参数： -l ：这个是 L 的小写，列出目前 kill 能够使用的讯号 (signal) 有哪些?共有62个。</p><h3 id="命令stop、start——重启tomcat"><a href="#命令stop、start——重启tomcat" class="headerlink" title="命令stop、start——重启tomcat"></a>命令stop、start——重启tomcat</h3><ul><li><p>./catalina.sh stop</p></li><li><p>./catalina.sh start</p></li></ul><h3 id="命令top——查看cpu、内存"><a href="#命令top——查看cpu、内存" class="headerlink" title="命令top——查看cpu、内存"></a>命令top——查看cpu、内存</h3><h3 id="命令pwd——查看当前路径"><a href="#命令pwd——查看当前路径" class="headerlink" title="命令pwd——查看当前路径"></a>命令pwd——查看当前路径</h3><h3 id="命令clear——清屏"><a href="#命令clear——清屏" class="headerlink" title="命令clear——清屏"></a>命令clear——清屏</h3><h3 id="命令tar——打包、解包rar"><a href="#命令tar——打包、解包rar" class="headerlink" title="命令tar——打包、解包rar"></a>命令tar——打包、解包rar</h3><ul><li><p>tar -cvf <strong>.tar a.jsp b.java 将a和b打成</strong>.rar </p></li><li><p>tar -xvf <strong>.tar a.jsp b.java 将</strong>.tar 解包</p></li></ul><h3 id="命令diff——比较文件内容"><a href="#命令diff——比较文件内容" class="headerlink" title="命令diff——比较文件内容"></a>命令diff——比较文件内容</h3><ul><li><p>diff dir1 dir2 比较目录1与目录2的文件列表是否相同，但不比较文件的实际内容，不同则列出</p></li><li><p>diff file1 file2 比较文件1与文件2的内容是否相同，如果是文本格式的文件，则将不相同的内容显示，如果是二进制代码则只表示两个文件是不同的</p></li><li><p>comm file1 file2 比较文件，显示两个文件不相同的内容</p></li></ul><h3 id="命令ln——建立连接"><a href="#命令ln——建立连接" class="headerlink" title="命令ln——建立连接"></a>命令ln——建立连接</h3><ul><li><p>ln source_path target_path 硬连接</p></li><li><p>ln -s source_path target_path 软连接</p></li></ul><h2 id="工作中常用命令、快捷键"><a href="#工作中常用命令、快捷键" class="headerlink" title="工作中常用命令、快捷键"></a>工作中常用命令、快捷键</h2><ul><li>查看日志信息：view+报错日志</li><li>.gz压缩包解压命令：gunzip -d filename    </li><li>.gz压缩包压缩命令：gzip filename</li><li>:q：强制退出</li><li>：wq:保存退出（一般不用）</li><li>：w:保存</li><li>定位查询：？+查询的信息</li><li>shift+G:到最后一行    </li><li>ctrl+B:向上 </li><li>ctrl+D向下</li></ul><p><strong>代码升级后重启服务器流程</strong></p><p>将三个56环境在右下角点击为全部会话，可以进行同时命令的操作</p><p>进入modules目录下执行以下命令</p><p>停56环境服务：plstopall.sh</p><p>检查是否停止完成：showserver</p><p>先提交：svn up</p><p>再编译：ant onl</p><p>最后重启服务：plstartall.sh</p><p>检查是否启动完成：showserver</p><p>出现某个服务未启动，需要在对应目录下，将对应文件删除，再重启单独启动。</p><p>比如onlApp5服务未启动成功<br>输入etc命令找到pids目录<br>删除ltts.onl.onlApp5.pid文件:\rm+该文件<br>再重启即可</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法与数据结构</title>
      <link href="/2020/05/14/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2020/05/14/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ol><li><p>索引定义：索引（Index）是帮助MySQL高效获取数据的数据结构。其中MySQL使用的数据结构为 B+Tree。</p></li><li><p>为什么我们添加完索引后查询速度为变快？</p></li></ol><p>传统的查询方法，是按照表的顺序遍历的，不论查询几条数据，mysql需要将表的数据从头到尾遍历一遍。在我们添加完索引之后，mysql一般通过BTREE算法生成一个索引文件，在查询数据库时，找到索引文件进行遍历(折半查找大幅查询效率)，找到相应的键从而获取数据。</p><ol start="3"><li>在哪些字段使用索引？<ol><li>较频繁的作为查询条件字段应该创建索引 </li><li>唯一性太差的字段不适合创建索引，尽管频繁作为查询条件，例如gender性别字段</li><li>更新非常频繁的字段不适合作为索引</li><li>不会出现在where子句中的字段不该创建索引</li></ol></li></ol><h3 id="各种数据结构的优缺点比较"><a href="#各种数据结构的优缺点比较" class="headerlink" title="各种数据结构的优缺点比较"></a>各种数据结构的优缺点比较</h3><ol><li>数组： 优点：插入快，如果知道了下标可以非常快速的存取数据 缺点：查找，删除慢，大小固定  </li><li>有序数组 优点：比无序数组查找快 缺点：删除，插入慢，大小固定  </li><li>栈 优点：提供后进先出方式的存取 缺点：存取其他项很慢  </li><li>队列 优点：提供先进先出方式的存取 缺点：存取其他项很慢  </li><li>链表 优点：插入快，删除快 缺点：查找慢  </li><li>二叉树 优点：如果树保持平衡，查找，插入，删除都快 缺点：删除算法复杂  </li><li>红黑树 优点：查找，插入，删除都快，树总是平衡的 缺点：算法复杂  </li><li>哈希表 优点：如果关键字已知则存取，插入极快 缺点：删除慢，如果不知道关键字则存取很慢，对存储空间使用不充分  </li><li>堆 优点：插入，删除快，对最大数据项的存取很快 缺点：对其他数据项存取慢  </li><li>图 优点：对现实世界建模 缺点：有些算法慢且复杂  </li></ol><h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2><p>详情链接：<a href="https://blog.csdn.net/ThinkWon/article/details/95616819" target="_blank" rel="noopener">传送门</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/2020/05/13/Redis/"/>
      <url>/2020/05/13/Redis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="什么是Redis"><a href="#什么是Redis" class="headerlink" title="什么是Redis"></a>什么是Redis</h3><p>定义：是一个开源免费的，使用 C 语言开发的高速缓存数据库。<br>数据类型：Redis 支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及 zsetsorted set：有序集合)。  </p><h3 id="使用Redis的好处"><a href="#使用Redis的好处" class="headerlink" title="使用Redis的好处"></a>使用Redis的好处</h3><p>（1）速度快，因为数据存在内存中</p><p>（2）支持丰富数据类型，支持string（字符串）、list（列表）、hash（字典）、set（集合）、zset（有序集合）。</p><p>（3）支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行</p><p>（4）丰富的特性：可用于缓存，消息，按 key 设置过期时间，过期后将会自动删除</p><h3 id="Redis-的数据结构及使用场景"><a href="#Redis-的数据结构及使用场景" class="headerlink" title="Redis 的数据结构及使用场景"></a>Redis 的数据结构及使用场景</h3><p>Redis 提供了 5种数据结构，每一种数据结构有各种的使用场景。  </p><pre><code>1. String 字符串  字符串类型是 Redis 最基础的数据结构，首先键都是字符串类型，而且 其他几种数据结构都是在字符串类型基础上构建的，我们常使用的 set key value 命令就是字符串。常用在缓存、计数、共享Session、限速等。  2. Hash 哈希  在Redis中，哈希类型是指键值本身又是一个键值对 结构，形如value={{field1，value1}，…{fieldN，valueN}}，添加命令：hset key field value。哈希可以用来存放用户信息，比如实现购物车3. List 列表  列表（list）类型是用来存储多个有序的字符串。可以做简单的消息队列的功能。另外，可以利用 lrange 命令，做基于 Redis的分页功能，性能极佳，用户体验好。  4. Set 集合  集合（set）类型也是用来保存多个的字符串元素，但和列表类型不一 样的是，集合中不允许有重复元素，并且集合中的元素是无序的，不能通过 索引下标获取元素。利用 Set 的交集、并集、差集等操作，可以计算共同喜好，全部的喜好，自己独有的喜好等功能。5. Sorted Set 有序集合  Sorted Set 多了一个权重参数 Score，集合中的元素能够按 Score 进行排列。可以做排行榜应用，取 TOP N 操作。</code></pre><h3 id="Redis是单进程单线程的"><a href="#Redis是单进程单线程的" class="headerlink" title="Redis是单进程单线程的"></a>Redis是单进程单线程的</h3><p>Redis 是单进程单线程的，redis 利用队列技术将并发访问变为串行访问，消除了传统数据库串行控制的开销。</p><h3 id="Redis-为什么是单线程的"><a href="#Redis-为什么是单线程的" class="headerlink" title="Redis 为什么是单线程的"></a>Redis 为什么是单线程的</h3><p>因为Redis是基于内存的操作，CPU不是Redis的瓶颈，Redis的瓶颈最有可能是机器内存的大小或者网络带宽。既然单线程容易实现，而且CPU不会成为瓶颈，那就顺理成章地采用单线程的方案了（毕竟采用多线程会有很多麻烦！）。Redis利用队列技术将并发访问变为串行访问。而且单线程并不代表就慢，nginx 和 nodejs 也都是高性能单线程的代表。 </p><h3 id="单线程的Redis为什么这么快"><a href="#单线程的Redis为什么这么快" class="headerlink" title="单线程的Redis为什么这么快"></a>单线程的Redis为什么这么快</h3><p>Redis 有多快？官方给出的答案是读写速度 10万/秒，这个数字不让人意外，但是 Redis 是单线程的。为什么单线程的 Redis 速度这么快？原因有以下三点：</p><ol><li>纯内存操作：Redis 是完全基于内存的，所以读写效率非常的高，当然 Redis 存在持久化操作，在持久化操作是都是 fork 子进程和利用 Linux 系统的页缓存技术来完成，并不会影响 Redis 的性能。</li><li>单线程操作：单线程并不是坏事，单线程可以避免了频繁的上下文切换，频繁的上下文切换也会影响性能的。</li><li>合理高效的数据结构</li><li>采用了非阻塞 I/O 多路复用机制：多路I/O复用模型是利用 select、poll、epoll 可以同时监察多个流的 I/O 事件的能力，在空闲的时候，会把当前线程阻塞掉，当有一个或多个流有 I/O 事件时，就从阻塞态中唤醒，于是程序就会轮询一遍所有的流（epoll 是只轮询那些真正发出了事件的流），并且只依次顺序的处理就绪的流，这种做法就避免了大量的无用操作。</li></ol><h3 id="Redis适合场景"><a href="#Redis适合场景" class="headerlink" title="Redis适合场景"></a>Redis适合场景</h3><ol><li>会话缓存：Redis可提供持久化。在购物车信息中可以使用Redis来缓存会话的文档。</li><li>全页缓存（FPC）: 回到一致性问题，即使重启了 Redis 实例，因为有磁盘的持久化，用户也不会看到页面加载速度的下降，这是一个极大改进</li><li>队列：Reids 在内存存储引擎领域的一大优点是提供 list 和 set 操作，这使得 Redis能作为一个很好的消息队列平台来使用。</li><li>发布/订阅：发布/订阅的使用场景确实非常多。人们在社交网络连接中使用，还可作为基于发布/订阅的脚本触发器，甚至用 Redis 的发布/订阅功能来建立聊天系统！</li></ol><h3 id="Redis有哪些功能"><a href="#Redis有哪些功能" class="headerlink" title="Redis有哪些功能"></a>Redis有哪些功能</h3><ol><li>数据缓存功能  </li><li>分布式锁的功能  </li><li>支持数据持久化  </li><li>支持事务  </li><li>支持消息队列</li></ol><h3 id="保证缓存和数据库数据的一致性"><a href="#保证缓存和数据库数据的一致性" class="headerlink" title="保证缓存和数据库数据的一致性"></a>保证缓存和数据库数据的一致性</h3><p>合理设置缓存的过期时间。<br>新增、更改、删除数据库操作时同步更新 Redis，可以使用事物机制来保证数据的一致性。</p><h3 id="Redis持久化"><a href="#Redis持久化" class="headerlink" title="Redis持久化"></a>Redis持久化</h3><p>Redis 的持久化有两种方式，或者说有两种策略：</p><p>RDB（Redis Database）：指定的时间间隔能对你的数据进行快照存储。<br>AOF（Append Only File）：每一个收到的写命令都通过write函数追加到文件中。  </p><h3 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h3><p>缓存穿透： 缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求，如发起为id为“-1”的数据或id为特别大不存在的数据。这时的用户很可能是攻击者，攻击会导致数据库压力过大。</p><p>解决方案：最简单粗暴的方法如果一个查询返回的数据为空（不管是数据不存在，还是系统故障），我们就把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。</p><h3 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h3><p>缓存雪崩：<br>    缓存雪崩是指缓存中数据大批量到过期时间，而查询数据量巨大，引起数据库压力过大甚至down机。和缓存击穿不同的是，        缓存击穿指并发查同一条数据，缓存雪崩是不同数据都过期了，很多数据都查不到从而查数据库。</p><p>解决方案：</p><ol><li>缓存数据的过期时间设置随机，防止同一时间大量数据过期现象发生。</li><li>如果缓存数据库是分布式部署，将热点数据均匀分布在不同搞得缓存数据库中。</li><li>设置热点数据永远不过期。</li></ol><h3 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h3><p>缓存击穿：<br>缓存击穿是指缓存中没有但数据库中有的数据（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力</p><p>解决方案：<br>设置热点数据永远不过期。<br>加互斥锁。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue.js框架</title>
      <link href="/2020/05/11/Vue-js%E6%A1%86%E6%9E%B6/"/>
      <url>/2020/05/11/Vue-js%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Vue-js-是什么"><a href="#Vue-js-是什么" class="headerlink" title="Vue.js 是什么"></a>Vue.js 是什么</h2><p>   vue是一套构建用户界面的渐进式框架，它是以数据驱动和组件化的思想构建的，采用自底向上增量开发的设计。vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。</p><p>渐进式表现：声明式渲染—组件系统—客户端路由—大数据状态管理—构建工具。</p><p><strong>Vue.js的特性如下：</strong></p><ol><li><p>轻量级的框架</p></li><li><p>双向数据绑定</p></li><li><p>指令 </p></li><li><p>插件化</p></li></ol><p><strong>应用场景</strong></p><ul><li><p>针对具有复杂交互逻辑的前端应用；</p></li><li><p>它可以提供基础的架构抽象；</p></li><li><p>可以通过AJAX数据持久化，保证前端用户体验</p></li></ul><p><strong>好处</strong></p><p>当前端和数据做一些操作的时候，可以通过AJAX请求对后端做数据持久化，不需要刷新整个页面，只需要改动DOM里需要改动的那部分数据。</p><h2 id="MVX框架模式了解"><a href="#MVX框架模式了解" class="headerlink" title="MVX框架模式了解"></a>MVX框架模式了解</h2><p>MVX框架模式：MVC+MVP+MVVM</p><ol><li>MVC：Model(模型)+View(视图)+controller(控制器)，主要是基于分层的目的，让彼此的职责分开。<br>   View通过Controller来和Model联系，Controller是View和Model的协调者，View和Model不直接联系，基本联系都是单向的。<br>用户User通过控制器Controller来操作模板Model从而达到视图View的变化。</li></ol><ol start="2"><li><p>MVP：是从MVC模式演变而来的，都是通过Controller/Presenter负责逻辑的处理+Model提供数据+View负责显示。<br>   在MVP中，Presenter完全把View和Model进行了分离，主要的程序逻辑在Presenter里实现。<br>并且，Presenter和View是没有直接关联的，是通过定义好的接口进行交互，从而使得在变更View的时候可以保持Presenter不变。</p></li><li><p>MVVM：MVVM是把MVC里的Controller和MVP里的Presenter改成ViewModel。Model+View+ViewModel。View的变化会自动更新到ViewModel,ViewModel的变化也会自动同步到View上显示。这种自动同步是因为ViewModel中的属性实现了Observer，当属性变更时都能触发对应的操作。 </p></li></ol><h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h2><p>MVVM 是 Model-View-ViewModel 的缩写，它是一种基于前端开发的架构模式，其核心是提供对 View 和 ViewModel 的双向数据绑定，这使得 ViewModel 的状态改变可以自动传递给 View，即所谓的数据双向绑定。<br>M：Model（数据层，也就是指数据（前端是js））<br>V：View ( 也就是指DOM层 或用户界面 )<br>VM : ViewModel (处理数据和界面的中间层，也就是指Vue)</p><p><img src="/img/loading.gif" class="lazyload" data-src="http://liangxinghua.com/uploads/image/20180709/1531106991.png"  alt></p><h3 id="mvvm和mvc区别"><a href="#mvvm和mvc区别" class="headerlink" title="mvvm和mvc区别"></a>mvvm和mvc区别</h3><p>mvc和mvvm其实区别并不大。都是一种设计思想。主要就是mvc中Controller演变成mvvm中的viewModel。mvvm主要解决了mvc中大量的DOM 操作使页面渲染性能降低，加载速度变慢，影响用户体验。</p><p>区别：vue数据驱动，通过数据来显示视图层而不是节点操作。<br>场景：数据操作比较多的场景，更加便捷</p><h2 id="MVC和MVVM的关系图"><a href="#MVC和MVVM的关系图" class="headerlink" title="MVC和MVVM的关系图"></a>MVC和MVVM的关系图</h2><p><a href="https://imgchr.com/i/0bbszQ" target="_blank" rel="noopener"><img src="/img/loading.gif" class="lazyload" data-src="https://s1.ax1x.com/2020/10/16/0bbszQ.png"  alt="mvvm.png"></a></p><h2 id="声明式渲染"><a href="#声明式渲染" class="headerlink" title="声明式渲染"></a>声明式渲染</h2><p>Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统。<br><strong>额外补充：</strong><br>渲染分为：命令式渲染和声明式渲染<br>命令式渲染：命令我们的程序去做什么，程序就会跟着你的命令去一步一步执行<br>声明式渲染 ：只需要告诉程序想要什么效果，其他的交给程序来做<br>具体区别看如下代码，执行结果一样，实现方式不同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    var arr &#x3D; [1, 2, 3, 4, 5];</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 命令式渲染：关心每步，关心流程，用命令去实现</span><br><span class="line">    var newArr &#x3D; [];</span><br><span class="line">    for(var i &#x3D; 0, len &#x3D; arr.length; i &lt; len; i++) &#123;</span><br><span class="line">        newArr.push(arr[i] * 2);</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(newArr);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 声明式渲染：不关心中间流程，只需要关心结果和实现条件</span><br><span class="line">    var arr1 &#x3D; arr.map(function(item) &#123;</span><br><span class="line">        return item*2;</span><br><span class="line">    &#125;);</span><br><span class="line">    console.log(arr1);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="入门代码示例"><a href="#入门代码示例" class="headerlink" title="入门代码示例"></a>入门代码示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--第一步：创建文件夹及html文件--&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Vue入门之小明你好&lt;&#x2F;title&gt;</span><br><span class="line">&lt;!--第二步：引入Vue库--&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--第三步:创建一个Div--&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;!--Vue的模板的绑定数据的方法，用两对花括号进行绑定Vue中的数据对象的属性 --&gt;</span><br><span class="line">  &#123;&#123;gareen.name&#125;&#125; </span><br><span class="line">  &#123;&#123;message&#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;!--第四步：创建Vue的对象，并把数据绑定到上面创建好的div上去。--&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">&#x2F;&#x2F;准备数据</span><br><span class="line">var gareen &#x3D; &#123;&quot;name&quot;:&quot;小明&quot;,&quot;hp&quot;:616&#125;;</span><br><span class="line">var app&#x3D;new Vue(&#123;&#x2F;&#x2F; 创建Vue对象。Vue的核心对象。</span><br><span class="line">  el: &#39;#app&#39;,&#x2F;&#x2F; el属性：把当前Vue对象挂载到 div标签上，#app是id选择器</span><br><span class="line">  data: &#123;&#x2F;&#x2F; data: 是Vue对象中绑定的数据</span><br><span class="line">    message: gareen,&#x2F;&#x2F; message 自定义的数据</span><br><span class="line">    message:&#39;你好!&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小明 你好!</span><br></pre></td></tr></table></figure><h2 id="内部指令"><a href="#内部指令" class="headerlink" title="内部指令"></a>内部指令</h2><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h3><p>这几个条件指令用于显示与隐藏各类元素，使用方式如下：<br><strong>（1）v-if</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">if</span>=<span class="string">"isLogin"</span>&gt;你好&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（2）v-else</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">else</span>&gt;请登录后操作&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（3）v-show</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-show=<span class="string">"isLogin"</span>&gt;你好&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（4）v-else-if</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">if</span>=<span class="string">"type === 'A'"</span>&gt;A&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div v-else-if="type === 'B'"&gt;B&lt;/</span>div&gt;</span><br><span class="line">&lt;div v-<span class="keyword">else</span>-<span class="keyword">if</span>=<span class="string">"type === 'C'"</span>&gt;C&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div v-else&gt;Not A/</span>B/C&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p><strong>（5）v-if与v-show的区别</strong></p><ul><li>v-if： 在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建，开销较高，在运行时条件很少改变时使用。</li><li>v-show：调整css dispaly属性，开销较小，在常频繁地切换时使用。</li></ul><h3 id="v-for-循环语句"><a href="#v-for-循环语句" class="headerlink" title="v-for 循环语句"></a>v-for 循环语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">   </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:300px;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;name&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;hp&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">         </span><br><span class="line">        &lt;tr v-for&#x3D;&quot;hero in heros&quot;&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;hero.name&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123;hero.hp&#125;&#125;&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">         </span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">    </span><br><span class="line">&lt;script&gt;</span><br><span class="line">  </span><br><span class="line">var data &#x3D; [</span><br><span class="line">          &#123;name:&quot;盖伦&quot;,hp:341&#125;,</span><br><span class="line">          &#123;name:&quot;提莫&quot;,hp:225&#125;,</span><br><span class="line">          &#123;name:&quot;安妮&quot;,hp:427&#125;,</span><br><span class="line">          &#123;name:&quot;死歌&quot;,hp:893&#125;</span><br><span class="line">    ];</span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          heros:data</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="v-text-、v-html"><a href="#v-text-、v-html" class="headerlink" title="v-text 、v-html"></a>v-text 、v-html</h3><p>（1）v-text</p>取值有个弊端，当网速很慢或javascript出错时，会在页面显示{ { xxx } }，Vue提供的v-text可以解决这个问题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!-- 和下面的一样 --&gt;</span><br><span class="line">&lt;div v-text&#x3D;&quot;message&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>（2）v-html<br>用于输出html代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span v-html&#x3D;&quot;msgHtml&quot;&gt;&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><h3 id="v-on-监听事件"><a href="#v-on-监听事件" class="headerlink" title="v-on 监听事件"></a>v-on 监听事件</h3><p>(1) 常规用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; html</span><br><span class="line">&lt;div&gt;本场比赛得分：&#123;&#123;count&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;button v-on:click&#x3D;&quot;add&quot;&gt;加分&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; JS</span><br><span class="line">data:&#123;</span><br><span class="line">    count: 1</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    add() &#123;</span><br><span class="line">        this.count++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(2)v-on可以缩写为@</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click&#x3D;&quot;add&quot;&gt;加分&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><h3 id="v-bind-属性绑定"><a href="#v-bind-属性绑定" class="headerlink" title="v-bind 属性绑定"></a>v-bind 属性绑定</h3><p>用于处理html标签的动态属性，即动态赋值。<br>（1）常规用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; html</span><br><span class="line">&lt;img v-bind:src&#x3D;&quot;imgSrc&quot;  width&#x3D;&quot;200px&quot;&gt;</span><br><span class="line">&#x2F;&#x2F; js</span><br><span class="line">data: &#123;    </span><br><span class="line">    imgSrc:&#39;http:&#x2F;&#x2F;xxxxxxx&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（2）v-bind可以缩写为 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img :src&#x3D;&quot;imgSrc&quot;  width&#x3D;&quot;200px&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="v-model-双向绑定"><a href="#v-model-双向绑定" class="headerlink" title="v-model 双向绑定"></a>v-model 双向绑定</h3><p>前面的例子，都是把 Vue对象上的数据显示在视图上，要把视图上的数据放到Vue对象上去就需要用到v-model进行双向绑定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line"></span><br><span class="line">hero name: &lt;input v-model&#x3D;&quot;name&quot; &gt;</span><br><span class="line">&lt;button @click&#x3D;&quot;doClick&quot; &gt;提交数据&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">   </span><br><span class="line">&lt;script&gt;</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data:&#123;</span><br><span class="line">name:&quot;teemo&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods:&#123;</span><br><span class="line">      doClick:function()&#123;</span><br><span class="line">      alert(this.name);</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><ol><li><p>生命周期图示：  </p><p><img src="/img/loading.gif" class="lazyload" data-src="https://s1.ax1x.com/2020/10/13/0fh2HP.png"  alt="vue生命周期.png"></p></li><li><p>生命周期表格</p></li></ol><table><thead><tr><th>周期</th><th>说明</th></tr></thead><tbody><tr><td>beforeCreate</td><td>在实例初始化之后，数据观测和事件配置之前被调用</td></tr><tr><td>created</td><td>在实例创建完成后被立即调用，完成数据观测，属性和方法的运算，初始化事件，$el属性未见</td></tr><tr><td>beforeMount</td><td>在挂载开始之前被调用：相关的 render 函数首次被调用，只在虚拟DOM生成HTML</td></tr><tr><td>mounted</td><td>在el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用。实例已完成以下的配置：用上面编译好的html内容替换el属性指向的DOM对象。完成模板中的html渲染到html页面中。此过程中进行ajax交互</td></tr><tr><td>beforeUpdate</td><td>在数据更新之前调用，发生在虚拟DOM重新渲染和打补丁之前。可以在该钩子中进一步地更改状态，不会触发附加的重渲染过程</td></tr><tr><td>updated</td><td>在由于数据更改导致的虚拟DOM重新渲染和打补丁之后调用。调用时，组件DOM已经更新，所以可以执行依赖于DOM的操作。然而在大多数情况下，应该避免在此期间更改状态，因为这可能会导致更新无限循环。该钩子在服务器端渲染期间不被调用</td></tr><tr><td>activated</td><td>keep-alive 组件激活时调用</td></tr><tr><td>deactivated</td><td>keep-alive 组件停用时调用</td></tr><tr><td>beforeDestroy</td><td>在实例销毁之前调用。实例仍然完全可用</td></tr><tr><td>destroyed</td><td>在实例销毁之后调用。调用后，所有的事件监听器会被移除，所有的子实例也会被销毁。该钩子在服务器端渲染期间不被调用</td></tr></tbody></table><ol start="3"><li><p>代码详情</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Vue入门之Helloworld&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">var app&#x3D;new Vue(&#123;</span><br><span class="line">    el:&#39;#app&#39;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        message:&#39;hello Vue!&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeCreate: function () &#123;</span><br><span class="line">        console.group(&#39;beforeCreate 创建前状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot; , &quot;el      : &quot; + this.$el); &#x2F;&#x2F;undefined</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); &#x2F;&#x2F;undefined </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)  </span><br><span class="line">    &#125;,</span><br><span class="line">    created: function () &#123;</span><br><span class="line">        console.group(&#39;created 创建完毕状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + this.$el); &#x2F;&#x2F;undefined</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); &#x2F;&#x2F;已被初始化 </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message); &#x2F;&#x2F;已被初始化</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeMount: function () &#123;</span><br><span class="line">        console.group(&#39;beforeMount 挂载前状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + (this.$el)); &#x2F;&#x2F;已被初始化</span><br><span class="line">        console.log(this.$el);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); &#x2F;&#x2F;已被初始化  </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message); &#x2F;&#x2F;已被初始化  </span><br><span class="line">    &#125;,</span><br><span class="line">    mounted: function () &#123;</span><br><span class="line">        console.group(&#39;mounted 挂载结束状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + this.$el); &#x2F;&#x2F;已被初始化</span><br><span class="line">        console.log(this.$el);     </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); &#x2F;&#x2F;已被初始化</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message); &#x2F;&#x2F;已被初始化 </span><br><span class="line">    &#125;,</span><br><span class="line">    beforeUpdate: function () &#123;</span><br><span class="line">        console.group(&#39;beforeUpdate 更新前状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + this.$el);</span><br><span class="line">        console.log(this.$el);    </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message); </span><br><span class="line">    &#125;,</span><br><span class="line">    updated: function () &#123;</span><br><span class="line">        console.group(&#39;updated 更新完成状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + this.$el);</span><br><span class="line">        console.log(this.$el); </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message); </span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy: function () &#123;</span><br><span class="line">        console.group(&#39;beforeDestroy 销毁前状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + this.$el);</span><br><span class="line">        console.log(this.$el);     </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message); </span><br><span class="line">    &#125;,</span><br><span class="line">    destroyed: function () &#123;</span><br><span class="line">        console.group(&#39;destroyed 销毁完成状态&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》&#39;);</span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el      : &quot; + this.$el);</span><br><span class="line">        console.log(this.$el);  </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data    : &quot; + this.$data); </span><br><span class="line">        console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h2><h3 id="1、computed"><a href="#1、computed" class="headerlink" title="1、computed"></a>1、computed</h3><p>计算属性：主要是对原数据进行改造输出。改造输出：包括格式化数据（价格，日期），大小写转换，排序，添加符号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    newPrice () &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'￥'</span> + <span class="keyword">this</span>.price + <span class="string">'元'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、methods"><a href="#2、methods" class="headerlink" title="2、methods"></a>2、methods</h3><p>方法属性：用于绑定html中的事件对应的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">    add (num) &#123;</span><br><span class="line">        <span class="keyword">this</span>.count += num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、watch"><a href="#3、watch" class="headerlink" title="3、watch"></a>3、watch</h3><p>数据变化监听器：主要用于监测data中的数据变化，迪v-model生效</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">watch: &#123;</span><br><span class="line">    question(val, oldVal) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'new: %s, old: %s'</span>, val, oldVal);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、filters"><a href="#4、filters" class="headerlink" title="4、filters"></a>4、filters</h3><p>过滤器：通常格式化字符，使用传值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">filters: &#123;</span><br><span class="line">    filterA(value) &#123;</span><br><span class="line">        <span class="keyword">return</span> value.toUpperCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、mixins"><a href="#5、mixins" class="headerlink" title="5、mixins"></a>5、mixins</h3><p>混入：用于减少代码污染、减少代码量、实现代码重用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 额外临时加入时，用于显示日志</span></span><br><span class="line"><span class="keyword">var</span> addLog=&#123;</span><br><span class="line">    updated:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"数据放生变化,变化成"</span>+<span class="keyword">this</span>.count+<span class="string">"."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化vue</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// 挂载实例</span></span><br><span class="line">    el:<span class="string">'#app'</span>,</span><br><span class="line">    <span class="comment">// 页面数据初始化，字符，对象、数组</span></span><br><span class="line">    data:&#123;</span><br><span class="line">        count: <span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 混入</span></span><br><span class="line">    mixins: [addLog]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="6、extends"><a href="#6、extends" class="headerlink" title="6、extends"></a>6、extends</h3><p>扩展：对构造器进行扩展</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 扩展</span></span><br><span class="line"><span class="keyword">var</span> extendObj =&#123;</span><br><span class="line">    created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"我是被扩展出来的"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化vue</span></span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="comment">// 挂载实例</span></span><br><span class="line">    el:<span class="string">'#app'</span>,</span><br><span class="line">    <span class="comment">// 页面数据初始化，字符，对象、数组</span></span><br><span class="line">    data:&#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 扩展</span></span><br><span class="line">    extends: extendObj</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="实例事件"><a href="#实例事件" class="headerlink" title="实例事件"></a>实例事件</h2><h3 id="1、-on（监听事件）"><a href="#1、-on（监听事件）" class="headerlink" title="1、$on（监听事件）"></a>1、$on（监听事件）</h3><p><strong>用法</strong>：</p><p>监听当前实例上的自定义事件。事件可以由 <code>vm.$emit</code> 触发。回调函数会接收所有传入事件触发函数的额外参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.$on(<span class="string">'reduce'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'执行了reduce()'</span>);</span><br><span class="line">    <span class="keyword">this</span>.count--;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="2、-once（执行一次的事件）"><a href="#2、-once（执行一次的事件）" class="headerlink" title="2、$once（执行一次的事件）"></a>2、$once（执行一次的事件）</h3><p><strong>用法</strong>：</p><p>监听一个自定义事件，但是只触发一次。一旦触发之后，监听器就会被移除。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.$once(<span class="string">'reduceOnce'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'只执行一次的方法'</span>);</span><br><span class="line">    <span class="keyword">this</span>.count--;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="3、-off（关闭事件）"><a href="#3、-off（关闭事件）" class="headerlink" title="3、$off（关闭事件）"></a>3、$off（关闭事件）</h3><p><strong>用法</strong>：</p><p>移除自定义事件监听器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">off</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'关闭事件'</span>);</span><br><span class="line">    app.$off(<span class="string">'reduce'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、-emit（触发事件）"><a href="#4、-emit（触发事件）" class="headerlink" title="4、$emit（触发事件）"></a>4、$emit（触发事件）</h3><p><strong>用法</strong>：</p><p>触发当前实例上的事件。附加参数都会传给监听器回调。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 事件调用</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'emit事件调用'</span>);</span><br><span class="line">    app.$emit(<span class="string">'reduce'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完整示例代码"><a href="#完整示例代码" class="headerlink" title="完整示例代码"></a>完整示例代码</h3><p>可以复制以下代码到 <a href="http://jsrun.net/new" target="_blank" rel="noopener">http://jsrun.net/new</a> 网站查看运行结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Vue入门之实例事件&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;div&gt;数字：&#123;&#123;count&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;button onclick&#x3D;&quot;reduce()&quot;&gt;on调用&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button onclick&#x3D;&quot;reduceOnce()&quot;&gt;once调用&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button onclick&#x3D;&quot;off()&quot;&gt;off调用&lt;&#x2F;button&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">var app &#x3D; new Vue(&#123;</span><br><span class="line">    el:&#39;#app&#39;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        count: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F; $on 在构造器外部添加事件</span><br><span class="line">app.$on(&#39;reduce&#39;,function()&#123;</span><br><span class="line">    console.log(&#39;执行了reduce()&#39;);</span><br><span class="line">    this.count--;</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 调用</span><br><span class="line">function reduce() &#123;</span><br><span class="line">    &#x2F;&#x2F; 事件调用</span><br><span class="line">    console.log(&#39;emit事件调用&#39;);</span><br><span class="line">    app.$emit(&#39;reduce&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; $once执行一次的事件</span><br><span class="line">app.$once(&#39;reduceOnce&#39;,function()&#123;</span><br><span class="line">    console.log(&#39;只执行一次的方法&#39;);</span><br><span class="line">    this.count--;</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 调用</span><br><span class="line">function reduceOnce() &#123;</span><br><span class="line">    app.$emit(&#39;reduceOnce&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 关闭事件</span><br><span class="line">function off()&#123;</span><br><span class="line">    console.log(&#39;关闭事件&#39;);</span><br><span class="line">    app.$off(&#39;reduce&#39;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><p>除了核心功能默认内置的指令 (<code>v-model</code> 和 <code>v-show</code>)，Vue 也允许注册自定义指令。自定义指令通过Vue.directive来实现，主要完成内置指令不能完成的一些事情。</p><p>有的情况下，你仍然需要对普通 DOM 元素进行底层操作，这时候就会用到自定义指令。举个聚焦输入框的例子，只要你在打开这个页面后还没点击过任何内容，这个输入框就应当还是处于聚焦状态。可以注册全局或局部的自定义指令来实现这个功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;p&gt;页面载入时，input 元素自动获取焦点：&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;input v-focus&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 1.注册一个全局自定义指令 v-focus</span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.directive(&#39;focus&#39;, &#123;</span><br><span class="line">  &#x2F;&#x2F; 当绑定元素插入到 DOM 中。</span><br><span class="line">  inserted: function (el) &#123;</span><br><span class="line">    &#x2F;&#x2F; 聚焦元素</span><br><span class="line">    el.focus()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F; 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.注册局部指令,这样指令只能在这个实例中使用</span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;,</span><br><span class="line">  directives: &#123;</span><br><span class="line">    &#x2F;&#x2F; 注册一个局部的自定义指令 v-focus</span><br><span class="line">    focus: &#123;</span><br><span class="line">      &#x2F;&#x2F; 指令的定义</span><br><span class="line">      inserted: function (el) &#123;</span><br><span class="line">        &#x2F;&#x2F; 聚焦元素</span><br><span class="line">        el.focus()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="钩子函数"><a href="#钩子函数" class="headerlink" title="钩子函数"></a>钩子函数</h3><p>指令定义函数提供了几个钩子函数（可选）：</p><ul><li><code>bind</code>: 只调用一次，指令第一次绑定到元素时调用，用这个钩子函数可以定义一个在绑定时执行一次的初始化动作。</li><li><code>inserted</code>: 被绑定元素插入父节点时调用（父节点存在即可调用，不必存在于 document 中）。</li><li><code>update</code>: 被绑定元素所在的模板更新时调用，而不论绑定值是否变化。通过比较更新前后的绑定值，可以忽略不必要的模板更新。</li><li><code>componentUpdated</code>: 被绑定元素所在模板完成一次更新周期时调用。</li><li><code>unbind</code>: 只调用一次， 指令与元素解绑时调用。</li></ul><h3 id="钩子函数参数"><a href="#钩子函数参数" class="headerlink" title="钩子函数参数"></a>钩子函数参数</h3><ul><li>el：指令所绑定的元素，可以用来直接操作DOM</li><li>binding： 一个对象，包含指令的很多信息</li><li>vnode:：Vue编译生成的虚拟节点</li></ul><h2 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h2><p>组件可以扩展 HTML 元素，封装可重用的代码。例如，你可能会有页头、侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类的组件。</p><p>为了能在模板中使用，这些组件必须先注册以便 Vue 能够识别。有两种组件的注册类型：<strong>全局注册</strong>和<strong>局部注册</strong>。</p><p><strong>全局组件：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;runoob&gt;&lt;&#x2F;runoob&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; 全局注册</span><br><span class="line">Vue.component(&#39;runoob&#39;, &#123;</span><br><span class="line">  template: &#39;&lt;h1&gt;自定义组件!&lt;&#x2F;h1&gt;&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F; 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>局部组件：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;runoob&gt;&lt;&#x2F;runoob&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">var Child &#x3D; &#123;</span><br><span class="line">  template: &#39;&lt;h1&gt;自定义组件!&lt;&#x2F;h1&gt;&#39;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    &#x2F;&#x2F; &lt;runoob&gt; 将只在父模板可用</span><br><span class="line">    &#39;runoob&#39;: Child</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>Prop属性：</strong></p><p>prop 是子组件用来接受父组件传递过来的数据的一个自定义属性。</p><p>父组件的数据需要通过 props 把数据传给子组件，子组件需要显式地用 props 选项声明 “prop”。</p><p><strong>属性取值：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Vue入门 - Prop属性传值&lt;&#x2F;title&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;vue&#x2F;2.2.2&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;button-props here&#x3D;&quot;hello！&quot; from-here&#x3D;&quot;world！&quot;&gt;&lt;&#x2F;button-props&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;,</span><br><span class="line">        components:&#123;</span><br><span class="line">            &quot;button-props&quot;:&#123;</span><br><span class="line">                template:&#96;&lt;div style&#x3D;&quot;color:red;&quot;&gt;参数1： &#123;&#123; here &#125;&#125;:---参数2： &#123;&#123;fromHere&#125;&#125;&lt;&#x2F;div&gt;&#96;,</span><br><span class="line">                props:[&#39;here&#39;, &#39;fromHere&#39;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong>动态Prop：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Vue入门 - 动态Prop&lt;&#x2F;title&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.staticfile.org&#x2F;vue&#x2F;2.2.2&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;input v-model&#x3D;&quot;parentMsg&quot;&gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;child v-bind:message&#x3D;&quot;parentMsg&quot;&gt;&lt;&#x2F;child&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F; 注册</span><br><span class="line">Vue.component(&#39;child&#39;, &#123;</span><br><span class="line">  &#x2F;&#x2F; 声明 props</span><br><span class="line">  props: [&#39;message&#39;],</span><br><span class="line">  &#x2F;&#x2F; 同样也可以在 vm 实例中像 “this.message” 这样使用</span><br><span class="line">  template: &#39;&lt;span&gt;&#123;&#123; message &#125;&#125;&lt;&#x2F;span&gt;&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F; 创建根实例</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#app&#39;,</span><br><span class="line">  data: &#123;</span><br><span class="line">parentMsg: &#39;父组件内容&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="完整示例代码-1"><a href="#完整示例代码-1" class="headerlink" title="完整示例代码"></a>完整示例代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Vue入门之组件&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">    &lt;!-- 全局组件 --&gt;</span><br><span class="line">    &lt;div&gt;&lt;button-counter&gt;&lt;&#x2F;button-counter&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 局部组件 --&gt;</span><br><span class="line">    &lt;div&gt;&lt;button-inner&gt;&lt;&#x2F;button-inner&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 常规属性传值 --&gt;</span><br><span class="line">    &lt;div&gt;&lt;button-props here&#x3D;&quot;hello&quot; from-here&#x3D;&quot;world&quot;&gt;&lt;&#x2F;button-props&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- v-bind传值 --&gt;</span><br><span class="line">    &lt;div&gt;&lt;button-props v-bind:here&#x3D;&quot;message&quot; :from-here&#x3D;&quot;message&quot;&gt;&lt;&#x2F;button-props&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;!-- 父子组件调用 --&gt;</span><br><span class="line">    &lt;div&gt;&lt;parent&gt;&lt;&#x2F;parent&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    &#x2F;&#x2F; 定义全局组件</span><br><span class="line">    Vue.component(&#39;button-counter&#39;, &#123;</span><br><span class="line">        data: function () &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                count: 0</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        template: &#39;&lt;button v-on:click&#x3D;&quot;count++&quot;&gt;全局组件显示： &#123;&#123; count &#125;&#125;&lt;&#x2F;button&gt;&#39;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 子组件</span><br><span class="line">    var city &#x3D; &#123;</span><br><span class="line">        template:&#96;&lt;div&gt;Sichuan of China&lt;&#x2F;div&gt;&#96;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F; 父组件</span><br><span class="line">    var parent &#x3D; &#123;</span><br><span class="line">        template:</span><br><span class="line">            &#96;&lt;div&gt;</span><br><span class="line">                &lt;p&gt; Panda from China!&lt;&#x2F;p&gt;</span><br><span class="line">                &lt;city&gt;&lt;&#x2F;city&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;&#96;,</span><br><span class="line">        components:&#123;</span><br><span class="line">            &quot;city&quot;: city</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 实例化</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#39;#app&#39;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            message: &#39;hello&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#x2F;&#x2F; 定义局部组件</span><br><span class="line">        components:&#123;</span><br><span class="line">            &quot;button-inner&quot;:&#123;</span><br><span class="line">                data: function() &#123;</span><br><span class="line">                    return &#123;</span><br><span class="line">                        inner: 0</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                template: &#39;&lt;button v-on:click&#x3D;&quot;inner++&quot;&gt;局部组件显示： &#123;&#123; inner &#125;&#125;&lt;&#x2F;button&gt;&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F; 取值</span><br><span class="line">            &quot;button-props&quot;:&#123;</span><br><span class="line">                template:&#96;&lt;div style&#x3D;&quot;color:red;&quot;&gt;参数1： &#123;&#123; here &#125;&#125;:---参数2： &#123;&#123;fromHere&#125;&#125;&lt;&#x2F;div&gt;&#96;,</span><br><span class="line">                props:[&#39;here&#39;, &#39;fromHere&#39;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#x2F;&#x2F; 组件注册</span><br><span class="line">            &quot;parent&quot;: parent</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本语言</title>
      <link href="/2020/05/05/shell%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/"/>
      <url>/2020/05/05/shell%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="语法解释"><a href="#语法解释" class="headerlink" title="语法解释"></a>语法解释</h2><ul><li><p>#!/bin/bash：是shell脚本的第一行，它代表的意思是该文件使用的是bash语法。如果不设置该行，那么你的shell脚本就不能被执行。</p></li><li><p><strong>#</strong> ：是一个约定的标记，它告诉系统这个脚本需要什么解释器来执行，即使用哪一种 Shell。</p></li><li><p>‘’#‘’ ：是单行注释</p></li><li><p>多行注释可以使用</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;EOF</span><br><span class="line">注释内容...</span><br><span class="line">注释内容...</span><br><span class="line">注释内容...</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>EOF 也可以使用其他符号代替。如：&lt;&lt;! 注视内容！等格式。</p><ul><li>chmod +x：是为脚本设置可执行权限；Linux下文件的权限类型一般包括读，写，执行。对应字母为 r、w、x。</li></ul><h3 id="变量操作"><a href="#变量操作" class="headerlink" title="变量操作"></a>变量操作</h3><ul><li>创建普通变量： name=“test” （=两边不可有空格）</li><li>创建只可函数体中使用的局部变量： local name=“test” （使用local修饰的变量在函数体外无法访问，并且local只能在函数体内使用）</li><li>使用变量： echo $name 或者 echo ${name} （推荐使用大括号版）</li><li>变量重新赋值： name=“new_test” （将原值覆盖）</li><li>只读变量： name=“only_read” -&gt; readonly name （使用readonly标识后的变量，不可被修改）</li><li>删除变量： unset name; （删除之后不可访问，删除不掉只读变量）</li></ul><h3 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h3><ul><li>获取参数值：<ul><li>$0 ： 固定，代表执行的文件名</li><li>$1 ： 代表传入的第1个参数</li><li>$n ： 代表传入的第n个参数</li></ul></li><li>$#：参数个数</li><li>$<em>： 以一个单字符串显示所有向脚本传递的参数。如”$</em>“用「”」括起来的情况、以”$1 $2 … $n”的形式输出所有参数</li><li>$@：与$*相同，但是使用时加引号，并在引号中返回每个参数。</li><li>$$：脚本运行的当前进程号</li><li>$！：后台运行的最后一个进程的ID</li><li>$?： 显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。</li><li>$* 与 $@ 区别<ul><li>相同点：都是引用所有参数。</li><li>不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 “ * “ 等价于 “1 2 3”（传递了一个参数），而 “@” 等价于 “1” “2” “3”（传递了三个参数）。</li></ul></li></ul><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p><strong>echo</strong><br>仅用于字符串的输出，没有使用printf作为输出的移植性好，建议使用printf</p><p><strong>printf</strong></p><blockquote><p>printf 不会像 echo 自动添加换行符，我们可以手动添加 \n<br>无大括号，直接以空格分隔</p></blockquote><ul><li>格式：<code>printf format-string [arguments...]</code> 其中（format-string: 格式控制字符串、arguments: 参数列表）</li><li>案例：<code>printf &quot;%-10s %-8s %-4.2f\n&quot; 郭靖 男 66.1234</code></li><li>%s %c %d %f 都是格式替代符<ul><li>d：Decimal 十进制整数 对应位置参数必须是十进制整数，否则报错!</li><li>s：String 字符串 对应位置参数必须是字符串或者字符型 否则报错</li><li>c：Char 字符 对应位置参数必须是字符串或者字符型 否则报错</li><li>f：Float 浮点 对应位置参数必须是数字型 否则报错</li></ul></li><li><code>%-10s</code> ： 指一个宽度为10个字符（-表示左对齐，没有则表示右对齐），任何字符都会被显示在10个字符宽的字符内，如果不足则自动以空格填充，超过也会将内容全部显示出来。</li><li><code>%-4.2f</code> ：指格式化为小数，宽度为4个字符，其中<code>.2</code>指保留2位小数。</li></ul><h3 id="文件引用"><a href="#文件引用" class="headerlink" title="文件引用"></a>文件引用</h3><p>引用其他的文件之后，可以使用其变量、函数等等，相当于将引用的文件包含进了当前文件<br>有两种方式：</p><ul><li><p><strong>.</strong> file_path\file_name</p></li><li><p><strong>source</strong> file_path\file_name</p></li></ul><h2 id="shell与linux命令的联系"><a href="#shell与linux命令的联系" class="headerlink" title="shell与linux命令的联系"></a>shell与linux命令的联系</h2><p>shell是linux命令集的概称，是属于命令行的人机界面。shell 是一个用C语言编写的程序，它是用户使用Linux的桥梁。Shell既是一种命令语言，又是一种程序设计语言。shell是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。</p><h2 id="shell与linux命令的区别"><a href="#shell与linux命令的区别" class="headerlink" title="shell与linux命令的区别"></a>shell与linux命令的区别</h2><p>1.linux命令直接在命令行执行，就是在当前的shell环境下执行，比如涉及到一些环境变量的时候，必须在当前shell环境里执行。</p><p>2.使用Shell脚本执行的话，会fork一个子进程，所有操作都在子进程进行。如果涉及到一些在脚本里设置环境变量的东西，脚本结束了，环境变量也就消失了。 如果是修改环境变量的话，需要特别注意下。</p><p>3.shell可以重复或批量地执行一些命令。可以把要重复执行的命令写到脚本里面执行。而命令行的话就需要一个一个的输入命令，相对而言麻烦一些。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式</title>
      <link href="/2020/05/02/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/05/02/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="23种设计模式"><a href="#23种设计模式" class="headerlink" title="23种设计模式"></a>23种设计模式</h2><ul><li><p>创建型模式：提供创建对象的机制， 增加已有代码的灵活性和可复用性。 </p><p>  单例模式、工厂模式、抽象工厂模式、建造者模式、原型模式。</p></li><li><p>结构型模式：介绍如何将对象和类组装成较大的结构， 并同时保持结构的灵活和高效。</p><p>  适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式。</p></li><li><p>行为型模式：负责对象间的高效沟通和职责委派。</p><p>  模板方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链模式、访问者模式。</p></li></ul><h2 id="模板模式"><a href="#模板模式" class="headerlink" title="模板模式"></a>模板模式</h2><p>场景：客户到银行办理业务：</p><ol><li>取号排队</li><li>办理具体现金/转账/企业/个人/理财业务</li><li>给银行工作人员评分</li></ol><p>模板方法模式介绍：<br>    它定义了一个操作中的算法骨架，将某些步骤延迟到子类中实现，这样，新的子类可以在不改变一个算法结构的前提下重新定义该算法的某些特定步骤</p><p>核心：处理步骤父类中定义好，具体实现延迟到子类中定义</p><p>什么时候用到模板方法模式：<br>    实现一个算法时，整体步骤很固定，但是某些部分易变，易变部分可以抽象出来，供子类实现。  </p><ol><li>有多个子类共有的方法，且逻辑相同。   </li><li>重要的、复杂的方法，可以考虑作为模板方法。  </li></ol><p>开发中常见的场景：非常频繁，各个框架、类库都有他的影子  </p><ol><li>数据库访问的封装</li><li>Junit单元测试</li><li>servlet中关于doGet/doPost方法调用</li><li>spring中JDBCTemplate、HibernateTemplate等</li></ol><p>优点：  </p><ol><li>封装不变部分，扩展可变部分。  </li><li>提取公共代码，便于维护。  </li><li>行为由父类控制，子类实现。  </li></ol><p>缺点：每一个不同的实现都需要一个子类来实现，导致类的个数增加，使得系统更加庞大。</p><h2 id="责任链模式"><a href="#责任链模式" class="headerlink" title="责任链模式"></a>责任链模式</h2><p>定义：允许你将请求沿着处理者链进行发送。收到请求后，每个处理者均可对请求进行处理，或将其传递给链上的下个处理者。类似if-else语句，但是不利于扩展，因此使用责任链代替if-else的过程。</p><p>场景：接力赛跑、大学中，奖学金审批、公司公文审批。</p><p>开发中常见的使用场景：  </p><ol><li>Java中，异常机制就是一种责任链模式。一个try可以对应多个catch,当第一个catch不匹配类型，则自动跳到第二个catch。</li><li>Javascript语言中，事件的冒泡和捕获机制。</li><li>Servlet开发中，过滤器的链式处理。</li></ol><p>意图：避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</p><p>主要解决：职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。</p><p>优点：   </p><ol><li>降低耦合度。它将请求的发送者和接收者解耦。  </li><li>简化了对象。使得对象不需要知道链的结构。  </li><li>增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任。  </li><li>增加新的请求处理类很方便。  </li></ol><p>缺点：  </p><ol><li>不能保证请求一定被接收。  </li><li>系统性能将受到一定影响，而且在进行代码调试时不太方便，可能会造成循环调用</li><li>可能不容易观察运行时的特征，有碍于除错。  </li></ol><p>使用场景：<br>1、有多个对象可以处理同一个请求，具体哪个对象处理该请求由运行时刻自动确定。<br>2、在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。<br>3、可动态指定一组对象处理请求。  </p><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><p>何为单例模式：一个类只能有一个实例，并且在整个项目中都能访问这个实例。</p><p>在Spring中，bean可以被定义为两种模式：prototype（多例）和singleton（单例）</p><p>singleton（单例）：只有一个共享的实例存在，所有对这个bean的请求都会返回这个唯一的实例。<br>prototype（多例）：对这个bean的每次请求都会创建一个新的bean实例，类似于new。</p><p>核心作用：保证一个类只有一个实例，并且提供一个访问该实例的全局访问点<br>应该在什么时候下使用单例模式？</p><p>举一个小例子，在我们的windows桌面上，我们打开了一个回收站，当我们试图再次打开一个新的回收站时，Windows系统并不会为你弹出一个新的回收站窗口。，也就是说在整个系统运行的过程中，系统只维护一个回收站的实例。这就是一个典型的单例模式运用。</p><p>适用场景：  </p><ol><li>需要生成唯一序列的环境</li><li>需要频繁实例化然后销毁的对象。</li><li>创建对象时耗时过多或者耗资源过多，但又经常用到的对象。</li><li>频繁访问数据库或文件的对象。</li></ol><p>JDK中的Runtime类就是使用的饿汉式单例！在Spring MVC框架中的controller 默认是单例模式的!</p><p>单例的优点：  </p><ol><li>在内存中只有一个对象，节省内存空间</li><li>避免频繁创建销毁对象，可以提高系统的性能。</li><li>避免对共享资源的多重占用</li><li>可以全局访问。</li></ol><p>单例的缺点：</p><ol><li>不适用于变化频繁的对象</li><li>滥用单例将带来一些负面问题，如为了节省资源将数据库连接池对象设计为的单例类，可能会导致共享连接池对象的程序过多而出现连接池溢出。</li><li>如果实例化的对象长时间不被利用，系统会认为该对象是垃圾而被回收，这可能会导致对象状态的丢失。</li></ol><h3 id="实现单例模式的几种方法"><a href="#实现单例模式的几种方法" class="headerlink" title="实现单例模式的几种方法"></a>实现单例模式的几种方法</h3><ol><li><p>饿汉式（静态变量）方法</p><p> 优点：写法简单，在类加载的时候就完成了实例化，同时也就避免了线程同步问题，因此线程安全<br> 缺点：由于是在类加载时就完成了实例化，没有达到懒加载的效果。如果一直没有使用过这个实例，就造成了内存的浪费！  </p></li><li><p>饿汉式2（static静态代码块）其实和第一种饿汉式（静态变量）方法差不多，其优缺点一致！  </p><p> 唯一不同的就是把创建单例对象的操作放进了static静态代码块中</p></li><li><p>懒汉式（线程不安全）的这种方式起到了懒加载的效果，但只能在单线程下使用。</p><p> 如果在多线程下，一个线程进入了if（singleton==null）判断语句块，还没执行产生实例的句子，另一个线程又进来了，这时会产生多个实例，所以不安全。<br> 结语：懒汉式（线程不安全）在实际开发中，不要使用这种方式！！存在潜在危险</p></li><li><p>懒汉式2（线程安全）方式</p><p> 优点：线程安全<br> 缺点：效率太低，每次调用getInstance方法都要进行同步<br> 结语：懒汉式2（线程安全）方式在开发中不推荐使用，主要是效率太低了*/</p></li><li><p>双重检查应用实例方式</p><p> 线程安全、延迟加载、效率较高</p><p> 结语：开发中推荐使用！</p></li><li><p>枚举方式的枚举：</p><p> 推荐写法，简单高效。充分利用枚举类的特性，只定义了一个实例，且枚举类是天然支持多线程的。<br> 借助JDK1.5中添加的枚举来实现单例模式优点：</p><ol><li><p>不仅能避免多线程同步问题 </p></li><li><p>还能防止反序列化重新创建新的对象</p><p>枚举方式单例是由Effective java作者Josh Bloch提倡的，结语：推荐使用！</p></li></ol></li></ol><h3 id="单例总结"><a href="#单例总结" class="headerlink" title="单例总结"></a>单例总结</h3><p>1、饿汉式（静态变量）这种方式可以使用，但是没有达到 lazy loading 懒加载的效果会造成内存的浪费！开发中不建议使用。<br>2、饿汉式（static静态代码块）其实和第一种饿汉式（静态变量）方法差不多，其优缺点一致！唯一不同的就是把创建单例对象的操作放进了static静态代码块中<br>3、懒汉式（线程不安全）起到了懒加载的效果，但只能在单线程下使用。在实际开发中，不要使用这种方式！！！<br>4、懒汉式2（线程安全）方式线程安全但是效率太低，每次调用getInstance方法都要进行同步。所以在开发中不推荐使用。<br>5、懒汉式3同步代码块（线程安全）方式在开发中不使用 ，实际上这个设计有点搞笑哈哈。<br>6、双重检查应用实例方式，线程安全、延迟加载、效率较高。因此开发中推荐使用！<br>7、静态内部类单例方式线程安全、利用静态内部类特点实现延迟加载、效率高。 开发中推荐使用这种静态内部类单例方式！<br>8、借助JDK1.5中添加的枚举来实现单例模式不仅能避免多线程同步问题还能防止反序列化重新创建新的对象。枚举方式单例是由Effective java作者Josh Bloch提倡的，开发中推荐使用！  </p><p><a href="https://blog.csdn.net/qq_44543508/article/details/103249751" target="_blank" rel="noopener" title="单例模式">详情传送门</a></p><h2 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h2><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><ol><li><p>提供公共接口或抽象类，定义需要使用的策略方法。（策略抽象类）</p></li><li><p>多个实现的策略抽象类的实现类。（策略实现类）</p></li><li><p>环境类，对多个实现类的封装，提供接口类型的成员量，可以在客户端中切换。</p></li><li><p>客户端 调用环境类 进行不同策略的切换。</p></li></ol><p>注：Jdk中的TreeSet和 TreeMap的排序功能就是使用了策略模式。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>　　（1）策略模式提供了管理相关的算法族的办法。策略类的等级结构定义了一个算法或行为族。恰当使用继承可以把公共的代码移到父类里面，从而避免代码重复。</p><p>　　（2）使用策略模式可以避免使用多重条件(if-else)语句。多重条件语句不易维护，它把采取哪一种算法或采取哪一种行为的逻辑与算法或行为的逻辑混合在一起，统统列在一个多重条件语句里面，比使用继承的办法还要原始和落后。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>　　（1）策略模式只适用于客户端知道算法或行为的情况。</p><p>　　（2）由于策略模式把每个具体的策略实现都单独封装成为类，如果备选的策略很多的话，那么对象的数目就会很可观。</p><h2 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h2><h3 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h3><p>实现方式：</p><ol><li><p>为真实类和代理类提供的公共接口或抽象类。（租房）</p></li><li><p>真实类，具体实现逻辑，实现或继承a。（房主向外租房）</p></li><li><p>代理类，实现或继承a，有对b的引用，调用真实类的具体实现。（中介）</p></li><li><p>客户端，调用代理类实现对真实类的调用。（租客租房）</p></li></ol><h3 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h3><p>实现方式：</p><ol><li><p>公共的接口（必须是接口，因为Proxy类的newproxyinstance方法的第二参数必须是个接口类型的Class）</p></li><li><p>多个真实类，具体实现的业务逻辑。</p></li><li><p>代理类，实现InvocationHandler接口，提供Object成员变量，和Set方法，便于客户端切换。</p></li><li><p>客户端，获得代理类的实例，为object实例赋值，调用Proxy.newproxyinstance方法在程序运行时生成继承公共接口的实例，调用相应方法，此时方法的执行由代理类实现的Invoke方法接管。</p></li></ol><h3 id="jdk动态代理使用的局限性"><a href="#jdk动态代理使用的局限性" class="headerlink" title="jdk动态代理使用的局限性"></a>jdk动态代理使用的局限性</h3><p>通过反射类Proxy和InvocationHandler回调接口实现的jdk动态代理，要求委托类必须实现一个接口，但事实上并不是所有类都有接口，对于没有实现接口的类，便无法使用该方方式实现动态代理。</p><h2 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h2><p>观察者模式是对象的行为模式，又叫发布-订阅(Publish/Subscribe)模式、模型-视图(Model/View)模式、源-监听器(Source/Listener)模式或从属者(Dependents)模式。</p><h3 id="实现方式-1"><a href="#实现方式-1" class="headerlink" title="实现方式"></a>实现方式</h3><p>a） 角色抽象类（提供对观察者的添加，删除和通知功能）。</p><p>b） 角色具体类，实现a，维护一个c的集合（对角色抽象类的实现）。</p><p>c）  观察者抽象类（被角色通知后实现的方法）。</p><p>d） 观察者实现类，实现c（多个）。</p><p>注：JDK提供了对观察者模式的支持，使用Observable类和Observer接口</p><h2 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h2><p>就是建立一个工厂类，对实现了同一接口的一些类进行实例的创建。简单工厂模式的实质是由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类（这些产品类继承自一个父类或接口）的实例。</p><h3 id="实现方式-2"><a href="#实现方式-2" class="headerlink" title="实现方式"></a>实现方式</h3><ol><li><p>抽象产品类（也可以是接口）</p></li><li><p>多个具体的产品类</p></li><li><p>工厂类（包括创建a的实例的方法）</p></li></ol><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><p>工厂类是整个模式的关键.包含了必要的逻辑判断,根据外界给定的信息,决定究竟应该创建哪个具体类的对象.通过使用工厂类,外界可以从直接创建具体产品对象的尴尬局面摆脱出来,仅仅需要负责“消费”对象就可以了。而不必管这些对象究竟如何创建及如何组织的．明确了各自的职责和权利，有利于整个软件体系结构的优化。</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>由于工厂类集中了所有实例的创建逻辑，违反了高内聚责任分配原则，将全部创建逻辑集中到了一个工厂类中；它所能创建的类只能是事先考虑到的，如果需要添加新的类，则就需要改变工厂类了。当系统中的具体产品类不断增多时候，可能会出现要求工厂类根据不同条件创建不同实例的需求．这种对条件的判断和对具体产品类型的判断交错在一起，很难避免模块功能的蔓延，对系统的维护和扩展非常不利；</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务框架</title>
      <link href="/2020/05/02/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/"/>
      <url>/2020/05/02/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="SpringBoot和SpringCloud简介"><a href="#SpringBoot和SpringCloud简介" class="headerlink" title="SpringBoot和SpringCloud简介"></a>SpringBoot和SpringCloud简介</h3><h4 id="简要概述"><a href="#简要概述" class="headerlink" title="简要概述"></a>简要概述</h4><pre><code>1、SpringBoot：是一个快速开发框架，通过用MAVEN依赖的继承方式，帮助我们快速整合第三方常用框架，完全采用注解化（使用注解方式启动SpringMVC），简化XML配置，内置HTTP服务器（Tomcat，Jetty），最终以Java应用程序进行执行。2、SpringCloud： 是一套目前完整的微服务框架，它是是一系列框架的有序集合。它只是将目前各家公司开发的比较成熟、经得起实际考验的服务框架组合起来，通过SpringBoot风格进行再封装屏蔽掉了复杂的配置和实现原理，最终给开发者留出了一套简单易懂、易部署和易维护的分布式系统开发工具包。它利用Spring Boot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用SpringBoot的开发风格做到一键启动和部署。</code></pre><h4 id="什么是微服务"><a href="#什么是微服务" class="headerlink" title="什么是微服务"></a>什么是微服务</h4><pre><code>1. 以前的模式是 所有的代码在同一个工程中 部署在同一个服务器中 同一个项目的不同模块不同功能互相抢占资源2. 微服务 将工程根据不同的业务规则拆分成微服务 微服务部署在不同的机器上 服务之间进行相互调用3. Java微服务的框架有 dubbo（只能用来做微服务），spring cloud（提供了服务的发现，断路器等）</code></pre><h4 id="SpringBoot和SpringCloud的关系"><a href="#SpringBoot和SpringCloud的关系" class="headerlink" title="SpringBoot和SpringCloud的关系"></a>SpringBoot和SpringCloud的关系</h4><pre><code>1、SpringBoot只是一个快速开发框架，使用注解简化了xml配置，内置了Servlet容器，以Java应用程序进行执行。2、SpringCloud是一系列框架的集合，可以包含SpringBoot。</code></pre><p>SpringBoot使用了默认大于配置的理念，集成了快速开发的Spring多个插件，同时自动过滤不需要配置的多余的插件，简化了项目的开发配置流程，一定程度上取消xml配置，是一套快速配置开发的脚手架，能快速开发单个微服务；</p><p>SpringCloud大部分的功能插件都是基于SpringBoot去实现的，SpringCloud关注于全局的微服务整合和管理，将多个SpringBoot单体微服务进行整合以及管理；SpringCloud依赖于SpringBoot开发，而SpringBoot可以独立开发；</p><h4 id="SpringBoot是微服务框架吗？"><a href="#SpringBoot是微服务框架吗？" class="headerlink" title="SpringBoot是微服务框架吗？"></a>SpringBoot是微服务框架吗？</h4><pre><code>1、SpringBoot只是一个快速开发框架，算不上微服务框架。2、SpringCloud+SpringBoot 实现微服务开发。具体的来说是，SpringCloud具备微服务开发的核心技术：RPC远程调用技术；SpringBoot的web组件默认集成了SpringMVC，可以实现HTTP+JSON的轻量级传输，编写微服务接口，所以SpringCloud依赖SpringBoot框架实现微服务开发。Springboot:简介：1.    简化spring应用开发的一个框架2.    整个spring技术栈的一个大整合3.    J2EE开发的一站式解决方案优点：1、    快速创建独立运行的spring项目以及主流框架集成2、    使用嵌入式的Servlet容器，应用无需打成war包3、    Starters自动依赖与版本控制4、    大量的自动配置，简化开发，也可以修改默认值5、    无需配置xml，无代码生成，开箱即用6、    准生产环境的运行时应用监控SpringBoot与Spring的区别：Spring Boot可以建立独立的Spring应用程序；1.    内嵌了Tomcat，Jetty等容器，直接热部署后就可以直接跑起来，不用再做部署工作了；2.    无需配置一堆繁琐的xml文件；3.    可以自动配置Spring。SpringBoot将原有的XML配置改为Java配置，将bean注入改为使用注解注入的方式(@Autowire)，并将多个xml、properties配置浓缩在一个appliaction.yml配置文件中。4.    提供了一些现有的功能，如量度工具，表单数据验证以及一些外部配置这样的一些第三方功能；5.    整合常用依赖（开发库，例如spring-webmvc、jackson-json、validation-api和tomcat等），提供的POM可以简化Maven的配置。当我们引入核心依赖时，SpringBoot会自引入其他依赖。Springboot中的配置解释：启动器：spring-boot-starter;场景启动器：帮我们导入了web模块正常运行所依赖的组件springBoot将所有的功能场景都抽取出来，做成一个个的starter(启动器),只需要在项目里面引入这个starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器。springboot常用的starter有哪些：        spring-boot-starter-web 嵌入tomcat和web开发需要servlet与jsp支持        spring-boot-starter-data-jpa 数据库支持        spring-boot-starter-data-redis redis数据库支持        spring-boot-starter-data-solr solr支持        mybatis-spring-boot-starter 第三方的mybatis集成starterspringboot自动配置的原理：        在spring程序main方法中 添加@SpringBootApplication或者@EnableAutoConfiguration会自动去maven中读取每个starter中的spring.factories文件  该文件里配置了所有需要被创建spring容器中的bean</code></pre><h3 id="Spring-Boot视频学习记录"><a href="#Spring-Boot视频学习记录" class="headerlink" title="Spring Boot视频学习记录"></a>Spring Boot视频学习记录</h3><blockquote><p>视频地址：<a href="https://www.bilibili.com/video/av38657363?p=1" target="_blank" rel="noopener">https://www.bilibili.com/video/av38657363?p=1</a></p></blockquote><h4 id="Spring-Boot介绍"><a href="#Spring-Boot介绍" class="headerlink" title="Spring Boot介绍"></a>Spring Boot介绍</h4><pre><code>利用springboot可以自动配置spring的各种组件，简化配置，同时提供了常见场景的推荐组件配置。其设计的目的是用来简化新spring应用的初始搭建以及开发过程，创建出独立运行和产品级别的基于spring框架的应用。该框架使用了特定的方式来配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，大大提升使用spring框架时的开发效率。Spring包含如下特性  1.可以将应用打包成独立可运行的JAR或WAR，使用java-jar命令来启动应用  2.内嵌Tomcat或者Jetty服务器，无需独立的应用服务器  3.提供基础的POM文件来简化Apache Maven配置  4.根据项目依赖自动配置  5.没有Java Config代码和XML配置文件  </code></pre><h4 id="创建Spring-Boot项目"><a href="#创建Spring-Boot项目" class="headerlink" title="创建Spring Boot项目"></a>创建Spring Boot项目</h4><pre><code>1有两种方式：1.1spring官网：http://start.Spring.io站点，在线生成压缩包下载解压导入STS后进行开发。1.2直接使用STS创建Spring Boot项目2.项目结构分析：    .mvn目录是maven包装器，是一个小脚本，它能够确保其它人使用相同版本的maven来构建这个应用    Src/main/java存放的是java源代码    Src/main/resources存放的是应用配置，静态文件（css,js,图片）和模板文件（HTML模板）    Src/test/java存放测试用例java代码3.Spring Boot应用启动：1.Springboot应用可以有多种启动方式来应对不同的使用场景：1.1 main方法启动1.2Run as Spring boot APP1.3使用maven插件运行1.4 java-jar命令启动4.Spring Boot自动配置</code></pre><h3 id="微服务springCloud"><a href="#微服务springCloud" class="headerlink" title="微服务springCloud"></a>微服务springCloud</h3><blockquote><p>详情传送门：<a href="https://blog.csdn.net/qq_35906921/article/details/84032874" target="_blank" rel="noopener">https://blog.csdn.net/qq_35906921/article/details/84032874</a></p></blockquote><h4 id="互联网发展软件开发的三个阶段"><a href="#互联网发展软件开发的三个阶段" class="headerlink" title="互联网发展软件开发的三个阶段"></a>互联网发展软件开发的三个阶段</h4><ol><li>单机版：把要做的所有应用程序放置在一个项目中，最后将之后的war或者jar部署在服务器上。这种模式随着发展终将会被淘汰 是因为出现的问题 将随之而来并发耦合等问题 刻不容缓。  </li><li>分布式：专业的事情交给专业的人去做，尽量降低耦合度，每个模块不受影响，一个模块你只做一件事。  </li><li>微服务：微服务化的核心就是将传统的一站式应用，根据业务拆分成一个一个微服务，彻底去耦合，每个微服务提供单个业务功能的服务，一个服务做一件事，从技术角度看，就是一个小而独立的过程，类似于进程，能够自行单独启动和销毁，拥有自己的独立数据库。  </li></ol><p>微服务架构是一种架构模式，他提倡将单一应用程序拆分成一组服务，每个服务独立运行在自己的进程中，服务之间相互协调，相互配合，为用户提供最终价值。 </p><h4 id="对微服务的理解-什么是服务熔断"><a href="#对微服务的理解-什么是服务熔断" class="headerlink" title="对微服务的理解 什么是服务熔断?"></a>对微服务的理解 什么是服务熔断?</h4><p>spring boot 是一个快速整合第三方框架   关注的是 微观 具体关注快速方便的开发单个个体的 服务 </p><p> spring cloud 关注的是 宏观  具体关注全局的微服务协调整理治理框架 将spring boot 开发的一个个单体服务整合 并管理起来</p><p>它为各个微服务之间提供 配置管理 服务发现 断路器路由 微代理 全局锁 分布式会话 等 集成服务</p><p>服务熔断：指的是由于某些原因使得服务出现过载的现象，为了防止造成整个系统故障，采取的一种保护措施。因此也被称为过载保护。</p><h4 id="什么是服务降级-微服务的优缺点"><a href="#什么是服务降级-微服务的优缺点" class="headerlink" title="什么是服务降级 微服务的优缺点"></a>什么是服务降级 微服务的优缺点</h4><p>服务降级：指的是整体资源不够时，忍痛将某些服务关掉，等度过难关，再将服务开启。</p><p>微服务优点：</p><ol><li>微服务足够内聚，足够小，代码容易理解。能够聚焦一个指定的业务功能或业务需求。</li><li>开发简单，开发效率高，一个微服务专一的只干一件事。</li><li>微服务能够被小团队单独开发，这个小团队可以是2-5人的开发人员组成。</li><li>微服务是松耦合的，是有功能意义的服务，无论是开发阶段或部署阶段都是独立的。</li><li>微服务能使用不同语言开发。</li><li>微服务易于被开发人员理解，修改和维护。这样小团队更能关注自己的工作成果，无需通过合作才能体现价值。</li><li>微服务允许你利用和融合最新技术。</li><li><strong>微服务只是业务逻辑的代码，不会和Html、CSS或其他界面组件混合。</strong></li><li><strong>每个微服务可以有自己的存储能力，可以有自己的数据库，也可以统一数据库。</strong></li></ol><p>微服务缺点： </p><ol><li>开发人员要处理分布式系统的复杂性。</li><li>多服务运维难度，随着服务的增加，运维的压力也增大。</li><li>系统部署依赖。</li><li>服务间通信成本。</li><li>数据一致性。</li><li>系统集成测试。</li><li>性能监控。</li></ol><h3 id="分布式、集群与微服务"><a href="#分布式、集群与微服务" class="headerlink" title="分布式、集群与微服务"></a>分布式、集群与微服务</h3><p>理解：  </p><p>分布式：多个人在一起做不同的事。<br>集群：多个人在一起做同样的事 。</p><p>区别概述：分布式是指将不同的业务分布在多个服务器上。而集群指的是将几台服务器集中在一起，实现同一业务。</p><p>微服务：是一种架构风格，一个大型复杂软件应用由一个或多个微服务组成。系统中的各个微服务可被独立部署，各个微服务之间是松耦合的。每个微服务仅关注于完成一件任务并很好地完成该任务。在所有情况下，每个任务代表着一个小的业务能力。</p><p>简单的说，微服务是架构设计方式，分布式是系统部署方式</p><p>详情参考：<a href="https://blog.csdn.net/qq_37788067/article/details/79250623" target="_blank" rel="noopener">传送门</a></p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis</title>
      <link href="/2020/04/28/Mybatis/"/>
      <url>/2020/04/28/Mybatis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><ol><li>Java.sql.DriverManager类：表示数据库驱动包的管理对象</li><li>Java.sql.Connection接口：表示数据库的连接对象</li><li>Java.sql.Statement接口：表示发送sql给数据库执行的对象</li><li>Java.sql.PreparedStatment接口：java.sql.Statement的子接口，表示sql预编译对象</li><li>Java.sql.ResultSet接口：表示从数据库查询返回的结果数据</li></ol><h4 id="Connection接口方法"><a href="#Connection接口方法" class="headerlink" title="Connection接口方法"></a>Connection接口方法</h4><ol><li>createStatement();创建一个对象将SQL语句发送到数据库</li><li>preparStatement(String sql)方法：创建一个对象来将参数化的sql语句发送到数据库</li></ol><h4 id="Statement接口方法"><a href="#Statement接口方法" class="headerlink" title="Statement接口方法"></a>Statement接口方法</h4><ol><li>execute(String sql):执行指定的SQL语句，该语句可能返回多个结果</li><li>executeUpdate(String sql):执行给定的sql语句，该语句可能是insert、delete、update语句，或者不返回任何语句（如SQL DDL语句）</li><li>executeQuery(String sql):执行给定的SQL语句，该语句返回单个ResultSet对象</li></ol><h4 id="PreparedStatement接口"><a href="#PreparedStatement接口" class="headerlink" title="PreparedStatement接口"></a>PreparedStatement接口</h4><ol><li>setObject(int parameterIndex,Object x):使用给定对象设置指定参数值</li><li>executeQuery():执行SQL查询，并返回查询生成的ResultSet对象</li></ol><h4 id="ResultSet接口"><a href="#ResultSet接口" class="headerlink" title="ResultSet接口"></a>ResultSet接口</h4><ol><li>next():将光标从当前位置向前移一行</li></ol><h4 id="传统的JDBC开发步骤"><a href="#传统的JDBC开发步骤" class="headerlink" title="传统的JDBC开发步骤"></a>传统的JDBC开发步骤</h4><ol><li>加载数据库驱动</li><li>创建并获取数据库连接</li><li>创建statement对象</li><li>拼写sql语句</li><li>设置sql语句中占位符的值</li><li>执行sql语句并获取结果</li><li>对sql执行结果进行解析处理</li><li>释放资源</li></ol><h3 id="MyBatis、Ibatis和Hibernate的关系"><a href="#MyBatis、Ibatis和Hibernate的关系" class="headerlink" title="MyBatis、Ibatis和Hibernate的关系"></a>MyBatis、Ibatis和Hibernate的关系</h3><p>MyBatis是ibatis的升级版，最主要的是MyBatis简化了编码过程，不需要去写dao实现类，直接写一个dao接口，再写一个xml文件，就可以配置好连接数据库了。而ibatis则必须写dao实现类。  </p><p>mybatis与hibernate的对比：  </p><p>1.相同点：Hibernate与MyBatis都可以是通过SessionFactoryBuider由XML配置文件生成SessionFactory，然后由SessionFactory 生成Session，最后由Session来开启执行事务和SQL语句。  </p><p>2.不同点：  </p><p>2.1 MyBatis是半自动的，Hibernate是全自动的<br>2.2 hibernate数据库移植性远大于mybatis<br>2.3 hibernate拥有完整的日志系统，mybatis则欠缺一些<br>2.4 mybatis相比hibernate需要关心很多细节<br>2.5 sql直接优化上，mybatis要比hibernate方便很多<br>2.6 缓存机制上，hibernate要比mybatis更好一些</p><p><a href="https://blog.csdn.net/eff666/article/details/71332386" target="_blank" rel="noopener">详情传送门</a></p><p>一、因为JDBC实在不好用，于是出现了ORM（对象关系映射Object relational Mapping）对Jdbc进行封装。MyBatis是一个持久层ORM框架，底层是对JDBC的封装。</p><p>二、MyBatis对JDBC操作数据库做了一系列的优化：  </p><p>（1） mybatis使用已有的连接池管理，避免浪费资源，提高程序可靠性。<br>（2） mybatis提供插件自动生成DAO层代码，提高编码效率和准确性。<br>（3） mybatis 提供了一级和二级缓存，提高了程序性能。<br>（4） mybatis使用动态SQL语句，提高了SQL维护。（此优势是基于XML配置）<br>（5） mybatis对数据库操作结果进行自动映射。  </p><h3 id="什么是MyBatis"><a href="#什么是MyBatis" class="headerlink" title="什么是MyBatis"></a>什么是MyBatis</h3><p><a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">官网传送门</a></p><ol><li><p>定义：MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</p></li><li><p>由于MyBatis是直接基于JDBC做了简单的映射包装，所以从性能来看： </p></li></ol><p>JDBC&gt;Mybatis&gt;Hibernate</p><ol start="3"><li>#{ }和${ }两者占位符的区别：</li></ol><p>#{ }：被解析为一个JDBC预编译语句（prepared statement）的参数占位符。使用它可以防止sql注入。<br>${ }：被解析为sql拼接符号，无法防止sql注入。</p><p>解释：所谓SQL注入式攻击，就是攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗服务器执行恶意的SQL命令。</p><h3 id="MyBatis框架结构图"><a href="#MyBatis框架结构图" class="headerlink" title="MyBatis框架结构图"></a>MyBatis框架结构图</h3><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/28/Mybatis/hexo_post_1.png"  alt></p><h3 id="Dao的开发"><a href="#Dao的开发" class="headerlink" title="Dao的开发"></a>Dao的开发</h3><p>一、Mybatis有两种方法开发dao，即原生dao开发和Mapper接口开发。</p><ol><li>原生dao开发：是指程序员需要编写dao接口和dao实现类。</li><li>Mapper接口开发：Mapper接口开发方法指需要程序员编写Mapper接口（相当于Dao接口），由Mybatis框架根据Mapper接口定义创建接口的动态代理对象（相当于dao实现类），由代理对象执行数据库操作。</li></ol><p>二、Mapper接口开发需要遵循以下规范</p><ol><li>Mapper.xml文件中的namespace与mapper接口的类路径相同。</li><li>Mapper接口方法名和Mapper.xml中定义的每个mapper statement的id相同 </li><li>Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同</li><li>Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同</li></ol><p>三、使用Mapper动态代理的好处</p><p>使用之前的session,selectOne(“test.findUserById”,1)，通过字符串调用标签定义的SQL，一是容易出错，而是XML中的id修改以后那么用了这个id的程序就都得改，这样比较麻烦<br>为了防止这些现象的出现，采用了Mapper方法。</p><h3 id="MyBatis配置详解"><a href="#MyBatis配置详解" class="headerlink" title="MyBatis配置详解"></a>MyBatis配置详解</h3><h4 id="配置内容和顺序（不能更改）"><a href="#配置内容和顺序（不能更改）" class="headerlink" title="配置内容和顺序（不能更改）"></a>配置内容和顺序（不能更改）</h4><p>SqlMapConfig.xml是Mybatis的全局配置文件，其配置的内容和顺序如下：</p><ol><li>properties(属性)</li><li>settings（全局配置参数）</li><li>typeAliases(类型别名)</li><li>typeHandlers(类型处理器)</li><li>objectFactory(对象工厂)</li><li>plugins(插件)</li><li>environments(环境集合属性对象)</li><li>environment（环境子属性对象）</li><li>transactionManager(事务管理)</li><li>dataSource(数据源)</li><li>mappers(映射器)</li></ol><h4 id="配置详情简介"><a href="#配置详情简介" class="headerlink" title="配置详情简介"></a>配置详情简介</h4><ol><li><p>properties(属性)：可以加载数据库配置信息，通过外部配置来方便动态替换。</p></li><li><p>settings(全局配置): settings是mybatis的全局配置参数，它是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为。<br>参数详情参考：<a href="https://blog.csdn.net/weixin_39805338/article/details/80893558" target="_blank" rel="noopener">传送门</a></p></li><li><p>typeAliases(类型别名): 类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。<br> 针对POJO类型需要自定义别名：</p><ol><li>单个定义别名<br>&lt; typeAlias alias=”userInfoModel”type=”cn.itlaobing.mybatis.model.UserInfoModel” /&gt;</li><li>批量定义别名，扫描整个包下的类，别名为类名（首字母大小写都可以）<br>&lt; package name=”cn.itlaobing.mybatis.model” /&gt;</li></ol></li><li><p>typeHandlers(类型处理器)：无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。Mybatis提供的typeHandlers已经满足大部分开发需求，通常开发人员不需要自定义typeHandlers。</p></li><li><p>objectFactory（对象工厂）：MyBatis 每次创建结果对象的新实例时，它都会使用一个对象工厂（ObjectFactory）实例来完成。</p></li><li><p>plugins（插件）：MyBatis 允许你在已映射语句执行过程中的某一点进行拦截调用。</p></li><li><p>environments（配置环境）：MyBatis 可以配置成适应多种环境，这种机制有助于将 SQL 映射应用于多种数据库之中， 现实情况下有多种理由需要这么做。<br> 例如，开发、测试和生产环境需要有不同的配置；或者共享相同 Schema 的多个生产数据库,想使用相同的 SQL 映射。<br> <strong>MyBatis 可以配置成适应多种环境</strong>，例如，开发、测试和生产环境需要有不同的配置；尽管可以配置多个环境，每个 SqlSessionFactory 实例只能选择其一。<br> 虽然，这种方式也可以做到很方便的分离多个环境，但是<strong>实际使用场景下，我们更多的是选择使用spring来管理数据源，来做到环境的分离。</strong></p><p> 详情链接 ：<a href="https://blog.csdn.net/hellozpc/article/details/80878563" target="_blank" rel="noopener">传送门</a></p></li><li><p>transactionManager（事务管理器）：在 MyBatis 中有两种类型的事务管理器（也就是 type=”[JDBC|MANAGED]”）</p></li><li><p>dataSource（数据源）：dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。</p></li><li><p>mappers（映射器）：mappers用于加载映射文件到全局配置文件中，Mybatis有四种加载配置文件的方法。分别是resource、url、class、package。其中resource方法一次加载一个映射文件，package方法可以实现批量加载，推荐使用。</p></li></ol><h3 id="输入映射parameterType"><a href="#输入映射parameterType" class="headerlink" title="输入映射parameterType"></a>输入映射parameterType</h3><p>Myabtis输入映射就是将java对象映射为SQL语句中列的值。<br>输入映射形式包括：简单类型、POJO类型、VO类型、HashMap类型。</p><ol><li>简单类型：比如需求：根据id查询指定的用户</li><li>POJO类型：比如需求：添加用户</li><li>VO类型：它的作用是把某个指定页面的所有数据封装起来，一个VO对象中可以对应数据库中的多张表。PO是持久对象，PO类与表对应，PO类中的属性与表的列对应。比如需求：多条件查询用户。</li><li>HashMap类型：比如需求：根据用户名和性别查询用户</li></ol><h3 id="输出映射resultType"><a href="#输出映射resultType" class="headerlink" title="输出映射resultType"></a>输出映射resultType</h3><p>注意：POJO（Plain Ordinary Java Object）即普通Java类，具有一部分getter/setter方法的那种类就可以称作POJO。<br>Mybatis的输出映射就是将查询的结果映射为java对象。resultType可以把查询结果封装到pojo类型中，但必须pojo类的属性名和查询到的数据库表的字段名一致。</p><ol><li>简单类型输出映射：需求：查询userInfo表的记录数量</li><li>POJO对象输出映射：需求：根据id查询指定用户</li><li>POJO集合输出映射：需求：查询所有用户</li><li>HashMap类型输出映射：需求：查询所有用户<h3 id="输出映射resultMap"><a href="#输出映射resultMap" class="headerlink" title="输出映射resultMap"></a>输出映射resultMap</h3></li></ol><p>如果出现字段和属性不一致，则需要手动配置映射方式，这时使用resultMap。比如列名是“user_id”,而属性名是“userId”。<br>注意：resultMap和resultType不能同时存在。另外还有resultMap 元素，它是 MyBatis 中最重要最强大的元素，它能提供级联查询，缓存等功能。<br>标签和属性分析：</p><ol><li>resultMap的id属性是它的唯一标识，是映射的POJO类</li><li>&lt; id&gt;标签映射主键，&lt; result&gt;标签映射非主键</li><li>property设置POJO的属性名称，column映射查询结果的列名称</li></ol><h3 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h3><p>定义：是指通过Mybatis提供的各种标签实现动态拼接SQL语句。<br>    1. where if:需求：多条件查询<br>    2. foreach:批量删除用户<br>    3. Sql片段：是指将重复的Sql提取出来，进行单独定义的节点。使用时用include引用Sql片段即可，最终达到Sql片段重用的目的。</p><h3 id="关联查询与缓存"><a href="#关联查询与缓存" class="headerlink" title="关联查询与缓存"></a>关联查询与缓存</h3><ol><li><p>表与表之间存在三种关系：分别是一对一、一对多、多对多。</p></li><li><p>关联查询：指在查询某张表数据的同时也查询与该表关联表中的数据。</p></li><li><p>缓存：指将已经查询出的对象缓存在内存中，再次查询该对象时从内存中直接获取，不再从数据库获取，从而提高程序的运行效率。</p></li><li><p>一对一关联查询：给出需求：查询所有订单分别是哪些顾客订购的。</p></li><li><p>有两种方法创建用于视图的VO类，一种是使用扩展列的VO类，另一种是使用扩展实体的POJO类。</p></li><li><p>一对多关联查询：需求：查询订单及其订单明细和订单用户<br>测试结果表明：一对多查询先于一对一查询执行打印出来。<br>问题：为什么orderdetailModel不能改为orderdetailModels?其他却可以改？<br>自己测试总结：private List<OrderdetailModel> orderdetailModel=null;代码中OrderdetailModel不能加s,否则编译错误，orderdetailModel也不行，否则找不到getting方法。</OrderdetailModel></p></li><li><p>多对多关联查询：需求：查询用户和用户购买的商品</p></li><li><p>补充：级联的优点是获取关联数据十分方便，但是级联过多会增加数据库系统的复杂度，同时降低系统的性能。如果表 A 中有一个外键引用了表 B 的主键，A 表就是子表，B 表就是父表。当查询表 A 的数据时，通过表 A 的外键将表 B 的相关记录返回，这就是级联查询。例如，当查询一个人的信息时，同时根据外键（身份证号）将他的身份证信息返回。</p></li></ol><h3 id="关联查询总结"><a href="#关联查询总结" class="headerlink" title="关联查询总结"></a>关联查询总结</h3><ol><li><p>resultType:<br>作用：将查询结果按照sql列名和pojo属性名一致性映射到pojo中。<br>场合：常见一些明细记录的展示，比如用户购买商品明细，将关联查询信息全部展示在页面时，此时可直接使用resultType将每一条记录映射到pojo中，在前端页面遍历list（list中是pojo）即可。  </p></li><li><p>resultMap:<br>联合查询必须用resultMap，它可以使用association（联合）和 collection（集合）完成一对一和一对多高级映射。<br>2.1 association：<br>2.1.1作用：<br>  实现一对一关联查询。将关联查询信息映射到一个pojo对象中。<br>2.1.2场合：<br>  为了方便查询关联信息可以使用association将关联订单信息映射为用户对象的pojo属性中，比如：查询订单及关联用户信息。<br>  使用resultType无法将查询结果映射到pojo对象的pojo属性中，根据对结果集查询遍历的需要选择使用resultType还是resultMap。</p><p>2.2collection：</p><p>2.2.1作用：<br> 实现一对多或多对多关联查询。将关联查询信息映射到一个list集合中。<br>2.2.2场合：<br> 为了方便查询遍历关联信息可以使用collection将关联信息映射到list集合中。<br>  比如：查询用户权限范围模块及模块下的菜单，可使用collection将模块映射到模块list中，将菜单列表映射到模块对象的菜单list属性中，这样的作的目的也是方便对查询结果集进行遍历查询。如果使用resultType无法将查询结果映射到list集合中。</p></li><li><p>总结两者：<br> resultMap可以实现延迟加载，resultType无法实现延迟加载。<br> resultMap使用association和collection分别完成一对一和一对多高级映射（对结果有特殊的映射要求）。</p></li></ol><h3 id="jdbc问题总结"><a href="#jdbc问题总结" class="headerlink" title="jdbc问题总结"></a>jdbc问题总结</h3><p>1、数据库连接创建、释放频繁造成系统资源浪费，从而影响系统性能。如果使用数据库连接池可解决此问题。<br>2、Sql语句在代码中硬编码，造成代码不易维护，实际应用中sql变化的可能较大，sql变动需要改变java代码。<br>3、使用preparedStatement向占有位符号传参数存在硬编码，因为sql语句的where条件不一定，可能多也可能少，修改sql还要修改代码，系统不易维护。<br>4、对结果集解析存在硬编码（查询列名），sql变化导致解析代码变化，系统不易维护，如果能将数据库记录封装成pojo对象解析比较方便。</p><h3 id="Mybatis解决jdbc编程问题"><a href="#Mybatis解决jdbc编程问题" class="headerlink" title="Mybatis解决jdbc编程问题"></a>Mybatis解决jdbc编程问题</h3><p>1、数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库连接池可解决此问题。<br>解决：在SqlMapConfig.xml中配置数据连接池，使用连接池管理数据库链接。<br>2、Sql语句写在代码中造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码。<br>解决：将Sql语句配置在XXXXmapper.xml文件中与java代码分离。<br>3、向sql语句传参数麻烦，因为sql语句的where条件不一定，可能多也可能少，占位符需要和参数一一对应。<br>解决：Mybatis自动将java对象映射至sql语句，通过statement中的parameterType定义输入参数的类型。<br>4、对结果集解析麻烦，sql变化导致解析代码变化，且解析前需要遍历，如果能将数据库记录封装成pojo对象解析比较方便。<br>解决：Mybatis自动将sql执行结果映射至java对象，通过statement中的resultType定义输出结果的类型。  </p><h3 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h3><ol><li><p>懒加载定义：MyBatis中的延迟加载，也称为懒加载，是指在进行表的关联查询时，使用Mybatis的懒加载特性可有效的减少数据库的压力。例如在进行一对多查询的时候，只查询出一方，当程序中需要多方的数据时，mybatis再发出sql语句进行查询，这样子延迟加载就可以的减少数据库压力。<br>Mybatis一对一关联的association和一对多的collection可以实现懒加载。懒加载时要使用resultMap，不能使用resultType。</p></li><li><p>启动懒加载：<br>Mybatis默认没有打开懒加载配置，需要在SqlMapperConfig.xml中通过settings配置lazyLoadingEnabled、aggressiveLazyLoading来开启懒加载。</p></li><li><p>懒加载总结：</p><ol><li><p>作用：</p><ol><li>当需要查询关联信息时再去数据库查询，默认不去关联查询，提高数据库性能。</li><li>只有使用resultMap支持懒加载设置。</li></ol></li><li><p>使用场合：</p><ol><li>当只有部分记录需要关联查询其它表的记录时，此时可按需延迟加载，需要关联查询时再向数据库发出sql，以提高数据库性能。</li><li>当全部需要关联查询信息时，此时不用懒加载，直接将关联查询信息全部返回即可，可使用resultType或resultMap完成映射。</li></ol></li><li><p>配置方法:</p><ol><li>Collection和association都需要配置select和column属性。</li><li>两者配置方法相同。</li></ol></li></ol></li></ol><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><h4 id="为什么使用缓存"><a href="#为什么使用缓存" class="headerlink" title="为什么使用缓存"></a>为什么使用缓存</h4><p>1.作用：为了减去数据库的压力，提高数据库的性能。缓存是使用Map集合缓存数据的。</p><p>2.MyBatis 的缓存分为一级缓存和二级缓存。</p><ol><li>一级缓存是 SqlSession 级别的缓存</li><li>二级缓存是 mapper 级别的缓存，多个 SqlSession 共享</li><li>一级缓存的作用域是同一个SQLSession</li><li>二级缓存的作用域是Mapper的同一个namespace</li><li>Mybtais默认开启一级缓存，二级缓存需要在settings全局参数中配置开启。</li></ol><h4 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h4><p>一级缓存是 SqlSession 级别的缓存，是基于 HashMap 的本地缓存。当同一个 SqlSession 执行两次相同的 sql 语句时，第一次执行完后会将数据库中查询的数据写到缓存，第二次查询时直接从缓存获取不用去数据库查询。不同的 SqlSession 之间的缓存数据区域互不影响。<br>Mybatis内部存储缓存使用一个HashMap缓存数据，key为hashCode+sqlId+Sql语句。Value为从查询出来映射生成的java对象。<br>当 SqlSession 执行 insert、update、delete 操作并commit提交到数据库后会清空缓存区域，保证缓存中的信息是最新的。防止后续查询发生脏读（脏读：查询到过期的数据）。</p><h4 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h4><p>二级缓存是 mapper 级别的缓存，同样是基于 HashMap 进行存储，多个 SqlSession 可以共用二级缓存，其作用域是 mapper 的同一个 namespace。不同的 SqlSession 两次执行相同的 namespace 下的 sql 语句，会执行相同的 sql，第二次查询只会查询第一次查询时读取数据库后写到缓存的数据，不会再去数据库查询。<br>    Mybatis内部存储缓存使用一个HashMap缓存数据，key为hashCode+sqlId+Sql语句。Value为从查询出来映射生成的java对象。<br>    当 SqlSession 执行 insert、update、delete 操作并commit提交到数据库后会清空缓存区域，保证缓存中的信息是最新的。防止后续查询发生脏读（脏读：查询到过期的数据）。</p><p>配置二级缓存：<br>第一步：在SqlMapperConfig.xml中启用二级缓存：<br>&lt; setting name=”cacheEnabled” value=”true”/&gt;<br>第二步：POJO序列化，将所有POJO类实现序列化接口。<br>第三步：在配置映射文件中添加<cache>,表示此mapper开启二级缓存</cache></p><h4 id="禁用二级缓存"><a href="#禁用二级缓存" class="headerlink" title="禁用二级缓存"></a>禁用二级缓存</h4><p>useCache=”false”:表示禁用二级缓存，每次查询都会发出sql去查询，默认情况是true.</p><h4 id="刷新缓存（清空缓存）"><a href="#刷新缓存（清空缓存）" class="headerlink" title="刷新缓存（清空缓存）"></a>刷新缓存（清空缓存）</h4><p>在mapper的同一个namespace中，如果有其它insert、update、delete操作数据后需要刷新缓存，设置fulshCache=”true”属性即可刷新缓存，默认是true.</p><h4 id="缓存总结"><a href="#缓存总结" class="headerlink" title="缓存总结"></a>缓存总结</h4><p>对于访问多的查询请求且用户对查询结果实时性不高时采用二级缓存技术降低数据库访问量，提高访问速度。例如耗时较高的统计分析sql。通过设置flushnternal（时间间隔），让其每隔一段时间自动清空缓存，比如设置为60分钟，24小时等。<br>对于实时性要求较高的查询不能使用缓存，例如股票行情。</p><h3 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h3><ol><li>定义：逆向工程是指根据数据库生成java代码，正向工程是指根据java代码生成数据库。</li><li>MyBatis一个主要的特点就是需要程序员自己编写SQL，那么如果表太多的话，难免会很麻烦，所以MyBatis官方提供了一个逆向工程，可以针对单表自动生成MyBatis执行所需要的代码（包括po类，mapper.xml映射文件和Mapper接口等）。一般在实际开发中，常用的逆向工程方式是通过数据库的表生成代码。</li></ol>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC</title>
      <link href="/2020/04/27/SpringMVC/"/>
      <url>/2020/04/27/SpringMVC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="SpringMVC框架"><a href="#SpringMVC框架" class="headerlink" title="SpringMVC框架"></a>SpringMVC框架</h2><h3 id="回顾Web编程的过程"><a href="#回顾Web编程的过程" class="headerlink" title="回顾Web编程的过程"></a>回顾Web编程的过程</h3><p>无论使用什么技术，什么框架，无非就是为了解决主要的5个问题：</p><ol><li>视图向控制器发出请求并提交数据。</li><li>控制器获取数据、对数据进行相应的类型转换、对数据进行验证、调用模型。</li><li>模型进行业务处理，并将业务处理后的数据返回给控制器。</li><li>控制器在将数据响应到视图。</li><li>视图对响应的数据进行渲染显示。</li></ol><h3 id="Spring-MVC架构（工作原理）"><a href="#Spring-MVC架构（工作原理）" class="headerlink" title="Spring-MVC架构（工作原理）"></a>Spring-MVC架构（工作原理）</h3><p> <img src="/img/loading.gif" class="lazyload" data-src="/2020/04/27/SpringMVC/hexo_post_1.png"  alt title="SpringMVC架构图"></p><p>底层执行流程：</p><ol><li>用户发送请求至前端控制器DispatcherServlet.</li><li>前端控制器DispatcherServlet接收请求后，调用处理器映射器HandlerMapping.</li><li>处理器映射器HandlerMapping根据请求的URL找到对应的Handler(即Controller),将处理器Handler返回给前端控制器DispatcherServlet.</li><li>前端控制器DispatcherServlet通过处理器适配器HandlerAdapter调用处理器Handler.</li><li>执行处理器Handler(即Controller,也叫后端控制器)。</li><li>处理器Handler执行完成后，返回ModelAndView(实体数据和视图)给处理器适配器HandlerApapter。</li><li>处理器适配器HandlerApapter将处理器Handler执行的结果ModelAndView返回给前端控制器DispatcherServlet。</li><li>前端控制器DispatcherServlet将ModelAndView穿给视图解析器ViewReslover。</li><li>视图解析器ViewReslover解析后返回具体视图View。</li><li>前端控制器DispatcherServlet对视图View进行渲染（即将模型数据填充到视图中）。</li><li>前端控制器DispatcherServlet响应用户。</li></ol><h3 id="SpringMVC提供的组件"><a href="#SpringMVC提供的组件" class="headerlink" title="SpringMVC提供的组件"></a>SpringMVC提供的组件</h3><ol><li>DispatcherServlet(前端控制器)</li><li>HandlerMapping(处理器映射器)</li><li>HandlerAdapter(处理器适配器)</li><li>ViewReslover(视图解析器)</li></ol><h3 id="需要程序员编写的组件"><a href="#需要程序员编写的组件" class="headerlink" title="需要程序员编写的组件"></a>需要程序员编写的组件</h3><ol><li>Handler（Controller） </li><li>View</li></ol><h3 id="pom-xml和web-xml的关系"><a href="#pom-xml和web-xml的关系" class="headerlink" title="pom.xml和web.xml的关系"></a>pom.xml和web.xml的关系</h3><p>这两个文件彼此无关。但可以共存使用。<br>pom.xml - Maven配置文件。控制构建过程 该项目<br>web.xml - Web应用程序配置文件。控制部署 和Web应用程序的配置<br>POM文件实际上不应该与应用程序一起部署，它仅用于构建过程。  </p><h3 id="什么是springMVC"><a href="#什么是springMVC" class="headerlink" title="什么是springMVC"></a>什么是springMVC</h3><p>springMVC是一种web层的MVC框架，用于替代servlet(处理|响应请求，获取表单数据，表单校验等)</p><h3 id="为什么要用springMVC"><a href="#为什么要用springMVC" class="headerlink" title="为什么要用springMVC"></a>为什么要用springMVC</h3><p>框架的作用就是用于简化编程的，相对于servlet来说，使获取表单参数，响应请求的操作变得更简单。</p><p>在web.xml中<servlet>标签下<load-on-startup>1</load-on-startup>的作用:<br>1)load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。<br>2)它的值必须是一个整数，表示servlet应该被载入的顺序<br>3)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；<br>4)当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。<br>5)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。<br>6)当值相同时，容器就会自己选择顺序来加载。  </servlet></p><h3 id="SpringMVC常用的注解"><a href="#SpringMVC常用的注解" class="headerlink" title="SpringMVC常用的注解"></a>SpringMVC常用的注解</h3><ol><li><p>@Controller 用于标记在一个类上，使用它标记的类就是一个SpringMVC Controller 对象。</p></li><li><p>@RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。常用属性有value和method。Value：指定请求的实际地址；method：指定请求的method类型， GET、POST、PUT、DELETE等；</p></li><li><p>@ModelAttribute 表示该Controller的所有方法在调用前，先执行此@ModelAttribute方法，可用于注解和方法参数中，可以把这个@ModelAttribute特性，应用在BaseController当中，所有的Controller继承BaseController，即可实现在调用Controller时，先执行@ModelAttribute方法。</p></li><li><p>@SessionAttributes即将值放到session作用域中，写在class上面。</p></li><li><p>@RestController<br> 当某个类中所有方法需要返回Json时，在类上进行标注，相当于@Controller和@ResponseBody，当标注@RestController时@Controller可以省略</p></li><li><p>@PathVariable<br> 注入URL模板变量，用于接受请求路径中传递的参数，只能用于传递并接受单个参数</p></li><li><p>@SessionAttributes(“user”)<br> 用于将注解中相同名称的value保存在session中</p></li><li><p>@Valid<br> 用来对客户端浏览器请求参数绑定的对象属性进行验证</p></li><li><p>@RequestParam：注入请求参数，相当于request.getParameter(“参数名”)  </p></li><li><p>@ResponseBody：获取请求内容当某个方法需要返回Json时，在方法上进行标注 </p></li></ol><p>补充：Model层是用于前端页面数据展示的，而entity层则是与数据库进行交互做存储用途。  </p><p>&lt; mvc:annotation-driven /&gt; 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。&lt; mvc:annotation-driven /&gt; 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的，即解决了@Controller注解使用的前提配置。  </p><h3 id="War包和jar包的区别"><a href="#War包和jar包的区别" class="headerlink" title="War包和jar包的区别"></a>War包和jar包的区别</h3><ol><li><p>jar包就是别人已经写好的一些类，然后对这些类进行打包。可以将这些jar包引入到你的项目中，可以直接使用这些jar包中的类和属性，这些jar包一般放在lib目录下。  </p></li><li><p>war包是JavaWeb程序打的包，war包里面包括写的代码编译成的class文件，依赖的包，配置文件，所有的网站页面，包括html，jsp等等。一个war包可以理解为是一个web项目，里面是项目的所有东西。</p></li><li><p>什么时候使用WAR文件呢？在开发阶段不适合使用WAR文件，因为在开发阶段，经常需要添加或删除Web应用程序的内容，更新 Servlet类文件，而每一次改动后，重新建立WAR文件将是一件浪费时间的事情。在产品发布阶段，使用WAR文件是比较合适的，因为在这个时候，几乎不需要再做什么改动了。</p></li></ol><h3 id="SpringMVC三种控制器"><a href="#SpringMVC三种控制器" class="headerlink" title="SpringMVC三种控制器"></a>SpringMVC三种控制器</h3><ol><li>ParameterizableViewController(参数控制器)：只起到跳转页面的作用。</li><li>AbstractCommandController(命令控制器)：可以接受实体类型的controller。</li><li>FormController(表单控制器)：可以接受表单数据的controller。</li></ol><p>注解说明：  </p><ol><li>@GetMapping相当于@RequestMapping(method = RequestMethod.GET)。</li><li>@PostMapping相当于@RequestMapping(method = RequestMethod.POST)。</li><li>@PutMapping相当于@RequestMapping(method = RequestMethod.PUT)。跟PostMapping的区别为偏向于PutMapping更新数据，PostMapping偏向于添加数据</li><li>@DeleteMapping相当于@RequestMapping(method = RequestMethod.DELETE)</li><li>@PatchMapping<br>当我们要执行的方法只支持一种请求方式的时候，这五个annotation更加方便直观。但如果一个方法需要同时支持几种请求方式的时候，就需要使用@RequestMapping了。</li></ol><blockquote><p>详情传送门：<a href="https://blog.csdn.net/luckyzhoustar/article/details/46874793" target="_blank" rel="noopener">https://blog.csdn.net/luckyzhoustar/article/details/46874793</a></p></blockquote><h3 id="SpringMVC拦截器"><a href="#SpringMVC拦截器" class="headerlink" title="SpringMVC拦截器"></a>SpringMVC拦截器</h3><ol><li><p>定义：Spring web MVC的处理器拦截器类似于Servlet开发中的过滤器Filter，用于对处理器 进行预处理和后处理。</p></li><li><p>常见应用场景：</p><p>2.1、日志记录 ：记录请求信息的日志<br>2.2、权限检查，如登录检查<br>2.3、性能检测：检测方法的执行时间  </p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/27/SpringMVC/hexo_post_2.jpg"  alt title="拦截器与Filter的区别"></p></li></ol><h3 id="springMVC和servlet对比"><a href="#springMVC和servlet对比" class="headerlink" title="springMVC和servlet对比"></a>springMVC和servlet对比</h3><ol><li>servlet性能好springMVC开发效率高，是对servlet的封装。</li><li>如同MyBatis和JDBC，一个性能好，一个开发效率高，是对另一个的封装。</li></ol><h3 id="SpringMVC和struts2的区别"><a href="#SpringMVC和struts2的区别" class="headerlink" title="SpringMVC和struts2的区别"></a>SpringMVC和struts2的区别</h3><ol><li>加载机制不同：spring mvc的入口是servlet，而struts2是filter；</li><li>性能：spring mvc 在性能上会稍微比struts2快。</li><li>参数传递：strus2的类属性可与所有方法共享。SpringMVC方法之间基本上是独立的，方法之间不共享变量。</li><li>框架集成：springMVC和spring是无缝连接，在项目的管理和安全上比struts2高。</li><li>数据验证：springMVC验证支持JSR303(一种数据验证的规范)，处理起来比Struts2相对方便灵活。</li><li>Ajax交互：spring mvc处理ajax的请求十分方便，只需一个注解@ResponseBody ，然后直接返回响应文本即可；而Struts2拦截器集成了Ajax，在Action中处理时一般必须安装插件或者自己写代码集成进去，使用起来也相对不方便；</li><li>拦截机制的实现：spring mvc用的是独立的AOP方式实现，而struts2有自己的interceptor机制，这样导致了struts2的配置文件量又比spring mvc大；</li><li>RESTful架构的实现：spring mvc是方法级别的拦截，一个方法对应一个request上下文，而方法同时又跟一个url对应，所以说从架构本身上spring mvc就容易实现restful url；</li><li>struts2是类级别的拦截，一个类对应一个request上下文，struts2 action的一个方法可以对应一个url；而其类属性却被所有方法共享，这也就无法用注解或其他方式标识其所属方法了，所以实现restful url比较费劲。</li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringMVC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用手册</title>
      <link href="/2020/04/26/Butterfly%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
      <url>/2020/04/26/Butterfly%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本篇文章只记录自己平时使用到的主题设置内容，详情可参考<a href="https://jerryc.me/posts/4aa8abbe/#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AA%AC%E6%98%8E" target="_blank" rel="noopener">传送门</a></p><h2 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h2><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>日期</td></tr><tr><td>type</td><td>类型，tags,link,categories 这三个页面需要配置</td></tr><tr><td>comments</td><td>是否显示评论，默认 true</td></tr><tr><td>description</td><td>描述</td></tr><tr><td>top_img</td><td>顶部图</td></tr><tr><td>aside</td><td>true 表示显示右边信息卡片，默认值；false 表示不显示</td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>标题</td></tr><tr><td>date</td><td>时间</td></tr><tr><td>tags</td><td>标签</td></tr><tr><td>categories</td><td>分类</td></tr><tr><td>top_img</td><td>顶部图，除非特定需要，可以不写</td></tr><tr><td>comments</td><td>是否显示评论（除非设置 false, 可以不写）</td></tr><tr><td>cover</td><td>缩略图（文章封面）</td></tr><tr><td>top</td><td>文章置顶 (true,false)</td></tr><tr><td>hide</td><td>是否隐藏（true，false）</td></tr></tbody></table><h2 id="文章置頂"><a href="#文章置頂" class="headerlink" title="文章置頂"></a>文章置頂</h2><p>给文章置顶所需步骤：</p><ol><li>打开hexo根目录执行Git Bash Here窗口  </li><li>首先执行 npm uninstall hexo-generator-index –save  </li><li>然后再 npm install hexo-generator-index-pin-top –save  </li><li>最后在文章的front-matter区域添加 top:true即可文章置顶</li><li>记得hexo clean + hexo g 才能生效</li></ol><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>配置butterfly主题下的_config.yml，将enbale值改为true即可开启：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 为避免卡顿，建议只开一个</span><br><span class="line"># 点击火焰特效</span><br><span class="line">fireworks:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"># 点击爱心特效</span><br><span class="line">click_heart:</span><br><span class="line">  enable: false</span><br><span class="line">  </span><br><span class="line"># 点击出现文字，文字可自行修改</span><br><span class="line">ClickShowText:</span><br><span class="line">  enable: true</span><br><span class="line">  text:</span><br><span class="line">    - 最近有点失眠</span><br><span class="line">    - 每天被自己帅醒</span><br><span class="line">    - 帅哥的烦恼</span><br><span class="line">    - 凡人不懂</span><br><span class="line">    - 富强</span><br><span class="line">    - 民主</span><br><span class="line">    - 文明</span><br><span class="line">    - 和谐</span><br><span class="line">    - 自由</span><br><span class="line">    - 平等</span><br><span class="line">    - 公正</span><br><span class="line">    - 法治</span><br><span class="line">    - 爱国</span><br><span class="line">    - 敬业</span><br><span class="line">    - 诚信</span><br><span class="line">    - 友善</span><br><span class="line">  fontSize: 30px</span><br></pre></td></tr></table></figure><h2 id="美化页面显示"><a href="#美化页面显示" class="headerlink" title="美化页面显示"></a>美化页面显示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">beautify:</span><br><span class="line">  enable: true</span><br><span class="line">  title-prefix-icon: &#39;\f0c1&#39;</span><br><span class="line">  title-prefix-icon-color: &quot;#F47466&quot;</span><br></pre></td></tr></table></figure><h2 id="跟随鼠标线条"><a href="#跟随鼠标线条" class="headerlink" title="跟随鼠标线条"></a>跟随鼠标线条</h2><p>配置 _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">canvas_nest:</span><br><span class="line">  enable: true</span><br><span class="line">  color: &#39;0,0,255&#39; #color of lines, default: &#39;0,0,0&#39;; RGB values: (R,G,B).(note: use &#39;,&#39; to separate.)</span><br><span class="line">  opacity: 0.7 # the opacity of line (0~1), default: 0.5.</span><br><span class="line">  zIndex: -1 # z-index property of the background, default: -1.</span><br><span class="line">  count: 99 # the number of lines, default: 99.</span><br><span class="line">  mobile: false #  false 手机端不显示 true 手机端显示</span><br></pre></td></tr></table></figure><h2 id="动态彩带背景"><a href="#动态彩带背景" class="headerlink" title="动态彩带背景"></a>动态彩带背景</h2><p>配置 _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">canvas_ribbon_piao:</span><br><span class="line">  enable: true</span><br><span class="line">  mobile: false # false 手機端不顯示 true 手機端顯示</span><br></pre></td></tr></table></figure><h2 id="首页弹幕座右铭"><a href="#首页弹幕座右铭" class="headerlink" title="首页弹幕座右铭"></a>首页弹幕座右铭</h2><p>配置 _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 主頁弹幕座右铭</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # 打字效果</span><br><span class="line">  effect: true</span><br><span class="line">  # 循环</span><br><span class="line">  loop: true</span><br><span class="line">  source: false</span><br><span class="line">  # (如果有英文逗号&#39; , &#39;，請使用转义字符 &amp;#44;)</span><br><span class="line">  # 如果关闭打字效果，subtitle只会显示sub的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - 世间安得双全法&amp;#44;不负韶华不负卿！</span><br><span class="line">    - 近水楼台先得月，向阳榆木易逢春！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="/2020/04/25/Spring/"/>
      <url>/2020/04/25/Spring/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Spring框架简介"><a href="#Spring框架简介" class="headerlink" title="Spring框架简介"></a>Spring框架简介</h2><p>Spring是一个一站式的框架，提供了表现层（springMVC）到业务层（Spring）再到数据层（Springdata）的全套解决方案；Spring的两大核心Ioc（控制反转）和AOP(面向切面编程）更是给我们的程序解耦和代码的简介提供了支持。</p><p>AOP与IOC</p><pre><code>（1）AOP与IOC给spring的业务层提供支持，使程序的耦合度更低，代码更简洁（2）AOP原理：既面向切面编程，就是提取公共部分，集中解决一些公共问题（3）IOC原理：控制反转。在传统过程中，当某一个对象依赖于另外一个对象时，会由该对象去创建另外一个对象，有了ioc后，将创建过程交给IOC,由spring创建bean，从而只需给该对象注入即可。</code></pre><h2 id="控制反转和依赖注入的理解"><a href="#控制反转和依赖注入的理解" class="headerlink" title="控制反转和依赖注入的理解"></a>控制反转和依赖注入的理解</h2><blockquote><p>详情地址：<a href="https://blog.csdn.net/sinat_21843047/article/details/80297951" target="_blank" rel="noopener">https://blog.csdn.net/sinat_21843047/article/details/80297951</a></p></blockquote><ol><li>Ioc是什么：即“控制反转”，是一种设计思想。意味着将你设计的对象交给容器控制，而不是传统的在你的对象内部直接控制。传统的JavaSE设计，我们是直接通过new来创建对象，由程序主动去创建对象，也就是<strong>正转</strong>；而现在是通过Ioc容器来控制对象的创建，因为由容器帮我们查找及注入依赖对象，对象只是被动的接受依赖对象，所以是<strong>反转</strong>；</li><li>Ioc能做什么：Ioc对编程带来的最大改变不是从代码上，而是从思想上，发生了“主从换位”的变化。很好的体现了面向对象设计法则之一——好莱坞法则：“别找我们，我们找你”，即由Ioc容器帮对象找相应的依赖对象并注入，而不是由对象主动去找。</li><li>DI即“依赖注入”，由容器动态的将某个依赖关系注入到组件中，依赖注入的目的并非为软件系统带来更多的功能，而是为了提升组件重用的效率，并为系统搭建一个灵活、可拓展的平台。</li><li>深入分析：<br>谁依赖于谁：当然是应用程序依赖于IoC容器；<br>为什么需要依赖：应用程序需要IoC容器来提供对象需要的外部资源；<br>谁注入谁：很明显是IoC容器注入应用程序某个对象，应用程序依赖的对象；<br>注入了什么：就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。  </li><li>Ioc和DI是什么关系？<br>属于<strong>同一个概念的不同角度的描述。</strong>由于控制反转概念比较含糊（可能只是理解为容器控制对象这一层面，很难让人想到谁来维护对象关系），相对于Ioc而言，<strong>“依赖注入”明确描述了“被注入对象依赖Ioc容器配置依赖对象”。</strong></li><li>Spring的核心:所谓Ioc,对于Spring框架来说，就是由Spring来负责控制对象的生命周期和对象间的关系。</li><li>Spring所倡导的开发方式就是如此，所有的类都会在Spring容器中登记，告诉Spring你是个什么东西，你需要什么东西，然后Spring会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要您的东西。所有的类的创建、销毁都由Spring来控制，也就是说控制对象生命周期的不再是引用它的对象，而是Spring.对于某个具体对象而言，以前是它控制其他对象，现在是所有对象都被Spring控制，所以这叫控制反转。</li><li>DI(依赖注入)：Ioc的一个重点是在系统运行中，动态的向某个对象提供他所需要的其他对象。这一点是通过DI来实现的。</li><li>反射，它允许程序在运行的时候动态的生成对象、执行对象的方法、改变对象的属性，Spring就是通过反射来实现注入的。</li></ol><h2 id="关于Spring-AOP"><a href="#关于Spring-AOP" class="headerlink" title="关于Spring AOP"></a>关于Spring AOP</h2><p>AOP:AOP的出现确实解决外围业务代码和核心业务代码分离的问题，但它并不会替代OOP,如果说OOP的出现是把编码问题进行模块化，那么AOP就是把涉及到众多模块的某一类问题进行统一管理，因此在实际开发中AOP和OOP同时存在并不奇怪。</p><h3 id="如何使用Spring-AOP"><a href="#如何使用Spring-AOP" class="headerlink" title="如何使用Spring AOP"></a>如何使用Spring AOP</h3><p>可以通过配置文件或者编程的方式来使用Spring AOP。<br>配置可以通过xml文件来进行，大概有四种方式：</p><ol><li><p>配置ProxyFactoryBean，显式地设置advisors, advice, target等</p></li><li><p>配置AutoProxyCreator，这种方式下，还是如以前一样使用定义的bean，但是从容器中获得的其实已经是代理对象</p></li><li><p>通过&lt; aop:config&gt;来配置</p></li><li><p>通过&lt; aop: aspectj-autoproxy&gt;来配置，使用AspectJ的注解来标识通知及切入点</p></li></ol><h2 id="Spring的优势"><a href="#Spring的优势" class="headerlink" title="Spring的优势"></a>Spring的优势</h2><ol><li>方便解耦，简化开发：控制反转将对象的创建交给了spring,简化了开发，降低了代码之间的耦合性和侵入性。</li><li>声明式事务的支持：方便对程序进行声明式事物管理，只需通过配置就可以完成对事物管理。提高开发效率和质量。</li><li>方便集成各种优秀框架：降低各种框架的使用难度，其内部提供了对各种优秀框架如(struts2，hibernate,mybatis,quartz，jpa)等的直接支持。</li><li>方便程序的测试：可以用非容器方式进行几乎所有的测试工作，使测试工作不再昂贵，而是随手可测。</li><li>降低javaEE API的使用难度：JDBC,Javamail,远程调用等，spring对它们进行了封装，使这些API的使用难度大大降低。</li></ol><h2 id="JavaBean的含义"><a href="#JavaBean的含义" class="headerlink" title="JavaBean的含义"></a>JavaBean的含义</h2><p>JavaBeans是Java中一种特殊的类，可以将多个对象封装到一个对象（bean）中。特点是可序列化，提供无参构造器，提供getter方法和setter方法访问对象的属性。名称中的“Bean”是用于Java的可重用软件组件的惯用叫法。</p><p>总结：  </p><ol><li>所有属性必须为private</li><li>提供默认构造方法</li><li>提供getter和setter，必须给私有属性提供公开的方法以供外部调用。</li><li>实现serializable接口</li></ol><p>补充：servlet的本质其实也是一个java bean，controller是对servlet的封装，底层依旧是servlet。</p><p>Bean的作用域<br>　　1. Spring提供了4种作用域：singleton(单例)  prototype(原型)  Session(会话)  request(请求)<br>　　2. XML中的bean中有属性：scope ，默认是单例，可以设置为原型。会话和请求的作用域需要在web.xml中配置</p><p>　　3. 注解中有注解@Scope(“singleton”),@Scope(“prototype”),默认是单例，可以设置为原型。</p><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><p>一中常见的软件设计模式，该模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。</p><p>为何使用：该模式主要解决一个全局使用的类频繁的创建和销毁，当你想控制实例数目和节省系统资源的时候可以使用。</p><p><strong>单例模式的实现方式：</strong>  </p><ol><li>懒汉式：优点是第一次调用才初始化，避免内存浪费，缺点是必须加锁才能保证单例，影响效率。</li><li>饿汉式：没有加锁，执行效率会提高，但是类加载时就初始化，浪费内存。</li><li>双检锁：实现难度复杂，采用双锁机制，安全且多线程情况下能保持高性能。</li><li>枚举：这种实现方式还没有被广泛采用，但这是实现单例模式的最佳方法。它更简洁，自动支持序列化机制，绝对防止多次实例化。</li></ol><p><strong>懒加载与非懒加载的优缺点：</strong></p><p>懒加载：对象使用的时候才去创建，节省资源，但是不利于提前发现错误。</p><p>非懒加载：容器启动的时候立刻创建对象。消耗资源。利于提前发现错误。</p><p>当scope=“prototype” (多例)时，默认以懒加载的方式产生对象。</p><p>当scope=“singleton” (单例)时，默认以非懒加载的方式产生对象。</p><h2 id="Spring优化配置"><a href="#Spring优化配置" class="headerlink" title="Spring优化配置"></a>Spring优化配置</h2><ol><li>在Spring中，bean的依赖注入有两种方法，第一种使用xml配置，第二种使用annotation注解配置。<br>在applicationContext.xml中配置&lt; context:annotation-config/&gt;来启用。  <ol><li>@Resource注解可以标注在属性和方法上。默认按照对象名称注入属性值，其次是按类型。  </li><li>@Autowired注解按照类型注入，默认情况下他要求依赖的对象必须存在，如果允许为null，可以设置它的required属性为false.</li><li>@Qualifier,如果@Autowired想使用对象名称注入，可结合@Qualifier注解确定注入的对象名称。</li></ol></li><li>启用组件扫描：&lt; context:component-scan base-package=”cn.itlaobing.jdbc”/&gt;</li></ol><p>常用组件：<br>  @Service：用于在业务类上<br>  @Controller：用于配置在控制器上，表明该类可以接收请求并进行响应<br>  @Respository：用于配置在数据访问组件上<br>  @Component：用于配置在以上三种组件之外的组件上<br>  @Scope:可设置bean的作用域<br>  @Responsebody： 注解表示该方法的返回的结果直接写入 HTTP 响应正文  （ResponseBody）中，一般在异步获取数据时使用，通常是在使@RequestMapping 后，返回值通常解析为跳转路径，加上 @Responsebody 后返回结果不会被解析为跳转路径，而是直接写入HTTP 响应正文中。<br>  @Autowired：自动注入，注入方式为byType<br>  @Qualifier：Autowired默认是用byType类型注入，如果出现相同类型，则要搭配此注解使用</p><p>  作用：<br>  @Responsebody注解用于将Controller的方法返回的对象，通过适当的HttpMessageConverter转换为指定格式后，写入到Response对象的body数据区。<br>  使用时机：<br>  返回的数据不是html标签的页面，而是其他某种格式的数据时（如json、xml等）使用；</p><p>  两种方法对比：<br>  &lt; context:annotation-config/&gt;只负责属性的注入<br>  &lt; context:component-scan base-package=”cn.itlaobing.jdbc”/&gt;负责组件扫描和属性注入。只启用它就包括了&lt; context:annotation-config/&gt;的功能</p><ol start="3"><li>Java-based:实现免xml的开发体验<br>@Bean注解用于标注在方法上，相当于xml文件中的<bean>，通常和@Configuration一起使用。<br>@Configuration：用于标注在类上，表示该类是一个配置类，相当于一个xml配置文件。<br>@ImportResource注解标注在类上，表示该类导入的外部资源。  </bean></li></ol><p>Annotation和xml各自作为配置项的优点与缺点。<br>一、Annotation 的优点<br>　　１、保存在 class 文件中，降低维护成本。<br>　　２、无需工具支持，无需解析。<br>　　３、编译期即可验证正确性，查错变得容易。<br>　　４、提升开发效率。<br>　Annotation 缺点：<br>　　１、若要对配置项进行修改，不得不修改 Java 文件，重新编译打包应用。<br>　　２、配置项编码在 Java 文件中，可扩展性差。<br>二、XML<br>  目前web应用中几乎都使用xml作为配置项，例如我们常用的框架Struts、Spring、Hibernate、IBatis等等都采用xml作为配置。<br> XML优点：<br>　　1. xml作为可扩展标记语言最大的优势在于开发者能够为软件量身定制适用的标记，使代码更加通俗易懂。<br>　　2. 利用xml配置能使软件更具扩展性。<br>　　3. 具有成熟的验证机制确保程序正确性，避免非法的配置导致应用程序出错。<br>　　4. 修改配置而无需变动现有程序。  </p><p>XML缺点：</p><ol><li>需要解析工具或类库的支持。   </li><li>解析xml占用系统资源。  </li><li>配置文件过多导致管理变得困难。</li><li>开发效率低下。</li><li>查错变得困难。往往配置的一个手误导致莫名其妙的错误。 </li><li>配置项与代码间存在潜规则。改变了任何一方都有可能影响另外一方。 </li></ol><p>Spring测试：<br>传统的单元测试都是使用Junit测试框架下进行的，Spring的单元测试也可以在junit框架下进行，但存在一些问题：<br>一、使用Junit对spring进行单元测试缺点：</p><ol><li>性能开销大</li><li>不应该由测试代码管理spring容器，应该反过来。</li><li>无法独立于服务器完成事务测试。</li></ol><p>二、使用Spring Test进行单元测试优点：  </p><ol><li>减少开销</li><li>可以直接使用@AutoWired注入spring容器或Bean</li><li>支持事务测试，集成测试等。  </li></ol><p>Spring AOP:<br>AOP定义：AOP是OOP的延续，称为面向切面编程。通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。  </p><p>AOP与OOP:  </p><ol><li>OOP实际是对对象的属性和行为进行抽象封装</li><li>AOP则只是处理某个步骤和阶段的时候，从中进行切面的提取，如权限判断、日志记录</li></ol><p>@Aspect：定义切面，用于标注类（切面类），类中包含@Pointcut和Advice（通知）方法<br>@Pointcut:定义切入点</p><p>AOP主要功能<br>日志记录，性能统计，安全控制，事务处理，异常处理等等wn及扩展</p><p>AOP主要意图<br>将日志记录，性能统计，安全控制，事务处理，异常处理等代码从业务逻辑代码中划分出来，通过对这些行为的分离，我们希望可以将它们独立到非指导业务逻辑的方法中，进而改变这些行为的时候不影响业务逻辑的代码  </p><p>代理（Proxy）<br>AOP是通过代理实现的在不改变原有代码的前提下，实现增强业务功能。<br>代理模式有多种：静态代理、JDK动态代理、CGLib代理等。Spring AOP使用的是CGLib代理。  </p><p>Spring支持事务类型：编程式事务和声明式事务<br>编程式事务是在代码中在代码中显式调用开启事务、提交事务、回滚事务的相关方法，与业务的耦合度高，难以复用<br>声明式事务：本质使用AOP，将业务和事务管理分离，降低耦合度和提高事务的复用能力。声明式事务可以通过注解和配置来管理事务，操作简单。  </p><p>事务的特性：<br>原子性：表明事务是不可再分的，即要么都执行，要么都不执行。<br>一致性：表明事务在执行前后数据处于一致的状态。<br>隔离性：表明一个事物的执行，不受其他事物的影响，即并发执行的事务互不干扰。<br>持久性：表明事务的执行对数据的更改是永久的。  </p><p>Spring声明式事务的提交行为：<br>Spring的声明式事务是AOP的一种应用，将@Transactional注解标注在业务上，表示告诉Spring容器，该方法调用前要打开事务，方法调用结束后提交或回滚事务。</p><p>在企业级应用中，多用户访问数据库是常见的场景，这就是所谓的事务的并发。事务并发所可能存在的问题：  </p><ol><li>脏读：一个事务读到另一个事务未提交的更新数据。</li><li>不可重复读：一个事务两次读同一行数据，可是这两次读到的数据不一样。</li><li>幻读：一个事务执行两次查询，但第二次查询比第一次查询多出了一些数据行。</li><li>丢失更新：撤消一个事务时，把其它事务已提交的更新的数据覆盖了。</li></ol><p>注解与反射<br>1.注解定义：是一种元数据，代码级别的注释。</p><p>元数据(MetaData)：即定义数据的数据.比如,我们要搜索一首歌(歌本身就是数据),可以通过歌名,歌手,专辑等信息来搜索,这些歌名,歌手,专辑就是这首歌的元数据.因此数据库的元数据就是一些注明数据库信息的数据。  </p><p>2.注解的作用：  </p><ol><li>编写文档: 通过代码里标识的注解生成文档. [ 例: 生成doc文档 ]</li><li>代码分析: 对代码进行分析. [ 例: 注解的反射 ]</li><li>编译检查: 让编译器能够实现基本的编译检查. [ 例: Override ]</li></ol><p>3.反射定义：在运行期间，动态的去获取类中的信息(类的信息,方法信息,构造器信息,字段等信息)。<br>创建对象可以通过new运算符硬编码方式创建对象，也可以通过反射机制在运行时动态的创建对象。</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客功能添加</title>
      <link href="/2020/04/25/Hexo%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E6%B7%BB%E5%8A%A0/"/>
      <url>/2020/04/25/Hexo%E5%8D%9A%E5%AE%A2%E5%8A%9F%E8%83%BD%E6%B7%BB%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h3><pre><code>在每篇文章的结尾有打赏的按钮，需要把收款图片复制到themes主题下的Butterfly\source\img文件夹中  相关配置在Butterfly主题的_config.yml中# 打賞按鈕reward:  enable: true  QR_code:    - itemlist:        img: /img/wechat.jpg        text: 微信    - itemlist:        img: /img/alipay.jpg        text: 支付宝</code></pre><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><p><strong>安装</strong></p><p>在 hexo 根目录的 package.json 中添加<code>"hexo-blog-encrypt": "1.1.*"</code> 依赖。<br>然后执行 <strong>npm install</strong> 命令（失败时可以 <strong>cnpm install</strong> 命令下载）。<br>该插件会自动安装</p><p>快速开始</p><ul><li>首先在 _config.yml 中启用该插件:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Security 设置加密</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure><ul><li>在需要加密的文章的头部加上对应的字段，如 password, message</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">title: XXXX项目</span><br><span class="line">author: PanXiaoKang</span><br><span class="line">tags:</span><br><span class="line"></span><br><span class="line">  - XXX</span><br><span class="line">  - XX笔记</span><br><span class="line">    categories:</span><br><span class="line">  - XXX</span><br><span class="line">    date: 2020-04-18 23:26:00</span><br><span class="line">    </span><br><span class="line">message: 您好，本篇文章需密码访问，请谅解！</span><br><span class="line">password: 设置自己的密码</span><br></pre></td></tr></table></figure><h3 id="ICP备案国徽图标显示"><a href="#ICP备案国徽图标显示" class="headerlink" title="ICP备案国徽图标显示"></a>ICP备案国徽图标显示</h3><pre><code>1.修改主题配置文件themes/Butterfly/_config.yml的ICP属性，为其添加国徽图标的路径pic： </code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ICP:  </span><br><span class="line">  enable: ture  </span><br><span class="line">  pic: &#x2F;img&#x2F;beian.png  #备案国徽小图路径  </span><br><span class="line">  url: http:&#x2F;&#x2F;www.beian.gov.cn  </span><br><span class="line">  text: 黔ICP备12345678号</span><br></pre></td></tr></table></figure><pre><code>2.修改themes/Butterfly/layout/includes/footer.pug该文件内代码  </code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if theme.ICP.enable</span><br><span class="line">    .icp</span><br><span class="line">      a(href&#x3D;theme.ICP.url)</span><br><span class="line">        if theme.ICP.icon</span><br><span class="line">          img.icp-icon(src&#x3D;url_for(theme.ICP.icon))</span><br><span class="line">        span&#x3D;theme.ICP.text</span><br></pre></td></tr></table></figure><h3 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a>友情链接添加</h3><p>在 Hexo 博客目录中的 source/_data，创建一个文件 link.yml，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">class:</span><br><span class="line">  class_name: 友情链接</span><br><span class="line">  link_list:</span><br><span class="line">    1:</span><br><span class="line">      name: 刘向洋博主</span><br><span class="line">      link: https:&#x2F;&#x2F;liuxiangyang.space&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;LiuXiangYang-Git&#x2F;cloudimg&#x2F;img-2&#x2F;%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200408193536.jpg</span><br><span class="line">      descr: Butterfly</span><br><span class="line">    2:</span><br><span class="line">      name: JerryC博主</span><br><span class="line">      link: https:&#x2F;&#x2F;jerryc.me&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;yafine-blog.cn&#x2F;medias&#x2F;avatar.jpg</span><br><span class="line">      descr: Butterfly</span><br><span class="line">    3:</span><br><span class="line">      name: Athink博主</span><br><span class="line">      link: https:&#x2F;&#x2F;blog.onfree.cn&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;cdn.maxbill.cn&#x2F;blog&#x2F;img&#x2F;avatar.png</span><br><span class="line">      descr: 导航收藏</span><br><span class="line">    4:</span><br><span class="line">      name: 小破枪的书房</span><br><span class="line">      link: https:&#x2F;&#x2F;pistol.city&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;02&#x2F;09&#x2F;IuJO45MXhRbQcrL.jpg</span><br><span class="line">      descr: 结绳记事</span><br><span class="line">    5:</span><br><span class="line">      name: 程序羊</span><br><span class="line">      link: https:&#x2F;&#x2F;www.codesheep.cn&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;www.codesheep.cn&#x2F;css&#x2F;images&#x2F;codesheep_logo_heart.jpg</span><br><span class="line">      descr: 知识星球</span><br><span class="line">    6:</span><br><span class="line">      name: CloudAndBoy</span><br><span class="line">      link: https:&#x2F;&#x2F;www.clboy.cn&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;www.clboy.cn&#x2F;upload&#x2F;2019&#x2F;9&#x2F;cloudlandboy_big-9fd24c92e6044b04a6a64b0206bea4c1.png</span><br><span class="line">      descr: 我的笔记</span><br><span class="line"></span><br><span class="line">class2:</span><br><span class="line">  class_name: 实用链接</span><br><span class="line">  link_list:</span><br><span class="line">    1:</span><br><span class="line">      name: 喵喵博主</span><br><span class="line">      link: https:&#x2F;&#x2F;sh.alynx.one&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;sh.alynx.one&#x2F;images&#x2F;FutureGazerSmall.webp</span><br><span class="line">      descr: StackHarbor</span><br><span class="line">    2:</span><br><span class="line">      name: 试毅-思伟</span><br><span class="line">      link: https:&#x2F;&#x2F;zhousiwei.gitee.io&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;zhousiwei.gitee.io&#x2F;img&#x2F;head.jpg</span><br><span class="line">      descr: 特效简历</span><br><span class="line">    3:</span><br><span class="line">      name: Sanarous博主</span><br><span class="line">      link: https:&#x2F;&#x2F;bestzuo.cn&#x2F;</span><br><span class="line">      avatar: https:&#x2F;&#x2F;site-1258928558.cos.ap-guangzhou.myqcloud.com&#x2F;touxiang.jpg</span><br><span class="line">      descr: 码农人生</span><br></pre></td></tr></table></figure><h3 id="如何引入图片"><a href="#如何引入图片" class="headerlink" title="如何引入图片"></a>如何引入图片</h3><p>Hexo 有多种图片插入方式，可以将图片存放在本地引用或者将图片放在 CDN 上进行引用。</p><h3 id="本地引用-绝对路径"><a href="#本地引用-绝对路径" class="headerlink" title="本地引用-绝对路径"></a>本地引用-绝对路径</h3><p>我们可以将图片统一放在 source/images 文件夹中，通过 Markdown 语法访问它们:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https:&#x2F;&#x2F;media.5yun.org&#x2F;images&#x2F;image_name.jpg)</span><br></pre></td></tr></table></figure><p>然后渲染出来的话也是绝对路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;&#x2F;images&#x2F;image.jpg&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="本地引用-相对路径"><a href="#本地引用-相对路径" class="headerlink" title="本地引用-相对路径"></a>本地引用-相对路径</h4><p>图片除了可以放在统一的 images 文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置 _config.yml 来生成:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># _config.yml</span><br><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>将 _config.yml 文件中的配置项 post_asset_folder 设为 true 后，执行命令 $ hexo new post_name，在 source/_posts 中会生成文章 post_name.md 和同名文件夹 post_name。将图片资源放在 post_name 中，文章就可以使用相对路径引用图片资源了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](image_name.jpg)</span><br></pre></td></tr></table></figure><p><strong>注意：放入文章的图片要放在与文章名对应的文件夹名才能显示。</strong></p><h4 id="图片命名"><a href="#图片命名" class="headerlink" title="图片命名"></a>图片命名</h4><p>图片命名是一件很重要的事，因为如果命名不好，后期维护起来会比较麻烦；而我推荐的命名方式是 hexo_{function}_{id}，图片都放在 source/images 文件夹中：<br>hexo_post_1: 表示这张图片被用在了文章中，1 是这张图片的id，依顺序递增<br>hexo_thumbnail_1: 表示这张图片被用在了文章缩略图中，id 含义同上<br>hexo_others_1: 表示这张图片既没有被用在文章中也不是文章缩略图，id 含义同上</p><h3 id="hexo引入本地图片无法显示"><a href="#hexo引入本地图片无法显示" class="headerlink" title="hexo引入本地图片无法显示"></a>hexo引入本地图片无法显示</h3><h4 id="一、插件安装与配置"><a href="#一、插件安装与配置" class="headerlink" title="一、插件安装与配置"></a>一、插件安装与配置</h4><p>首先需要安装一个图片路径转换的插件，这个插件名字是hexo-asset-image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>但是这个插件的内容需要修改【不然可能会出Bug】</p><p>打开/node_modules/hexo-asset-image/index.js，将内容更换为下面的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">    var link &#x3D; data.permalink;</span><br><span class="line">if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">else</span><br><span class="line">   var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">&#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">&#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">   !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">  &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">  &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">  var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">  &#125;);</span><br><span class="line">  if(srcArray.length &gt; 1)</span><br><span class="line">srcArray.shift();</span><br><span class="line">  src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">  $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">  console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">console.info&amp;&amp;console.info($(this));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>打开_config.yml文件，修改下述内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><h3 id="Markdown-中插入图片"><a href="#Markdown-中插入图片" class="headerlink" title="Markdown 中插入图片"></a>Markdown 中插入图片</h3><p>如果想固定图片尺寸，可以插入 HTML 代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;.&#x2F;xxx.png&quot; width &#x3D; &quot;300&quot; height &#x3D; &quot;200&quot; alt&#x3D;&quot;图片名称&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>如果只需要居中的话只要在外面包围 div 标签即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div  align&#x3D;&quot;center&quot;&gt;    </span><br><span class="line">![图片名称](.&#x2F;xxx.png)</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h3><p>文章的 markdown 文档上，在 Front-matter 添加 cover, 并填上要显示的图片地址。<br>如果不配置 cover, 可以设置显示默认的 cover.</p><p>如果不想在首页显示 cover, 可以设置为 false</p><p>配置 butterfly主题的_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cover:</span><br><span class="line">  # 是否顯示文章封面</span><br><span class="line">  index_enable: true</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  # 封面顯示的位置</span><br><span class="line">  # 三個值可配置 left , right , both</span><br><span class="line">  position: both</span><br><span class="line">  # 當沒有設置cover時，默認的封面顯示</span><br><span class="line">  default_cover:</span><br><span class="line">    - &#x2F;img&#x2F;post.jpg</span><br><span class="line">    - &#x2F;img&#x2F;butterfly.jpg</span><br></pre></td></tr></table></figure><p><strong>注意：目前只能使用命令创建文章</strong></p><p>$ hexo new 文章名<br>生成Front-matter的表头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo博客功能添加整理</span><br><span class="line">author: PanXiaoKang</span><br><span class="line">tags:</span><br><span class="line">  - Hexo功能</span><br><span class="line">categories:</span><br><span class="line">  - Hexo博客</span><br><span class="line">date: 2020-04-14 14:55:00</span><br><span class="line"></span><br><span class="line">cover:  http:&#x2F;&#x2F;img1.imgtn.bdimg.com&#x2F;it&#x2F;u&#x3D;3317212999,718739958&amp;fm&#x3D;26&amp;gp&#x3D;0.jpg</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>然后在md文件里添加cover的图片路径地址<br>完成之后就可以看到封面图片了。</p><h3 id="添加音乐歌单"><a href="#添加音乐歌单" class="headerlink" title="添加音乐歌单"></a>添加音乐歌单</h3><p>安装此插件<br>hexo-tag-aplayer 将 APlayer 内嵌入博客页面的 Hexo 插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>MetingJS 是基于Meting API 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 _config.yml 中设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">    meting: true</span><br></pre></td></tr></table></figure><p>怎么获取歌曲，歌单id(以网易云音乐为例)：  </p><p>打开网易云官网，进入我的主页，选择自己的歌单，复制URL栏上的id。</p><p>博客中如何使用<br>在music文件夹下的index.md,编辑此文件<br>或者直接登录Hexo Admin在线输入下面的代码模板即可：  </p><p>单曲添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;网易音乐id&quot; &quot;netease&quot; &quot;song&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>歌单添加： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;2505260244&quot; &quot;netease&quot; &quot;playlist&quot; &quot;volume:0.5&quot; &quot;theme:#FF4081&quot; &quot;mode:circulation&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>配置好之后就能看到播放器了<br>注意：如果还没有，则需要重新hexo clean &amp; hexo g -d 后就能在页面中显示了</p><p>有关选项列表说明：  </p><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>必须值</td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td>必须值</td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td>必须值</td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.5</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#FF4081</code></td><td>播放器风格色彩设置</td></tr></tbody></table><h3 id="使用明月浩空播放器"><a href="#使用明月浩空播放器" class="headerlink" title="使用明月浩空播放器"></a>使用明月浩空播放器</h3><p>在music文件夹下的index.md直接添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;lib.baomitu.com&#x2F;jquery&#x2F;3.3.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>中间是内容或者歌单列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;player.lmih.cn&#x2F;player&#x2F;js&#x2F;player.js&quot; id&#x3D;&quot;myhk&quot; key&#x3D;&quot;158720204358&quot; m&#x3D;&quot;1&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>注意：在创建顶级域名时可以随便写，但只能在如IIS服务器本地可以调用播放器音乐接口，上传到个人博客或者个人网站时需要和网站域名对应才能调用，否则提示“请检查域名设置”的错误，歌曲无法调用播放。</p><h3 id="随机文章跳转"><a href="#随机文章跳转" class="headerlink" title="随机文章跳转"></a>随机文章跳转</h3><p>在Hexo博客根目录下themes/Butterfly/scripts(没有请自行创建)下新建 random.js 文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.generator.register(&#39;random&#39;, function (locals) &#123;</span><br><span class="line">  const config &#x3D; hexo.config.random || &#123;&#125;</span><br><span class="line">  const posts &#x3D; []</span><br><span class="line">  for (const post of locals.posts.data) &#123;</span><br><span class="line">    if (post.random !&#x3D;&#x3D; false) posts.push(post.path)</span><br><span class="line">  &#125;</span><br><span class="line">  return &#123;</span><br><span class="line">    path: config.path || &#39;random&#x2F;index.html&#39;,</span><br><span class="line">    data: &#96;&lt;html&gt;&lt;head&gt;&lt;script&gt;var posts&#x3D;$&#123;JSON.stringify(posts)&#125;;window.open(&#39;&#x2F;&#39;+posts[Math.floor(Math.random() * posts.length)],&quot;_self&quot;)&lt;&#x2F;script&gt;&lt;&#x2F;head&gt;&lt;&#x2F;html&gt;&#96;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>可选配置：  </p><p>在Butterfly主题下的_config.yml 添加以下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">random:</span><br><span class="line">  path: # 随机链接路径，默认&quot;random&#x2F;index.html&quot;</span><br></pre></td></tr></table></figure><p>然后在导航菜单修改menu中添加菜单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">随机文章: &#x2F;random&#x2F; || fa fa-random</span><br></pre></td></tr></table></figure><p>如果不想随机跳转到某篇文章，只需在这篇文章 Front-matter 添加 random: false</p><p>配置完成后重新hexo+g生成即可生效。</p><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><ol><li><p>安装 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a>，根据文档做对应配置</p></li><li><p>配置 _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: 试试看能找到啥宝藏吧!</span><br><span class="line">    hits_empty: &quot;客官，本店还未提供该服务: $&#123;query&#125;&quot; # if there are no result</span><br></pre></td></tr></table></figure></li><li><p>然后重新hexo g 生成即可。</p></li></ol><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><ol><li><p><a href="https://leancloud.cn/dashboard/data.html?appid=fp5mCOihCGkpqjlVm6R7eQqk-gzGzoHsz#/" target="_blank" rel="noopener">点击leancloud服务注册</a>  Hexo能支持很多评论系统，但是leancloud这个最舒服，最方便。<a href="https://blog.thatwang.com/2019/11/06/Hexo%E5%AE%89%E8%A3%85%E5%9F%BA%E6%9C%AC%E7%82%B9/#%E8%AF%84%E8%AE%BA" target="_blank" rel="noopener">详情点击</a></p></li><li><p>在使用的主题下配置 _config.yml，开启valine为true。  </p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true # if you want use valine,please set this value is true</span><br><span class="line">  appId: 在配置中心查看复制 # leancloud application app id</span><br><span class="line">  appKey: 在配置中心查看复制 # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true&#x2F;false) https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki</span><br><span class="line">  verify: false # valine verify code (true&#x2F;false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: en # i18n: zh-cn&#x2F;en</span><br><span class="line">  placeholder: 来吧，造作吧，快活吧，肆无忌惮吧！(～￣▽￣)～ # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header info</span><br><span class="line">  recordIP: false # Record reviewer </span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: &#x2F;img&#x2F;comment_bg.png # valine background</span><br><span class="line">  count: true # top_img显示评论数</span><br></pre></td></tr></table></figure><h3 id="评论打字效果"><a href="#评论打字效果" class="headerlink" title="评论打字效果"></a>评论打字效果</h3><p>配置_config.yml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#打字效果</span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: true</span><br><span class="line">  colorful: true # 冒光特效</span><br><span class="line">  shake: false # 抖动特效</span><br></pre></td></tr></table></figure><h3 id="页脚显示网站运行时间"><a href="#页脚显示网站运行时间" class="headerlink" title="页脚显示网站运行时间"></a>页脚显示网站运行时间</h3><p>编辑博客根目录/themes/Butterfly/layout/includes/footer.pug 文件，在最后 span=theme.ICP.text 下一行添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#running-time</span><br><span class="line">  script.</span><br><span class="line">    setInterval(()&#x3D;&gt;&#123;let create_time&#x3D;Math.round(new Date(Date.UTC(2020,01,03,0,0,0)).getTime()&#x2F;1000);let timestamp&#x3D;Math.round((new Date().getTime()+8*60*60*1000)&#x2F;1000);let second&#x3D;timestamp-create_time;let time&#x3D;new Array(0,0,0,0,0);if(second&gt;&#x3D;365*24*3600)&#123;time[0]&#x3D;parseInt(second&#x2F;(365*24*3600));second%&#x3D;365*24*3600;&#125;if(second&gt;&#x3D;24*3600)&#123;time[1]&#x3D;parseInt(second&#x2F;(24*3600));second%&#x3D;24*3600;&#125;if(second&gt;&#x3D;3600)&#123;time[2]&#x3D;parseInt(second&#x2F;3600);second%&#x3D;3600;&#125;if(second&gt;&#x3D;60)&#123;time[3]&#x3D;parseInt(second&#x2F;60);second%&#x3D;60;&#125;if(second&gt;0)&#123;time[4]&#x3D;second;&#125;currentTimeHtml&#x3D;&#39;本站已安全运行 &#39;+time[0]+&#39; 年 &#39;+time[1]+&#39; 天 &#39;+time[2]+&#39; 时 &#39;+time[3]+&#39; 分 &#39;+time[4]+&#39; 秒&#39;;document.getElementById(&quot;running-time&quot;).innerHTML&#x3D;currentTimeHtml;&#125;,1000);</span><br></pre></td></tr></table></figure><div class="note warning"><p>注意<code>#running-time</code> 与上面的 <code>if theme.ICP.enable</code> 对齐！<br>要将 <code>Date.UTC(2020,01,03,0,0,0)</code> 改为你网站的起始时间！</p></div><h3 id="修改鼠标样式"><a href="#修改鼠标样式" class="headerlink" title="修改鼠标样式"></a>修改鼠标样式</h3><p>找到blog\themes\Butterfly\source\css\index.styl文件加上下面代码,url可替换为自己的。来自GamerNoTitle的支持</p><ul><li>样式一<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**普通指针样式**&#x2F;</span><br><span class="line">body </span><br><span class="line">  cursor url(&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@latest&#x2F;Hexo&#x2F;img&#x2F;default.cur&#39;),default</span><br><span class="line">&#x2F;**链接指针样式**&#x2F;</span><br><span class="line">a </span><br><span class="line">  &amp;:hover </span><br><span class="line">    cursor url(&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@latest&#x2F;Hexo&#x2F;img&#x2F;pointer.cur&#39;),pointer</span><br></pre></td></tr></table></figure></li><li>样式二<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**普通指针样式**&#x2F;</span><br><span class="line">body </span><br><span class="line">  cursor url(&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@1.0&#x2F;images&#x2F;mouse.cur&#39;),default</span><br><span class="line">&#x2F;**链接指针样式**&#x2F;</span><br><span class="line">a </span><br><span class="line">  &amp;:hover </span><br><span class="line">    cursor url(&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;TRHX&#x2F;CDN-for-itrhx.com@1.0&#x2F;images&#x2F;mouse.cur&#39;),pointer</span><br></pre></td></tr></table></figure></li></ul><h3 id="全局引入鼠标-跟随特效"><a href="#全局引入鼠标-跟随特效" class="headerlink" title="全局引入鼠标**跟随特效"></a>全局引入鼠标**跟随特效</h3><p>效果如图所示：<br><img src="/img/loading.gif" class="lazyload" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2Jsb2dpbWcvSGV4b1N0YXRpY0ZpbGUyQGxhdGVzdC8yMDIwLzA1LzIwLzJjNTQwNDNjNDVkN2QwMWJlNzNlM2E0ZDkzZGRhOTYzLnBuZw?x-oss-process=image/format,png"  alt></p><p>打开butterfly主题的_config.yml配置文件，找到CDN_USE然后引入js代码即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># CDN</span><br><span class="line"># 网站必须</span><br><span class="line"># 可根据需要自行添加js&#x2F;css</span><br><span class="line">CDN_USE:</span><br><span class="line">  css:</span><br><span class="line">    - &#x2F;css&#x2F;index.css</span><br><span class="line"></span><br><span class="line">  js:</span><br><span class="line">    - https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@latest&#x2F;Hexo&#x2F;js&#x2F;mouse_snow.min.js #全局引入鼠标**跟随的特效</span><br></pre></td></tr></table></figure><p>网站引入的话在&lt; head&gt;&lt;/ dead&gt;标签里面插入即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--引入鼠标**跟随的特效--&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@latest&#x2F;Hexo&#x2F;js&#x2F;mouse_snow.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="彩色滚动条"><a href="#彩色滚动条" class="headerlink" title="彩色滚动条"></a>彩色滚动条</h3><p>在\Butterfly\source\css路径下创建zdy.css文件，将下面代码保存并引入到Buttersly下面的_config.yml文件中即可。</p><p>引入zdy.css文件的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CDN_USE:</span><br><span class="line">  css:</span><br><span class="line">    - &#x2F;css&#x2F;index.css </span><br><span class="line">    - &#x2F;css&#x2F;zdy.css #设置滚动条等自定义的CSS元素</span><br></pre></td></tr></table></figure><p>zdy.css文件需要写入的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 滚动条 *&#x2F;</span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  width: 10px;</span><br><span class="line">  height: 8px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">  background-color: rgba(73, 177, 245, 0.2);</span><br><span class="line">  border-radius: 2em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  background-color: #49b1f5;</span><br><span class="line">  background-image: -webkit-linear-gradient(</span><br><span class="line">    45deg,</span><br><span class="line">    rgba(255, 255, 255, 0.4) 25%,</span><br><span class="line">    transparent 25%,</span><br><span class="line">    transparent 50%,</span><br><span class="line">    rgba(255, 255, 255, 0.4) 50%,</span><br><span class="line">    rgba(255, 255, 255, 0.4) 75%,</span><br><span class="line">    transparent 75%,</span><br><span class="line">    transparent</span><br><span class="line">  );</span><br><span class="line">  border-radius: 2em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">  background-color: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">  color: #fff;</span><br><span class="line">  background-color: #49b1f5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code style="color:red;">注意：夜间模式的时候无法显示彩色滚动条的颜色，切换到浅色模式就能看见了。可能与夜间模式的index.css里面的元素冲突了，暂时未找到修改方案。</code></p><h3 id="添加宠物动画模型"><a href="#添加宠物动画模型" class="headerlink" title="添加宠物动画模型"></a>添加宠物动画模型</h3><ul><li>安装插件</li></ul><p>hexo根目录选择git bash 输入以下代码，安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><ul><li><p>下载动画<br>作者<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">动画预览</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru&#x2F;01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru&#x2F;02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure></li><li><p>安装<br>选好对应的模型，使用 npm install 模型的包名来安装，比如我选择的的是live2d-widget-model-ni-j 模型包，在hexo博客根目录选择git bash 输入以下代码<code>$ npm install live2d-widget-model-tororo</code> ，执行安装就完事了。</p></li><li><p>配置文件<br>打开Hexo根目录下的 _config.yml文件，在最后添加代码（直接复制不需要更改，第一行不需要空格）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  pluginRootPath: live2dw&#x2F;</span><br><span class="line">  pluginJsPath: lib&#x2F;</span><br><span class="line">  pluginModelPath: assets&#x2F;</span><br><span class="line">  tagMode: false</span><br><span class="line">  debug: false</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-tororo</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true</span><br></pre></td></tr></table></figure></li></ul><h3 id="添加视频插件"><a href="#添加视频插件" class="headerlink" title="添加视频插件"></a>添加视频插件</h3><p>方法一：可以在<a href="https://www.bilibili.com/" target="_blank" rel="noopener">B站官网</a>上面找到喜欢的视频，点击分享按钮，复制分享的嵌入代码,然后在movie文件夹下的index.md文件直接粘贴如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;74128420&amp;bvid&#x3D;BV1eE41187ny&amp;cid&#x3D;126790035&amp;page&#x3D;6&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; width&#x3D;&quot;100%&quot; height&#x3D;&quot;300px&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot; style&#x3D;&quot;border:3px solid #009ad6;border-radius:45px&quot;&gt; &lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p>方法二：也可以嵌入同比例缩小的视频网站代码，以下是根据自己网页布局进行修改的，在movie文件夹下的index.md文件直接粘贴：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.iframe-body-sty&#123;position: relative;overflow: hidden;height:600px;width: 100%;background-color: #145b7d;border-radius:25px;&#125;</span><br><span class="line">.iframe-body-sty&gt;#iframe-shrink&#123;position: absolute;transform:scale(0.55);left: -300px;top: -190px;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;iframe-body-sty&quot; &gt;</span><br><span class="line">&lt;iframe id&#x3D;&quot;iframe-shrink&quot; src&#x3D;&quot;http:&#x2F;&#x2F;www.mvcat.com&#x2F;&quot; width&#x3D;&quot;1400px&quot; height&#x3D;&quot;980px&quot; style&#x3D;&quot;border-radius:10px&quot; &gt;&lt;&#x2F;iframe&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>保存后就可以在博客上观看视频啦！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端理论</title>
      <link href="/2020/04/25/%E5%90%8E%E7%AB%AF%E7%90%86%E8%AE%BA/"/>
      <url>/2020/04/25/%E5%90%8E%E7%AB%AF%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="互联网协议"><a href="#互联网协议" class="headerlink" title="互联网协议"></a>互联网协议</h2><p>网络协议指的是网络中传递、管理信息的一些规范。HTTP 是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范。但是互联网又不只有 HTTP 协议，它还有很多其他的比如 IP、TCP、UDP、DNS 协议等。</p><h3 id="HTTP与HTTPS区别"><a href="#HTTP与HTTPS区别" class="headerlink" title="HTTP与HTTPS区别"></a>HTTP与HTTPS区别</h3><p>HTTP协议传输的数据是明文未加密的，因此对于传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了SSL协议用于对HTTP协议传输的数据进行加密，从而就诞生了HTTPS。<br>简单来说，HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。</p><p><strong>HTTPS和HTTP的区别主要如下：</strong></p><ol><li><p>https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。</p></li><li><p>http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。</p></li><li><p>http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。</p></li><li><p>http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p></li></ol><h3 id="TCP-IP协议簇"><a href="#TCP-IP协议簇" class="headerlink" title="TCP/IP协议簇"></a>TCP/IP协议簇</h3><p>TCP/IP 协议是我们程序员接触最多的协议，实际上，TCP/IP 又被称为 TCP/IP 协议簇，它并不特指单纯的 TCP 和 IP 协议，而是容纳了许许多多的网络协议。TPC/IP协议是传输层协议，主要解决数据如何在网络中传输，而HTTP是应用层协议，主要解决如何包装数据。</p><p>OSI标准模型将复杂的协议整理并分为了易于理解的 7 层。从下到上分别是物理层、数据链路层、网络层、运输层、会话层、表示层和应用层。但是这显然是有些复杂的，所以在TCP/IP协议中，它们被简化为了四个层次，从下到上分别是通信链路层、网络层、传输层、应用层。</p><ol><li><p><strong>IP协议</strong></p><p> IP是互联网协议，位于网络层。IP是整个TCP/IP 协议族的核心，也是构成互联网的基础。</p></li><li><p><strong>ARP协议</strong></p><p> ARP协议是地址解析协议，它能够根据 IP 地址获取物理地址。</p></li><li><p><strong>TCP协议</strong></p><p> TCP是传输控制协议，它是一种面向连接的、可靠的、基于字节流的传输协议，TCP 协议位于传输层，是 TCP/IP 协议簇中的核心协议，它最大的特点就是提供可靠的数据交付，准确性较高，但工作效率较低。</p></li><li><p><strong>UDP协议</strong></p><p> UDP协议是用户数据报协议，UDP也是一种传输层的协议，无连接、不可靠、基于报文的传输协议，但是 UDP 具有较好的实时性，工作效率较 TCP 协议高。</p></li><li><p><strong>FTP协议</strong></p><p> FTP协议是文件传输协议，应用层协议之一，是 TCP/IP 协议的重要组成之一，FTP 协议分为服务器和客户端两部分，FTP 服务器用来存储文件，FTP 客户端用来访问 FTP 服务器上的文件，FTP 的传输效率比较高，所以一般使用 FTP 来传输大文件。</p></li><li><p><strong>DNS协议</strong></p><p> DNS 协议是 域名系统协议，英文全称是 Domain Name System，它也是应用层的协议之一，DNS 协议是一个将域名和 IP 相互映射的分布式数据库系统。DNS 缓存能够加快网络资源的访问。</p></li></ol><h3 id="TCP-IP分层"><a href="#TCP-IP分层" class="headerlink" title="TCP/IP分层"></a>TCP/IP分层</h3><p>分层：应用层、传输层、网络层、数据链路层、物理层</p><p>物理层：负责比特流节点之间的传输，通俗来说就是把计算机连接起来的物理手段。<br>数据链路层：控制网络层和物理层之间的通信，主要功能是保证物理线路上进行可靠的数据传递。<br>网络层：决定如何将数据从发送路由到接收方。即建立主机到主机的通信。<br>传输层：该层为两台主机上的应用程序提供端到端的通信。传输层有两个传输协议：TCP(传输控制协议)和 UDP(用户数据报协议)。其中，TCP是一个可靠的面向连接的协议，udp是不可靠的或者说无连接的协议<br>应用层：应用程序收到传输层的数据后，接下来就要进行解读。解读必须事先规定好格式，而应用层就是规定应用程序的数据格式。主要的协议有：HTTP、FTP、Telent、ssh等。</p><h3 id="TCP与UDP区别"><a href="#TCP与UDP区别" class="headerlink" title="TCP与UDP区别"></a>TCP与UDP区别</h3><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/25/%E5%90%8E%E7%AB%AF%E7%90%86%E8%AE%BA/hexo_post_1.jpg"  alt></p><p>（1）TCP：面向连接，可靠的，速度慢，效率低。</p><p>（2）UDP：无连接、不可靠、速度快、效率高。</p><p>应用场景：当进程需要传输可靠的数据时应使用TCP，当进程需要高效传输数据，可以忽略可靠性时应使用UDP协议。</p><h3 id="TCP的三次握手"><a href="#TCP的三次握手" class="headerlink" title="TCP的三次握手"></a>TCP的三次握手</h3><p>为什么需要三次握手，两次不行吗？<br>弄清这个问题，我们需要先弄明白三次握手的目的是什么，能不能只用两次握手来达到同样的目的。</p><ol><li>第一次握手：客户端发送网络包，服务端收到了。<br>这样服务端就能得出结论：客户端的发送能力、服务端的接收能力是正常的。</li><li>第二次握手：服务端发包，客户端收到了。<br>这样客户端就能得出结论：服务端的接收、发送能力，客户端的接收、发送能力是正常的。不过此时服务器并不能确认客户端的接收能力是否正常。</li><li>第三次握手：客户端发包，服务端收到了。<br>这样服务端就能得出结论：客户端的接收、发送能力正常，服务器自己的发送、接收能力也正常。<br>因此，需要三次握手才能确认双方的接收与发送能力是否正常。</li><li>四次挥手：<br>建立一个连接需要三次握手，而终止一个连接要经过四次挥手（也有将四次挥手叫做四次握手的）。这由TCP的半关闭造成的。所谓的半关闭，其实就是TCP提供了连接的一端在结束它的发送后还能接收来自另一端数据的能力。</li></ol><blockquote><p>详情传送门：<a href="https://blog.csdn.net/hai_chao/article/details/79626161" target="_blank" rel="noopener">https://blog.csdn.net/hai_chao/article/details/79626161</a></p></blockquote><h2 id="JavaEE和JavaWeb"><a href="#JavaEE和JavaWeb" class="headerlink" title="JavaEE和JavaWeb"></a>JavaEE和JavaWeb</h2><h3 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h3><p>例如 :J DBC，JSP，Servlet，JavaBean，Html，JavaScript，Session/Cookie，MVC设计模式，Tomcat，Eclipse+MyEclipse  </p><h3 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h3><p>例如：人们常说的SSH =Spring+Struts+Hibernate架构应用整合开发,XML,EJB,WebService,UML/Rose,Ajax,Weblogic,Oracle。<br>总之：Java EE是企业级应用平台，Java Web是指所有用于web开发的Java技术。</p><h2 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h2><pre><code>瞬时状态:保存在内存的程序数据，程序退出后，数据就消失了，称为瞬时状态持久状态:保存在磁盘上的程序数据，程序退出后依然存在，称为程序数据的持久状态持久化:将程序数据在瞬时状态和持久状态之间相互转换的机制</code></pre><ol><li>为什么要持久化？<br>持久化技术封装了数据访问细节，为大部分业务逻辑提供面向对象的API。<br>通过持久化技术可以减少访问数据库数据次数，增加应用程序执行速度；<br>代码重用性高，能够完成大部分数据库操作；<br>松散耦合，使持久化不依赖于底层数据库和上层业务逻辑实现，更换数据库时只需修改配置文件而不用修改代码。</li></ol><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><ol><li>定义：与类名相同，既没有返回类型也没有返回值，不写void,这种特殊的成员方法就叫构造函数。  </li><li>什么时候使用：想为对象实例化的同时为其初始化。  </li><li>区别：  <ol><li>作用不同，构造方法仅用于实例化对象，对成员变量进行初始化，成员方法用于对成员变量进行多种操作。  </li><li>调用方式不同，构造方法只能通过new运算符调用，成员方法可以通过对象名调用。  </li><li>调用时机不同，构造方法是在创建对象时调用，成员方法是创建对象之后，通过对象名进行调用。  </li></ol></li></ol><h2 id="面向对象特性"><a href="#面向对象特性" class="headerlink" title="面向对象特性"></a>面向对象特性</h2><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p>封装是对内部信息进行隐藏，不允许外部程序直接访问，只能通过对象提供的方法进行访问，从而达到隐藏类内部信息的目的。  </p><ol><li>优点：提高安全性、复用性、高内聚低耦合。</li></ol><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>是指让某一类型的对象获取另一个类型的对象的属性和方法。</p><ol><li><p>继承的原则：  </p></li><li><p>1    java是单继承的，一个类只能有一个父类。  </p></li><li><p>2    子类继承父类的实例变量和类变量（静态变量）。  </p></li><li><p>3    子类继承父类除了构造方法以外的实例成员和类方法（静态方法）。  </p></li><li><p>4    子类不能继承父类的构造方法，因为父类的构造方法用来创建父类对象，子类需要声明自己的构造方法，用来创建子类自己的对象。  </p></li><li><p>5    子类可以重新声明父类的成员。  </p></li><li><p>继承的特点：  </p></li><li><p>1 继承的本质就是抽取共性代码，简化代码。  </p></li><li><p>2 类是对一批对象的抽象，继承是对一批类的抽象。  </p></li><li><p>继承的使用：  </p></li><li><p>1 一般在写代码的时候发现代码中存在重复代码,需要向上抽取,考虑继承。  </p></li><li><p>2 当某个类的设计非常复杂的时候可以考虑继承 例如: 设计一个窗口类。  </p></li></ol><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>相同方法名的多种实现，主要通过方法重写和方法重载来实现，多态是基于继承来实现的。  </p><ol><li>方法重载（overload）：方法具有相同的方法名，不同的参数列表，与返回值无关。</li><li>方法重写（overrride）：方法重写是指子类重新定义了父类同名的方法，子类中的方法具有父类方法中相同的参数列表，但是方法体不同。  </li></ol><p>多态优点：</p><ol><li>提高代码的维护性。</li><li>提高代码的扩展性。</li></ol><h3 id="final的使用情况"><a href="#final的使用情况" class="headerlink" title="final的使用情况"></a>final的使用情况</h3><ol><li>当内部类需要引入外部类的局部变量或是传入的参数时那么该变量必须被定义为final,防止内部类中引入的和外部类的不是同一个。  </li><li>当你不让别人继承一这个类的时候, 用final 修饰该类. 当一个方法不想让别人重写的时候可以把这个方法用final修饰. 当定义一个常量的时候可以用final 修饰。</li></ol><h3 id="Static"><a href="#Static" class="headerlink" title="Static"></a>Static</h3><ol><li><p>特点：<br>被static修饰的内容会随着类的加载而加载，优先于对象存在，成员变量和成员方法可以通过类名直接调用并被该类下所有对象共享。  </p></li><li><p>使用情况：<br>在同一类中，当某一数据被所有实例化对象共享时，可以用static修饰</p></li><li><p>什么时候用？<br>当一个变量需要初始化加载时候,或者是经常被调用的时候可以加上static。<br>用static 修饰的方法可以直接被调用,不用再new对象才能调用。</p></li><li><p>坏处：<br>初始化加载，比较占内存，所以不经常用的方法，不建议加此关键字。  </p></li></ol><h3 id="抽象类和方法"><a href="#抽象类和方法" class="headerlink" title="抽象类和方法"></a>抽象类和方法</h3><ol><li><p>定义：如果一个类没有足够的信息来描绘一个具体的对象，这样的类叫做抽象类。  </p></li><li><p>抽象类和抽象方法的关系</p><ol><li>有抽象方法的类，一定是抽象类</li><li>抽象类不一定有抽象方法</li><li>抽象类不允许被实例化</li><li>抽象类的子类必须实现抽象方法以后才能被实例化</li><li>如果有任意一个抽象方法没有被子类实现，那么子类也应该是抽象类</li></ol></li></ol><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>是一组常量和抽象方法的集合。  </p><ol><li>Java只允许类的单继承，使用接口可以实现多重继承。  </li><li>接口只能继承接口。  </li><li>表面上接口是解决多继承的，实质上是解决不同行为的。因为只有共性行为才能定义在父类中。非共性行为通过接口来补充扩展。  </li></ol><h2 id="全局变量、成员变量和局部变量"><a href="#全局变量、成员变量和局部变量" class="headerlink" title="全局变量、成员变量和局部变量"></a>全局变量、成员变量和局部变量</h2><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><pre><code>// 写在函数和大括号外部的变量, 我们称之为全局变量  // 作用域: 从定义的那一行开始, 一直到文件末尾  // 全局变量可以先定义再初始化, 也可以定义的同时初始化  // 存储: 静态区  // 程序一启动就会分配存储空间, 直到程序结束才会释放  </code></pre><h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><pre><code>// 写在类声明的大括号中的变量, 我们称之为 成员变量(属性, 实例变量)  // 成员变量只能通过对象来访问  // 注意: 成员变量不能离开类, 离开类之后就不是成员变量 成员变量不能在定义的同时进行初始化  // 存储: 堆(当前对象对应的堆的存储空间中)  // 存储在堆中的数据, 不会被自动释放, 只能程序员手动释放</code></pre><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><pre><code>// 写在函数或者代码块中的变量, 我们称之为局部变量  // 作用域: 从定义的那一行开始, 一直到遇到大括号或者return  // 局部变量可以先定义再初始化, 也可以定义的同时初始化  // 存储 : 栈  // 存储在栈中的数据有一个特点, 系统会自动给我们释放</code></pre><h2 id="C-S结构和B-S结构的区别"><a href="#C-S结构和B-S结构的区别" class="headerlink" title="C/S结构和B/S结构的区别"></a>C/S结构和B/S结构的区别</h2><h3 id="C-S与B-S"><a href="#C-S与B-S" class="headerlink" title="C/S与B/S"></a>C/S与B/S</h3><p>c/s：客户机和服务器结构（胖客户端结构），需要安装，如QQ<br>b/s:浏览器和服务器结构（瘦客户端结构），无需安装，如平时浏览的网站  </p><h3 id="URL-统一资源定位符-结构"><a href="#URL-统一资源定位符-结构" class="headerlink" title="URL(统一资源定位符)结构"></a>URL(统一资源定位符)结构</h3><p>协议：//服务器名称:端口号/路径/文件名？查询字符串  </p><h2 id="JSP九个内置对象"><a href="#JSP九个内置对象" class="headerlink" title="JSP九个内置对象"></a>JSP九个内置对象</h2><p>内置对象定义：由web容器实例化，开发人员不需要实例化而直接使用的对象。</p><ol><li>application（应用程序对象）<br>作用：就像全局变量，用于保存应用程序中的共有数据（上传时获取真实路径）</li><li>config（配置对象）<br>作用：用于取得服务器的配置信息</li><li>execption（异常对象）<br>作用：用于处理jsp页面发生的异常</li><li>out（输出对象）<br>作用：对象用于在web浏览器内输出信息，数据输出完，要及时关闭输出流</li><li>page（页面对象）<br>作用：代表jsp本身，只有在jsp页面内才是合法的</li><li>pageContext（上下文对象）<br>作用：用于获取页面的上下文，通过此对象可以获取页面的其他8个内置对象</li><li>request（请求对象）<br>作用：用于处理客户端请求，在（页面转发，获取cookie）用到</li><li>response（响应对象）<br>作用：用于处理响应客户端请求，在（页面重定向）中使用</li><li>session（会话对象）<br>作用：在网络中被称为会话，一个会话就是浏览器与服务器之间的一次通话（保存登录状态时）</li></ol><h2 id="get请求和post请求的区别"><a href="#get请求和post请求的区别" class="headerlink" title="get请求和post请求的区别"></a>get请求和post请求的区别</h2><ol><li>提交方式不同：get请求会将提交的数据显示在地址栏，post不会，而是把提交的数据放在正文内form date中。</li><li>传输数据大小不同：get请求因浏览器而异，post请求因web服务器而异，但是HTTP协议本身对于传输数据大小没有限制。</li><li>安全性：post请求略高于get请求。</li></ol><h2 id="请求转发和重定向的区别"><a href="#请求转发和重定向的区别" class="headerlink" title="请求转发和重定向的区别"></a>请求转发和重定向的区别</h2><h3 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h3><ol><li>转发在一次请求中完成，重定向是两次请求。</li><li>转发操作发生在服务器内部，重定向是浏览器执行操作。</li><li>转发地址栏不变（只有一次请求，一个地址），重定向，地址栏变化（两次请求，两个地址）。</li><li>转发可以 在一次请求中共享数据，重定向不行。（重定向两次请求） </li></ol><h3 id="请求转发和重定向分别何时使用？"><a href="#请求转发和重定向分别何时使用？" class="headerlink" title="请求转发和重定向分别何时使用？"></a>请求转发和重定向分别何时使用？</h3><p>前后两个页面，有数据传递，用请求转发，没有则用重定向。<br>比如servlet查询了数据需要在页面显示，就用请求转发。<br>比如servlet做了update操作跳转到其他页面，就用重定向。</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>WEB-INF:是java的web应用的安全目录，所谓安全就是客户端无法访问，只有服务端可以访问的目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应的映射才能访问。</p><p>request是请求，session是会话，request的生命周期就在一次请求中，而session是整个会话周期，你开启一个网站就是一个会话，知道关闭浏览器，session才被销毁，而request是在开启一个网站，关闭这个网站，request就被销毁了，在jsp中一般就request来传递该页面使用的参数，而session则用来保存整个网站所需要的参数，如用户信息,session是会话，session在整个过程都是可以取到绑定的参数，无论是重定向还是转发都可以。</p><h2 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h2><p>序列化：把对象转换为字节序列的过程称为对象的序列化。<br>反序列化：把字节序列恢复为对象的过程称为对象的反序列化。  </p><p>什么情况下需要序列化 ：<br>　　当你想把的内存中的对象保存到一个文件中或者数据库中时候；<br>　　当你想用序列化在网络上传送对象的时候；<br>    当你想通过RMI传输对象的时候；  </p><h2 id="Servlet-生命周期"><a href="#Servlet-生命周期" class="headerlink" title="Servlet 生命周期"></a>Servlet 生命周期</h2><p>Servlet 生命周期可被定义为从创建直到毁灭的整个过程。<br>Servlet 遵循的过程：<br>Servlet 通过调用 init () 方法进行初始化。<br>Servlet 调用 service() 方法来处理客户端的请求。<br>Servlet 通过调用 destroy() 方法终止（结束）。<br>最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。  </p><h2 id="Servlet生命周期简述"><a href="#Servlet生命周期简述" class="headerlink" title="Servlet生命周期简述"></a>Servlet生命周期简述</h2><p>（1）加载和实例化</p><p>当Servlet容器启动或客户端发送一个请求时，Servlet容器会查找内存中是否存在该Servlet实例，若存在，则直接读取该实例响应请求；如果不存在，就创建一个Servlet实例。</p><p>（2） 初始化</p><p>实例化后，Servlet容器将调用Servlet的init()方法进行初始化（一些准备工作或资源预加载工作）。</p><p>（3）服务</p><p>初始化后，Servlet处于能响应请求的就绪状态。当接收到客户端请求时，调用service()的方法处理客户端请求，HttpServlet的service()方法会根据不同的请求 转调不同的doXxx()方法。</p><p>（4）销毁</p><p>当Servlet容器关闭时，Servlet实例也随时销毁。其间，Servlet容器会调用Servlet 的destroy()方法去判断该Servlet是否应当被释放（或回收资源）。</p><p>JavaBean:称为java组件，也就是java类，用于保存数据和实现业务逻辑。</p><h2 id="什么是MVC开发模式"><a href="#什么是MVC开发模式" class="headerlink" title="什么是MVC开发模式"></a>什么是MVC开发模式</h2><p>一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。</p><ol><li>Model（模型）  <ol><li>是应用程序中用于处理应用程序数据逻辑的部分。  </li><li>通常模型对象负责在数据库中存取数据。  </li></ol></li><li>View（视图）  <ol><li>是应用程序中处理数据显示的部分。  </li><li>通常视图是依据模型数据创建的。  </li></ol></li><li>Controller（控制器）  <ol><li>是应用程序中处理用户交互的部分。  </li><li>通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。</li></ol></li></ol><h2 id="什么是restful-API"><a href="#什么是restful-API" class="headerlink" title="什么是restful API"></a>什么是restful API</h2><p>中文名是“表现层状态转移”，简单来说就是URL定位资源，用HTTP动词（GET,POST,PUT,DELETE)描述操作。<br>你每次请求的接口或者地址,都在做描述,例如查询的时候用了query,新增的时候用了save,其实完全没有这个必要,我使用了get请求,就是查询.使用post请求,就是新增的请求,我的意图很明显,完全没有必要做描述,这就是为什么有了restful。</p><h2 id="REST系统"><a href="#REST系统" class="headerlink" title="REST系统"></a>REST系统</h2><p>定义：REST是一个标准，一种规范，遵循REST风格可以使开发的接口通用，便于调用者理解接口的作用。</p><p>特征：</p><ol><li>无状态（Stateless），来自客户的每一个请求必须包含服务器处理该请求所需的所有信息。</li><li>可缓存（Cachable），服务器必须让客户知道请求是否可以被缓存。</li><li>统一接口（Uniform Interface），客户和服务器之间通信的方法必须是统一化的。</li></ol><p>无状态：所谓无状态的，即所有的资源，都可以通过URI定位，而且这个定位与其他资源无关，也不会因为其他资源的变化而改变。如查询员工的工资，如果查询工资是需要登录系统，进入查询工资的页面，执行相关操作后，获取工资的多少，则这种情况是有状态的，因为查询工资的每一步操作都依赖于前一步操作，只要前置操作不成功，后续操作就无法执行；如果输入一个url即可得到指定员工的工资，则这种情况是无状态的，因为获取工资不依赖于其他资源或状态，且这种情况下，员工工资是一个资源，由一个url与之对应，可以通过HTTP中的GET方法得到资源，这是典型的RESTful风格。</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/25/%E5%90%8E%E7%AB%AF%E7%90%86%E8%AE%BA/hexo_post_2.png"  alt></p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/25/%E5%90%8E%E7%AB%AF%E7%90%86%E8%AE%BA/hexo_post_3.png"  alt></p><h2 id="统一接口"><a href="#统一接口" class="headerlink" title="统一接口"></a>统一接口</h2><p>RESTful架构风格规定，数据的元操作，即CRUD(create, read, update和delete,即数据的增删查改)操作，分别对应于HTTP方法：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源，这样就统一了数据操作的接口，仅通过HTTP方法，就可以完成对数据的所有增删查改工作。</p><h2 id="操作系统部分"><a href="#操作系统部分" class="headerlink" title="操作系统部分"></a>操作系统部分</h2><h3 id="进程和线程的区别"><a href="#进程和线程的区别" class="headerlink" title="进程和线程的区别"></a>进程和线程的区别</h3><ol><li>进程是系统进行资源调度和分配的基本单位，实现了操作系统的并发性。</li><li>线程是进程的子任务，是CPU调度和分派的基本单位，用于保证程序的实时性，实现进程内部的并发。</li><li>一个程序至少有一个进程，一个进程至少有一个线程，线程依赖于进程而存在；</li></ol><h3 id="进程间的几种通信方式"><a href="#进程间的几种通信方式" class="headerlink" title="进程间的几种通信方式"></a>进程间的几种通信方式</h3><ol><li><p>管道（pipe）及命名管道（named pipe）：管道可用于具有亲缘关系的父子进程间的通信，有名管道除了具有管道所具有的功能外，它还允许无亲缘关系进程间的通信；</p></li><li><p>信号（signal）：信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生；</p></li><li><p>消息队列：消息队列是消息的链接表，它克服了上两种通信方式中信号量有限的缺点，具有写权限得进程可以按照一定得规则向消息队列中添加新信息；对消息队列有读权限得进程则可以从消息队列中读取信息；</p></li><li><p>共享内存：可以说这是最有用的进程间通信方式。它使得多个进程可以访问同一块内存空间，不同进程可以及时看到对方进程中对共享内存中数据得更新。这种方式需要依靠某种同步操作，如互斥锁和信号量等；</p></li><li><p>信号量：主要作为进程之间及同一种进程的不同线程之间的同步和互斥手段，用来保证多个线程不会互相冲突。</p></li><li><p>套接字：这是一种更为一般得进程间通信机制，它可用于网络中不同机器之间的进程间通信，应用非常广泛。</p></li></ol><h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><p>概念：两个或多个进程无限期的阻塞、相互等待的一种状态。</p><p>在数据库中有两种基本的锁类型：排它锁（X锁）和共享锁（S锁）。当数据对象被加上排它锁时，其他的事务不能对它读取和修改。加了共享锁的数据对象可以被其他事务读取，但不能修改。数据库利用这两种基本的锁类型来对数据库的事务进行并发控制。</p><p>死锁产生的原因：</p><p>一个用户A 访问表A（锁住了表A），然后又访问表B；另一个用户B 访问表B（锁住了表B），然后企图访问表A；这时用户A由于用户B已经锁住表B，它必须等待用户B释放表B才能继续，同样用户B要等用户A释放表A才能继续，因为正在进行带锁的数据访问，那么这个进程就会等待，如果等了很久锁没有解除就会锁超时，形成死锁的状态。</p><p>死锁产生的四个必要条件：  </p><ol><li>互斥：一个资源每次只能被一个进程使用</li><li>请求和保持条件：进程已经保持了至少一个资源，但又提出了新的资源请求，而该资源已被其他进程占有，此时请求进程被阻塞，但对自己已获得的资源保持不放。</li><li>不可剥夺条件：进程已获得资源，在未使用完之前，不能被其他进程强行剥夺，只能主动释放</li><li>循环等待：若干进程之间形成一种头尾相接的环形等待资源关系</li></ol><p>解决死锁的基本方法主要有 预防死锁、避免死锁、检测死锁、解除死锁等。<br>(1). 死锁预防　<br>死锁预防的基本思想是 只要确保死锁发生的四个必要条件中至少有一个不成立，就能预防死锁的发生  </p><p>(2). 死锁解除<br>死锁解除的常用两种方法为进程终止和资源抢占。所谓进程终止是指简单地终止一个或多个进程以打破循环等待，包括两种方式：终止所有死锁进程和一次只终止一个进程直到取消死锁循环为止；所谓资源抢占是指从一个或多个死锁进程那里抢占一个或多个资源</p><h2 id="互斥锁-读写锁"><a href="#互斥锁-读写锁" class="headerlink" title="互斥锁/读写锁"></a>互斥锁/读写锁</h2><p>互斥锁在Java中的具体实现就是ReentrantLock；读写锁在Java中的具体实现就是ReadWriteLock。</p><p>“互斥锁”，防止多个线程同时读写某一块内存区域。</p><h2 id="悲观锁-乐观锁"><a href="#悲观锁-乐观锁" class="headerlink" title="悲观锁/乐观锁"></a>悲观锁/乐观锁</h2><p>乐观锁与悲观锁不是指具体的什么类型的锁，而是指看待并发同步的角度。</p><p>悲观锁：总是假设最坏的情况，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会阻塞直到它拿到锁。比如Java里面的同步原语synchronized关键字的实现就是悲观锁。</p><p>乐观锁：顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本号等机制。乐观锁适用于多读的应用类型，这样可以提高吞吐量，在Java中java.util.concurrent.atomic包下面的原子变量类就是使用了乐观锁的一种实现方式CAS(Compare and Swap 比较并交换)实现的。</p><h2 id="公平锁-非公平锁"><a href="#公平锁-非公平锁" class="headerlink" title="公平锁/非公平锁"></a>公平锁/非公平锁</h2><p>公平锁是指多个线程按照申请锁的顺序来获取锁。<br>非公平锁是指多个线程获取锁的顺序并不是按照申请锁的顺序，有可能后申请的线程比先申请的线程优先获取锁。有可能，会造成优先级反转或者饥饿现象。<br>对于Java ReentrantLock而言，通过构造函数指定该锁是否是公平锁，默认是非公平锁。非公平锁的优点在于吞吐量比公平锁大。<br>对于synchronized而言，也是一种非公平锁。由于其并不像ReentrantLock是通过AQS的来实现线程调度，所以并没有任何办法使其变成公平锁。</p><h2 id="JVM虚拟机"><a href="#JVM虚拟机" class="headerlink" title="JVM虚拟机"></a>JVM虚拟机</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>JVM是可运行Java代码的假想计算机 ，包括一套字节码指令集、一组寄存器、一个栈、一个垃圾回收，堆 和 一个存储方法域。JVM是运行在操作系统之上的，它与硬件没有直接的交互。</p><h3 id="JRE-JDK-JVM的关系"><a href="#JRE-JDK-JVM的关系" class="headerlink" title="JRE/JDK/JVM的关系"></a>JRE/JDK/JVM的关系</h3><ol><li><p>JDK ：英文名称（Java Development Kit），Java 开发工具包。jdk 是整个 Java 开发的核心，它集成了 jre 和一些好用的小工具。例如：javac.exe，java.exe，jar.exe 等。</p></li><li><p>JRE ：英文名称（Java Runtime Environment），我们叫它：Java 运行时环境，所有的Java程序都要在JRE下才能运行。它主要包含两个部分，jvm 的标准实现和 Java 的一些基本类库。它相对于 jvm 来说，多出来的是一部分的 Java 类库。</p></li><li><p>JVM ：英文名称（Java Virtual Machine），就是我们耳熟能详的 Java 虚拟机。它只认识 xxx.class 这种类型的文件，它能够将 class 文件中的字节码指令进行识别并调用操作系统向上的 API 完成动作。JVM是JRE的一部分，一个虚构出来的计算机，它支持跨平台。</p></li></ol><p>这三者的关系是：一层层的嵌套关系。JDK&gt;JRE&gt;JVM。</p><h3 id="JVM原理"><a href="#JVM原理" class="headerlink" title="JVM原理"></a>JVM原理</h3><p>JVM是Java编译器和os平台之间的虚拟处理器，java编译器生成的.java文件通过JVM生成.class字节码文件，然后通过JVM将每一个条指令翻译成不同平台的机器码，实现真正的跨平台运行。</p><h2 id="高并发"><a href="#高并发" class="headerlink" title="高并发"></a>高并发</h2><p>我们常见的高并发场景有：淘宝的双 11、春运时的抢票、微博大 V 的热点新闻等。除了这些典型事情，每秒几十万请求的秒杀系统、每天千万级的订单系统、每天亿级日活的信息流系统等，都可以归为高并发。</p><p>高并发可以通过分布式技术去解决，将并发流量分到不同的物理服务器上。但除此之外，还可以有很多其他优化手段：比如使用缓存系统，将所有的，静态内容放到CDN等；还可以使用多线程技术将一台服务器的服务能力最大化。</p><h2 id="总结一下："><a href="#总结一下：" class="headerlink" title="总结一下："></a><strong>总结一下：</strong></h2><p>●分布式是从物理资源的角度去将不同的机器组成一个整体对外服务，技术范围非常广且难度非常大，有了这个基础，高并发、高吞吐等系统很容易构建；</p><p>● 高并发是从业务角度去描述系统的能力，实现高并发的手段可以采用分布式，也可以采用诸如缓存、CDN等，当然也包括多线程；</p><p>● 多线程则聚焦于如何使用编程语言将CPU调度能力最大化。</p>]]></content>
      
      
      <categories>
          
          <category> 后端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好玩小程序</title>
      <link href="/2020/04/24/%E5%A5%BD%E7%8E%A9%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2020/04/24/%E5%A5%BD%E7%8E%A9%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="win10一键垃圾清理"><a href="#win10一键垃圾清理" class="headerlink" title="win10一键垃圾清理"></a>win10一键垃圾清理</h3><p>新建txt文件，将代码复制后另存为ANSL编码格式的文件，因为电脑默认是utf-8,有时候运行不出来就是这个原因。然后将.txt后缀名改为.bat即可点击运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">@echo off　　</span><br><span class="line"></span><br><span class="line">echo 正在清除系统垃圾文件，请稍等......　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\*.tmp　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\*._mp　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\*.log　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\*.gid　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\*.chk　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\*.old　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %systemdrive%\recycled\*.*　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %windir%\*.bak　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q %windir%\prefetch\*.*　　</span><br><span class="line"></span><br><span class="line">rd &#x2F;s &#x2F;q %windir%\temp &amp; md %windir%\temp　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;q %userprofile%\cookies\*.*　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;q %userprofile%\recent\*.*　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q “%userprofile%\Local Settings\Temporary Internet Files\*.*”　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q “%userprofile%\Local Settings\Temp\*.*”　　</span><br><span class="line"></span><br><span class="line">del &#x2F;f &#x2F;s &#x2F;q “%userprofile%\recent\*.*”　　</span><br><span class="line"></span><br><span class="line">echo 清除系统LJ完成！　　</span><br><span class="line"></span><br><span class="line">echo. &amp; pause</span><br></pre></td></tr></table></figure><h3 id="电脑读诗歌文章"><a href="#电脑读诗歌文章" class="headerlink" title="电脑读诗歌文章"></a>电脑读诗歌文章</h3><p>注意双引号是英文的，然后将.txt后缀名改为.vbs即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set objTTS &#x3D; createobject(&quot;sapi.spvoice&quot;)</span><br><span class="line">objTTS.speak &quot;芦丹氏-柏林少女:玫瑰是我偷的，你爱的人是我杀的。不爱你是假的，想忘了你是真的。冷水：所谓冷水，如人饮水冷暖自知。芦丹氏-孤儿怨：你绝非善类，我也不做好人。YSL-反转巴黎：我想和你见面，地点你选，森林沙漠，夜晚依稀的湖畔，草原大海，情分薄雾的街口，只是不要在梦里。纪梵希-心无禁忌：从此，我爱的人都像你。蒂普迪克-影中之水：我爱你只是我的事，与你无关。&quot;</span><br></pre></td></tr></table></figure><h3 id="恶搞电脑自爆"><a href="#恶搞电脑自爆" class="headerlink" title="恶搞电脑自爆"></a>恶搞电脑自爆</h3><p>同样后缀名改为.vbs即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msgbox&quot;电脑即将自爆&quot;+chr(13)+&quot;请在15秒内离开座位&quot;+chr(13)+&quot;否则你死定了&quot;,2,&quot;系统自爆提醒&quot;</span><br><span class="line">CreateObject(&quot;SAPI.SpVoice&quot;).Speak&quot;电脑即将自爆，请在15秒内离开座位，否则你死定了！&quot;</span><br></pre></td></tr></table></figure><h3 id="中奖百万富翁"><a href="#中奖百万富翁" class="headerlink" title="中奖百万富翁"></a>中奖百万富翁</h3><p>代码写好后另存为ANSL编码格式的txt文件，再把后缀名改为.vbs。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msgbox&quot;恭喜您上一期购买的六合彩中奖啦！&quot;+chr(13)+&quot;奖金为一百万元&quot;</span><br><span class="line"></span><br><span class="line">CreateObject(&quot;SAPI.SpVoice&quot;).Speak&quot;支付宝到账，一百万元&quot;</span><br></pre></td></tr></table></figure><h3 id="多软件账户登录操作"><a href="#多软件账户登录操作" class="headerlink" title="多软件账户登录操作"></a>多软件账户登录操作</h3><p>比如电脑微信只能登录一个窗口，写入以下代码即可同时启动，想登几个就码入几个，<br>最后改成.bat文件即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">start &quot;&quot; &quot;D:\Program Files (x86)\Tencent\WeChat\WeChat.exe&quot;</span><br><span class="line"></span><br><span class="line">start &quot;&quot; &quot;D:\Program Files (x86)\Tencent\QQ\Bin\QQScLauncher.exe&quot;</span><br></pre></td></tr></table></figure><h3 id="关闭电脑"><a href="#关闭电脑" class="headerlink" title="关闭电脑"></a>关闭电脑</h3><p>这个是vbs文件的关机命令，还可以直接cmd命令窗口：shutdown -s -t 00来关机。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dim WSHshell</span><br><span class="line"></span><br><span class="line">set WSHshell &#x3D; wscript.createobject(&quot;wscript.shell&quot;)</span><br><span class="line"></span><br><span class="line">WSHshell.run &quot;shutdown -f -s -t 00&quot;,0 ,true</span><br></pre></td></tr></table></figure><h3 id="滑动关机"><a href="#滑动关机" class="headerlink" title="滑动关机"></a>滑动关机</h3><p>这个比较秀（推荐）,后缀名.bat文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slidetoshutdown</span><br></pre></td></tr></table></figure><h3 id="重启桌面"><a href="#重启桌面" class="headerlink" title="重启桌面"></a>重启桌面</h3><p>有时候win10系统的扬声器或者桌面图标无法启动，可以通过bat文件来一键重启操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">taskkill &#x2F;f &#x2F;im explorer.exe</span><br><span class="line"></span><br><span class="line">CD &#x2F;d %userprofile%\AppData\Local</span><br><span class="line"></span><br><span class="line">DEL IconCache.db &#x2F;a</span><br><span class="line"></span><br><span class="line">start explorer.exe</span><br><span class="line"></span><br><span class="line">cho 执行完成</span><br></pre></td></tr></table></figure><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><p>通过执行bat脚本文件实现一键重启电脑的操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shutdown -r -t 0</span><br><span class="line">&#96;</span><br></pre></td></tr></table></figure><h3 id="电脑睡眠"><a href="#电脑睡眠" class="headerlink" title="电脑睡眠"></a>电脑睡眠</h3><p>通过执行bat脚本文件实现一键睡眠的操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe powrprof.dll,SetSuspendState 0,1,0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 黑技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 恶搞 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每天一个脱发小技巧</title>
      <link href="/2020/04/23/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E8%84%B1%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2020/04/23/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E8%84%B1%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>此文章是博主本人一点一滴积累的小技巧哦！觉得有用的话请留步！您的打赏是我持续学习的动力，后期会持续更新分享中。。。</p><h3 id="如何使谷歌引擎"><a href="#如何使谷歌引擎" class="headerlink" title="如何使谷歌引擎"></a>如何使谷歌引擎</h3><p>如何不让 google.com 跳转到 google.com.hk ？</p><p>自从google的服务器搬离中国大陆后，大陆地区用户用 google 服务时会自动跳转到香港的 <strong><a href="https://link.jianshu.com?t=http://google.com.hk" target="_blank" rel="noopener">http://google.com.hk</a></strong> ，有关键字过滤而且偶尔不是很稳定，这对我们的生活工作都造成了困扰。</p><p>可以通过以下的方法正确访问：</p><ol><li>直接用 <strong><a href="https://link.jianshu.com?t=http://www.google.com/ncr" target="_blank" rel="noopener">http://www.google.com/ncr</a></strong> ，<code>ncr</code> 是 <code>no country redirection</code> ，是一个强制不跳转的命令；</li><li>直接输入 <strong><a href="https://link.jianshu.com?t=https://www.google.com/" target="_blank" rel="noopener">https://www.google.com/</a></strong> ，<code>https</code> 协议。</li></ol><p>也可以自行设置搜索引擎：</p><ul><li>Chrome – 设置 -搜索 - 管理搜索引擎 – 其他搜索引擎</li><li>拉到最下，有一个“添加”</li><li>名字：自己写，我写 <strong><a href="https://link.jianshu.com?t=http://google.com" target="_blank" rel="noopener">http://google.com</a></strong></li><li>关键字（keyword），我写 Google</li><li>最后一个空最重要，写入Url ( <strong><a href="https://link.jianshu.com?t=http://www.google.com/search?hl=zh-CN&q=%s" target="_blank" rel="noopener">http://www.google.com/search?hl=zh-CN&amp;q=%s</a></strong>) 或者 ( <strong><a href="https://link.jianshu.com?t=http://www.google.com/search?q=%s" target="_blank" rel="noopener">http://www.google.com/search?q=%s</a></strong> ) <code>括号为填写部分</code></li><li>然后将之设置成默认搜索引擎，搞定！</li></ul><h3 id="查看已连接的wifi密码"><a href="#查看已连接的wifi密码" class="headerlink" title="查看已连接的wifi密码"></a>查看已连接的wifi密码</h3><pre><code>电脑查看方式：1.打开cmd命令窗口2、输入: netsh wlan show profiles3.找到已连接过的wifi名称4.再次输入netsh wlan show profiles &quot;wifi的名称&quot; key=clear5.找到“关键内容”就是密码手机查看方式：进入设置后，选择无线和网络。点击“WLAN，再点击“已连接的网络”，截取系统自动生成的二维码，使用微信扫一扫，扫此截屏即可看到密码。 </code></pre><h3 id="查询大厂校招真实薪资水平"><a href="#查询大厂校招真实薪资水平" class="headerlink" title="查询大厂校招真实薪资水平"></a>查询大厂校招真实薪资水平</h3><p>打开微信小程序搜索offershow,点击搜索即可，来源真实可靠！</p><h3 id="华为手机虚电如何处理"><a href="#华为手机虚电如何处理" class="headerlink" title="华为手机虚电如何处理"></a>华为手机虚电如何处理</h3><ol><li>输入神奇代码<br>手机输入 * # * # 2846579 # * # * ，进入工程模式，在该模式中找到补电功能，这就是去除虚电的关键。  </li><li>补电前提<br>使用该功能要确保手机电量在60%-75%之间，并且电池温度不能超过70度，因为电池超过70度就自燃的风险，不过并不用担心，一般正常使用手机是不会超过这个温度的。  </li><li>开始补电<br>电量为60%左右时，连接充电器并点击补电功能，页面就会显示在补电中，充到75%或者电池旁边的充电标识消失，就说明补电成功，也就可以拔掉充电器了，这时候你的华为手机显示的就是真实电量了。</li><li>补充说明<br>补电并非一定要充到75%的电量，因为每个人使用时长不同，电池中存在的虚电也不同，电池旁边的充电标识消失了，就会显示补电完成，电池中的虚电也就去除干净了。</li></ol><h3 id="编辑网站内容"><a href="#编辑网站内容" class="headerlink" title="编辑网站内容"></a>编辑网站内容</h3><p>打开浏览器控制台Console,输入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.designMode&#x3D;&quot;on&quot;</span><br></pre></td></tr></table></figure><p>输入之后即可编辑网站内容，但一刷新网站就会还原了，只能用于恶搞或忽悠别人。</p><h3 id="复制网站内容"><a href="#复制网站内容" class="headerlink" title="复制网站内容"></a>复制网站内容</h3><p>遇到需要登录注册才可以复制的内容，如360个人图书馆文章内容，可以用一个代码就可以解决这个问题。<br>删除原来的网址，在URL栏上输入代码即可复制:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:void($&#x3D;&#123;&#125;);</span><br></pre></td></tr></table></figure><p>但此方法对于百度文库VIP文档无效。也可以在控制台写入：$(‘div.ie-fix’).text()，然后回车即可复制，但是此方法只能一部分一部分复制，比较麻烦。</p><h3 id="百度文库VIP文档复制小技巧"><a href="#百度文库VIP文档复制小技巧" class="headerlink" title="百度文库VIP文档复制小技巧"></a>百度文库VIP文档复制小技巧</h3><ul><li>在文档右键点击检查（Ctrl+shift+I）打开控制台</li><li>点击Settings设置按钮，在Preferences中找到Debugger</li><li>将按钮Disable JavaScript勾上即可复制文档内容啦！</li><li>注意：复制的时候窗口要打开才行，关闭再复制就恢复原样了。</li></ul><h3 id="VIP文档下载技巧"><a href="#VIP文档下载技巧" class="headerlink" title="VIP文档下载技巧"></a>VIP文档下载技巧</h3><ul><li>打开<a href="https://greasyfork.org/zh-CN/scripts?q=%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E8%B5%84%E6%96%99%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B" target="_blank" rel="noopener">油猴脚本</a></li><li>点击百度文库资料免费下载助手然后安装。</li><li>然后再打开VIP文档，发现会在屏幕的左侧出现”免费下载”悬浮按钮，点击即可！</li></ul><p>不过这种方法有时候下载得到的不是真正的文档内容。可以下载一个<a href="http://www.bingdian001.com/?p=30" target="_blank" rel="noopener">冰点文库</a>的软件，该软件可自由下载百度、豆丁、丁香、MBALib、Book118等文库文档，打开软件，复制要下载文档的URL地址，点击下载即可白嫖啦~</p><h3 id="加密PDF如何编辑和复制"><a href="#加密PDF如何编辑和复制" class="headerlink" title="加密PDF如何编辑和复制"></a>加密PDF如何编辑和复制</h3><ol><li>先将PDF文件上传到<a href="https://www.ilovepdf.com/zh-cn" target="_blank" rel="noopener">I love PDF</a>进行解密操作。</li><li>然后再次下载即可得到解密的PDF文件，在<a href="http://www.zhanshaoyi.com/13509.html,' target=" _blank" rel="noopener" 破解版可编辑'">Adobe Acrobat DC</a>工具打开即可复制啦。</li><li>注意：Adobe Acrobat DC工具复制的时候不要打开编辑模式，否则复制的内容是乱码。</li></ol><h3 id="VIP视频在线解析"><a href="#VIP视频在线解析" class="headerlink" title="VIP视频在线解析"></a>VIP视频在线解析</h3><p>在谷歌浏览器中打开书签管理器，选择添加新书签，输入书签名称(如：VIP在线解析）和网址代码即可在网页中打开VIP视频时，再次点击该书签就可以进行解析观看了。<br>书签网址URL代码：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:window.location &#x3D;&quot;https:&#x2F;&#x2F;vip.bljiex.com&#x2F;?v&#x3D;&quot;+window.location.href</span><br></pre></td></tr></table></figure><h3 id="VIP视频在线下载"><a href="#VIP视频在线下载" class="headerlink" title="VIP视频在线下载"></a>VIP视频在线下载</h3><p>现在很多视频无法直接下载，可以利用视频解析之后，再用IDM下载就可以了。因为IDM有些无法直接下载。</p><h3 id="切换网页-“夜间模式”标签"><a href="#切换网页-“夜间模式”标签" class="headerlink" title="切换网页 “夜间模式”标签"></a>切换网页 “夜间模式”标签</h3><p>在浏览器新建一个新的标签页， 把下面Js代码放入网址URL点击保存即可，名称随意,比如“夜间模式”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:(function()&#123;var%C2%A0night&#x3D;function(w)&#123;(function(d)&#123;var%C2%A0css&#x3D;&#39;html&#123;opacity:0.7!important;background:black!important;&#125;body&#123;background:white!important;&#125;&#39;;var%C2%A0s&#x3D;d.getElementsByTagName(&#39;style&#39;);for(var%C2%A0i&#x3D;0,si;si&#x3D;s[i];i++)&#123;if(si.innerHTML&#x3D;&#x3D;css)&#123;si.parentNode.removeChild(si);return&#125;&#125;;var%C2%A0heads&#x3D;d.getElementsByTagName(&#39;head&#39;);if(heads.length)&#123;var%C2%A0node&#x3D;d.createElement(&#39;style&#39;);node.type&#x3D;&#39;text&#x2F;css&#39;;node.appendChild(d.createTextNode(css));heads[0].appendChild(node)&#125;&#125;)(w.document);%C2%A0for(var%C2%A0i&#x3D;0,f;f&#x3D;w.frames[i];i++)&#123;try&#123;arguments.callee(f)&#125;catch(e)&#123;&#125;&#125;&#125;;night(window)&#125;)();</span><br></pre></td></tr></table></figure><h3 id="开启暗黑-夜间模式"><a href="#开启暗黑-夜间模式" class="headerlink" title="开启暗黑/夜间模式"></a>开启暗黑/夜间模式</h3><p>只需将以下代码加入网页 <code>&lt;/body&gt;</code>之前即可。网页右下方将出现一个可切换正常模式或暗黑模式的按钮。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;darkmode-js@1.3.4&#x2F;lib&#x2F;darkmode-js.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  new Darkmode().showWidget();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>Darkmode.js 使用 CSS mix-blend-mode 将暗黑模式带入任何网站。</p><p>还可以通过下面这些代码对js文件自定义：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var options &#x3D; &#123;</span><br><span class="line">  bottom: &#39;64px&#39;, &#x2F;&#x2F; default: &#39;32px&#39;</span><br><span class="line">  right: &#39;unset&#39;, &#x2F;&#x2F; default: &#39;32px&#39;</span><br><span class="line">  left: &#39;32px&#39;, &#x2F;&#x2F; default: &#39;unset&#39;</span><br><span class="line">  time: &#39;0.5s&#39;, &#x2F;&#x2F; default: &#39;0.3s&#39;</span><br><span class="line">  mixColor: &#39;#fff&#39;, &#x2F;&#x2F; default: &#39;#fff&#39;</span><br><span class="line">  backgroundColor: &#39;#fff&#39;,  &#x2F;&#x2F; default: &#39;#fff&#39;</span><br><span class="line">  buttonColorDark: &#39;#100f2c&#39;,  &#x2F;&#x2F; default: &#39;#100f2c&#39;</span><br><span class="line">  buttonColorLight: &#39;#fff&#39;, &#x2F;&#x2F; default: &#39;#fff&#39;</span><br><span class="line">  saveInCookies: false, &#x2F;&#x2F; default: true,</span><br><span class="line">  label: &#39;🌓&#39;, &#x2F;&#x2F; default: &#39;&#39;</span><br><span class="line">  autoMatchOsTheme: true &#x2F;&#x2F; default: true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const darkmode &#x3D; new Darkmode(options);</span><br><span class="line">darkmode.showWidget();</span><br></pre></td></tr></table></figure><p>更多高级自定义用法请移步<a href="https://darkmodejs.learn.uno/" target="_blank" rel="noopener">Darkmode.js</a>进行学习。</p><p>对于按钮样式总觉得有点不太好看，于是加入自己的CSS样式,让按钮感觉开了灯光效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.darkmode-toggle&#123;</span><br><span class="line">box-shadow: 0px 0px 10px 5px #aaa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="给自己网站添加音乐播放器"><a href="#给自己网站添加音乐播放器" class="headerlink" title="给自己网站添加音乐播放器"></a>给自己网站添加音乐播放器</h3><p>方法一：打开网易云官网，进入我的主页，选择自己的歌单，点击生成外链播放器，选择尺寸，然后复制代码到网站中，最后给src链接添加https:即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;760 height&#x3D;110 src&#x3D;&quot;https:&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;0&amp;id&#x3D;2505260244&amp;auto&#x3D;1&amp;height&#x3D;90&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p>方法二：直接使用<a href="https://player.lmih.cn" target="_blank" rel="noopener" title="点我">明月浩空音乐播放器</a>，注册自己的账户，设置自己的域名和播放器ID生成代码使用。<br>免插件：将此段播放器代码插入到网页最底部的&lt; /body&gt;&lt; /html&gt;标签之前</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;player.lmih.cn&#x2F;player&#x2F;js&#x2F;player.js&quot; id&#x3D;&quot;myhk&quot; key&#x3D;&quot;158720204358&quot; m&#x3D;&quot;1&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>（非必要）如果提示jQuery问题，将此段代码插入到网站的&lt; header&gt;，或播放器代码之前  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;lib.baomitu.com&#x2F;jquery&#x2F;3.3.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>注意：https:需要自己加上，此播放器不仅可以设置自己的歌单，还可以免费下载付费音乐哦！更多福利可自行探索。。。</p><p>方法三：使用<a href="https://player.ilt.me/" target="_blank" rel="noopener">宅音乐播放器</a>,和明月浩空音乐播放器类似注册使用，不过这个功能简陋，但可以添加多个音乐歌单，只是不太稳定，对于个人使用足够了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 添加宅音乐播放器插件 --&gt;</span><br><span class="line">&lt;script id&#x3D;&quot;ilt&quot; src&#x3D;&quot;https:&#x2F;&#x2F;player.ilt.me&#x2F;player&#x2F;js&#x2F;player.js&quot; key&#x3D;&quot;1b8e0112801f4e76990df9469337dd1c&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>（非必要）如果提示jQuery问题，将此段代码插入到网站的&lt; header&gt;，或播放器代码之前  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;lib.baomitu.com&#x2F;jquery&#x2F;3.3.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="给网站添加全网分享按钮"><a href="#给网站添加全网分享按钮" class="headerlink" title="给网站添加全网分享按钮"></a>给网站添加全网分享按钮</h3><p>注意：代码要放在&lt; body&gt;元素中。</p><blockquote><p>传送门：<a href="http://www.bshare.cn/" target="_blank" rel="noopener">http://www.bshare.cn/</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div class&#x3D;&quot;bshare-custom icon-medium&quot;&gt;&lt;a title&#x3D;&quot;分享到QQ空间&quot; class&#x3D;&quot;bshare-qzone&quot;&gt;&lt;&#x2F;a&gt;&lt;a title&#x3D;&quot;分享到微信&quot; class&#x3D;&quot;bshare-weixin&quot;&gt;&lt;&#x2F;a&gt;&lt;a title&#x3D;&quot;分享到QQ好友&quot; class&#x3D;&quot;bshare-qqim&quot;&gt;&lt;&#x2F;a&gt;&lt;a title&#x3D;&quot;分享到新浪微博&quot; class&#x3D;&quot;bshare-sinaminiblog&quot;&gt;&lt;&#x2F;a&gt;&lt;a title&#x3D;&quot;分享到Facebook&quot; class&#x3D;&quot;bshare-facebook&quot;&gt;&lt;&#x2F;a&gt;&lt;a title&#x3D;&quot;分享到网易微博&quot; class&#x3D;&quot;bshare-neteasemb&quot;&gt;&lt;&#x2F;a&gt;&lt;a title&#x3D;&quot;更多平台&quot; class&#x3D;&quot;bshare-more bshare-more-icon more-style-addthis&quot;&gt;&lt;&#x2F;a&gt;&lt;span class&#x3D;&quot;BSHARE_COUNT bshare-share-count&quot;&gt;0&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot; src&#x3D;&quot;http:&#x2F;&#x2F;static.bshare.cn&#x2F;b&#x2F;buttonLite.js#style&#x3D;-1&amp;uuid&#x3D;&amp;pophcol&#x3D;2&amp;lang&#x3D;zh&quot;&gt;&lt;&#x2F;script&gt;&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; charset&#x3D;&quot;utf-8&quot; src&#x3D;&quot;http:&#x2F;&#x2F;static.bshare.cn&#x2F;b&#x2F;bshareC0.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">bShare.addEntry(&#123;</span><br><span class="line">title: &quot;向阳榆木&quot;,</span><br><span class="line">url: &quot;https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;OnlyI.html&quot;,</span><br><span class="line">summary: &quot;致力于IT技术分享，帮助大家轻松导航和科学使用工具，便于学习&quot;,</span><br><span class="line">pic: &quot;http:&#x2F;&#x2F;img0.imgtn.bdimg.com&#x2F;it&#x2F;u&#x3D;379200563,285512275&amp;fm&#x3D;26&amp;gp&#x3D;0.jpg&quot;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="给网页添加3D动态骰子"><a href="#给网页添加3D动态骰子" class="headerlink" title="给网页添加3D动态骰子"></a>给网页添加3D动态骰子</h3><p>html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;box&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;o&quot;&gt;欢迎&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;t&quot;&gt;访问&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;th&quot;&gt;小康&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;fo&quot;&gt;生活&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;fi&quot;&gt;幻影&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;s&quot;&gt;空间&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>css代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">float: left;</span><br><span class="line">            margin: 15px 50px;</span><br><span class="line">            position: relative;</span><br><span class="line">            transform-style: preserve-3d;  &#x2F;*可以让骰子看来立体，给后面的旋转元素保留空间*&#x2F;</span><br><span class="line">           transition: all 5s;&#x2F;*设置过度  单我鼠标经过会有一个x轴360度旋转，z轴旋转360def的效果*&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box:hover &#123;</span><br><span class="line">            transform: rotateX(360deg) rotateZ(360deg); </span><br><span class="line">        &#125;</span><br><span class="line">       .box&gt; div &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            position: absolute;&#x2F;*设置定位 让盒子全都靠在在一起*&#x2F;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">            box-shadow:inset 0 0 15px rgba(0, 0, 0, .2);&#x2F;*盒子内边距阴影  这样立体感效果十足*&#x2F;</span><br><span class="line">            background-color: rgba(255, 255, 255, .1);</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">        .o &#123;</span><br><span class="line">            transform: translateZ(50px); </span><br><span class="line">        &#125;</span><br><span class="line">        .t &#123;</span><br><span class="line">            transform: rotateY(90deg) translateZ(50px);</span><br><span class="line">        &#125;</span><br><span class="line">        .th &#123;</span><br><span class="line">            transform:rotateY(180deg) translateZ(50px) ;</span><br><span class="line">        &#125;</span><br><span class="line">        .fo &#123;</span><br><span class="line">            transform: rotateY(-90deg) translateZ(50px);</span><br><span class="line">        &#125;</span><br><span class="line">        .fi &#123;</span><br><span class="line">            transform:rotateX(-90deg) translateZ(50px) ;</span><br><span class="line">        &#125;</span><br><span class="line">        .s &#123;</span><br><span class="line">            transform: rotateX(90deg) translateZ(50px); </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="添加打字效果"><a href="#添加打字效果" class="headerlink" title="添加打字效果"></a>添加打字效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;typeIt&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!-- 打字效果插件 --&gt;</span><br><span class="line">&lt;script src &#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;typeit@6.1.1&#x2F;dist&#x2F;typeit.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">new TypeIt(&quot;#typeIt&quot;,&#123;</span><br><span class="line">strings:&#39;欢迎幸运的您访问我的网页，这里有您意想不到的资源哦。。。&#39;,</span><br><span class="line">speed: 100,</span><br><span class="line">startDelay: 2000</span><br><span class="line">&#125;).go();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="随鼠标移动的动态线条特效"><a href="#随鼠标移动的动态线条特效" class="headerlink" title="随鼠标移动的动态线条特效"></a>随鼠标移动的动态线条特效</h3><p>使用bootstrap框架，在OnlyI文件夹下的bootstrap.min.js内将如下代码复制进入即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">!function() &#123;</span><br><span class="line">    function n(n, e, t) &#123;</span><br><span class="line">        return n.getAttribute(e) || t</span><br><span class="line">    &#125;</span><br><span class="line">    function e(n) &#123;</span><br><span class="line">        return document.getElementsByTagName(n)</span><br><span class="line">    &#125;</span><br><span class="line">    function t() &#123;</span><br><span class="line">        var t &#x3D; e(&quot;script&quot;),</span><br><span class="line">        o &#x3D; t.length,</span><br><span class="line">        i &#x3D; t[o - 1];</span><br><span class="line">        return &#123;</span><br><span class="line">            l: o,</span><br><span class="line">            z: n(i, &quot;zIndex&quot;, -1),</span><br><span class="line">            o: n(i, &quot;opacity&quot;, .5),</span><br><span class="line">            c: n(i, &quot;color&quot;, &quot;0,0,0&quot;),</span><br><span class="line">            n: n(i, &quot;count&quot;, 99)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function o() &#123;</span><br><span class="line">        a &#x3D; m.width &#x3D; window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,</span><br><span class="line">        c &#x3D; m.height &#x3D; window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight</span><br><span class="line">    &#125;</span><br><span class="line">    function i() &#123;</span><br><span class="line">        r.clearRect(0, 0, a, c);</span><br><span class="line">        var n, e, t, o, m, l;</span><br><span class="line">        s.forEach(function(i, x) &#123;</span><br><span class="line">            for (i.x +&#x3D; i.xa, i.y +&#x3D; i.ya, i.xa *&#x3D; i.x &gt; a || i.x &lt; 0 ? -1 : 1, i.ya *&#x3D; i.y &gt; c || i.y &lt; 0 ? -1 : 1, r.fillRect(i.x - .5, i.y - .5, 1, 1), e &#x3D; x + 1; e &lt; u.length; e++) n &#x3D; u[e],</span><br><span class="line">            null !&#x3D;&#x3D; n.x &amp;&amp; null !&#x3D;&#x3D; n.y &amp;&amp; (o &#x3D; i.x - n.x, m &#x3D; i.y - n.y, l &#x3D; o * o + m * m, l &lt; n.max &amp;&amp; (n &#x3D;&#x3D;&#x3D; y &amp;&amp; l &gt;&#x3D; n.max &#x2F; 2 &amp;&amp; (i.x -&#x3D; .03 * o, i.y -&#x3D; .03 * m), t &#x3D; (n.max - l) &#x2F; n.max, r.beginPath(), r.lineWidth &#x3D; t &#x2F; 2, r.strokeStyle &#x3D; &quot;rgba(&quot; + d.c + &quot;,&quot; + (t + .2) + &quot;)&quot;, r.moveTo(i.x, i.y), r.lineTo(n.x, n.y), r.stroke()))</span><br><span class="line">        &#125;),</span><br><span class="line">        x(i)</span><br><span class="line">    &#125;</span><br><span class="line">    var a, c, u, m &#x3D; document.createElement(&quot;canvas&quot;),</span><br><span class="line">    d &#x3D; t(),</span><br><span class="line">    l &#x3D; &quot;c_n&quot; + d.l,</span><br><span class="line">    r &#x3D; m.getContext(&quot;2d&quot;),</span><br><span class="line">    x &#x3D; window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||</span><br><span class="line">    function(n) &#123;</span><br><span class="line">        window.setTimeout(n, 1e3 &#x2F; 45)</span><br><span class="line">    &#125;,</span><br><span class="line">    w &#x3D; Math.random,</span><br><span class="line">    y &#x3D; &#123;</span><br><span class="line">        x: null,</span><br><span class="line">        y: null,</span><br><span class="line">        max: 2e4</span><br><span class="line">    &#125;;</span><br><span class="line">    m.id &#x3D; l,</span><br><span class="line">    m.style.cssText &#x3D; &quot;position:fixed;top:0;left:0;z-index:&quot; + d.z + &quot;;opacity:&quot; + d.o,</span><br><span class="line">    e(&quot;body&quot;)[0].appendChild(m),</span><br><span class="line">    o(),</span><br><span class="line">    window.onresize &#x3D; o,</span><br><span class="line">    window.onmousemove &#x3D; function(n) &#123;</span><br><span class="line">        n &#x3D; n || window.event,</span><br><span class="line">        y.x &#x3D; n.clientX,</span><br><span class="line">        y.y &#x3D; n.clientY</span><br><span class="line">    &#125;,</span><br><span class="line">    window.onmouseout &#x3D; function() &#123;</span><br><span class="line">        y.x &#x3D; null,</span><br><span class="line">        y.y &#x3D; null</span><br><span class="line">    &#125;;</span><br><span class="line">    for (var s &#x3D; [], f &#x3D; 0; d.n &gt; f; f++) &#123;</span><br><span class="line">        var h &#x3D; w() * a,</span><br><span class="line">        g &#x3D; w() * c,</span><br><span class="line">        v &#x3D; 2 * w() - 1,</span><br><span class="line">        p &#x3D; 2 * w() - 1;</span><br><span class="line">        s.push(&#123;</span><br><span class="line">            x: h,</span><br><span class="line">            y: g,</span><br><span class="line">            xa: v,</span><br><span class="line">            ya: p,</span><br><span class="line">            max: 6e3</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    u &#x3D; s.concat([y]),</span><br><span class="line">    setTimeout(function() &#123;</span><br><span class="line">        i()</span><br><span class="line">    &#125;,</span><br><span class="line">    100)</span><br><span class="line">&#125; ();</span><br></pre></td></tr></table></figure><p>运用时将其放在&lt; body&gt;中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;OnlyI&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="页面点击爱心特效"><a href="#页面点击爱心特效" class="headerlink" title="页面点击爱心特效"></a>页面点击爱心特效</h3><p>放在&lt; head&gt;或&lt; body&gt;都可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;OnlyI&#x2F;love.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>OnlyI/love.js代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">!function(e, t, a) &#123;</span><br><span class="line">    function r() &#123;</span><br><span class="line">        for (var e &#x3D; 0; e &lt; s.length; e++) s[e].alpha &lt;&#x3D; 0 ? (t.body.removeChild(s[e].el), s.splice(e, 1)) : (s[e].y--, s[e].scale +&#x3D; .004, s[e].alpha -&#x3D; .013, s[e].el.style.cssText &#x3D; &quot;left:&quot; + s[e].x + &quot;px;top:&quot; + s[e].y + &quot;px;opacity:&quot; + s[e].alpha + &quot;;transform:scale(&quot; + s[e].scale + &quot;,&quot; + s[e].scale + &quot;) rotate(45deg);background:&quot; + s[e].color + &quot;;z-index:99999&quot;);</span><br><span class="line">        requestAnimationFrame(r)</span><br><span class="line">    &#125;</span><br><span class="line">    function n() &#123;</span><br><span class="line">        var t &#x3D; &quot;function&quot; &#x3D;&#x3D; typeof e.onclick &amp;&amp; e.onclick;</span><br><span class="line">        e.onclick &#x3D; function(e) &#123;</span><br><span class="line">            t &amp;&amp; t(),</span><br><span class="line">            o(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function o(e) &#123;</span><br><span class="line">        var a &#x3D; t.createElement(&quot;div&quot;);</span><br><span class="line">        a.className &#x3D; &quot;heart&quot;,</span><br><span class="line">        s.push(&#123;</span><br><span class="line">            el: a,</span><br><span class="line">            x: e.clientX - 5,</span><br><span class="line">            y: e.clientY - 5,</span><br><span class="line">            scale: 1,</span><br><span class="line">            alpha: 1,</span><br><span class="line">            color: c()</span><br><span class="line">        &#125;),</span><br><span class="line">        t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    function i(e) &#123;</span><br><span class="line">        var a &#x3D; t.createElement(&quot;style&quot;);</span><br><span class="line">        a.type &#x3D; &quot;text&#x2F;css&quot;;</span><br><span class="line">        try &#123;</span><br><span class="line">            a.appendChild(t.createTextNode(e))</span><br><span class="line">        &#125; catch(t) &#123;</span><br><span class="line">            a.styleSheet.cssText &#x3D; e</span><br><span class="line">        &#125;</span><br><span class="line">        t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">    function c() &#123;</span><br><span class="line">        return &quot;rgb(&quot; + ~~ (255 * Math.random()) + &quot;,&quot; + ~~ (255 * Math.random()) + &quot;,&quot; + ~~ (255 * Math.random()) + &quot;)&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    var s &#x3D; [];</span><br><span class="line">    e.requestAnimationFrame &#x3D; e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame ||</span><br><span class="line">    function(e) &#123;</span><br><span class="line">        setTimeout(e, 1e3 &#x2F; 60)</span><br><span class="line">    &#125;,</span><br><span class="line">    i(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),</span><br><span class="line">    n(),</span><br><span class="line">    r()</span><br><span class="line">&#125; (window, document);</span><br></pre></td></tr></table></figure><h3 id="点击按钮-页面平滑至顶部-底部"><a href="#点击按钮-页面平滑至顶部-底部" class="headerlink" title="点击按钮 页面平滑至顶部/底部"></a>点击按钮 页面平滑至顶部/底部</h3><p>html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;backUp&quot; style&#x3D;&quot;z-index: 9999; position: fixed ! important; right: 5px; bottom: 70px;&quot;&gt;</span><br><span class="line">     &lt;img src&#x3D;&quot;..&#x2F;..&#x2F;Content&#x2F;img&#x2F;top.png&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;backDown&quot; style&#x3D;&quot;z-index: 9999; position: fixed ! important; right: 5px; bottom: 30px;&quot;&gt;</span><br><span class="line">     &lt;img style&#x3D;&quot;transform:rotate(180deg);&quot; src&#x3D;&quot;..&#x2F;..&#x2F;Content&#x2F;img&#x2F;top.png&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>JS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;回顶部</span><br><span class="line">$(&#39;#backUp&#39;).click(function () &#123; $(&#39;html,body&#39;).animate(&#123; scrollTop: &#39;0px&#39; &#125;, 2000); return false; &#125;);</span><br><span class="line">&#x2F;&#x2F;回底部（网页最末端）</span><br><span class="line">$(&#39;#backDown&#39;).click(function () &#123; $(&#39;html,body&#39;).animate(&#123; scrollTop: document.getElementsByTagName(&#39;BODY&#39;)[0].scrollHeight&#125;, 2000); return false; &#125;);</span><br></pre></td></tr></table></figure><p>图片：<img src="/img/loading.gif" class="lazyload" data-src="https://img-blog.csdn.net/20180702135946216?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NoYW5nZWFibGUwMTI3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"  alt title="置顶/置底top.png"></p><h3 id="添加字体闪烁-变色-特效"><a href="#添加字体闪烁-变色-特效" class="headerlink" title="添加字体闪烁(变色)特效"></a>添加字体闪烁(变色)特效</h3><ol><li><p>给要添加特效的元素添加 class=”magic-color”。</p></li><li><p>将以下代码复制到元素后面或者放在&lt; head&gt;标签中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 添加字体闪烁（变色）特效 --&gt;</span><br><span class="line">&lt;script&gt;function magicColor(mode,t)&#123;</span><br><span class="line">    t&#x3D;t||10;</span><br><span class="line">    let elem&#x3D;document.getElementsByClassName(&quot;magic-color&quot;);</span><br><span class="line">    if(!elem)&#123;</span><br><span class="line">        setTimeout(function()&#123;</span><br><span class="line">            magicColor(mode,t-1);</span><br><span class="line">        &#125;,400);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    if(window.mcHandler&#x3D;&#x3D;undefined)&#123;</span><br><span class="line">        window.mcHandler&#x3D;&#123;elements:[]&#125;;</span><br><span class="line">        window.mcHandler.colorIndex&#x3D;0;</span><br><span class="line">        window.mcHandler.run&#x3D;function(mode)&#123;</span><br><span class="line">            let color&#x3D;mode&#x3D;&#x3D;&quot;random&quot;?(&quot;rgb(&quot;+Math.floor(Math.random()*256)+&quot;,&quot;+Math.floor(Math.random()*256)+&quot;,&quot;+Math.floor(Math.random()*256)+&quot;,1)&quot;):[&quot;#CC0000&quot;,&quot;#9999CC&quot;,&quot;#CC3366&quot;,&quot;#669999&quot;,&quot;#FFCC00&quot;,&quot;#00CCCC&quot;,&quot;#CC00CC&quot;][(window.mcHandler.colorIndex++)%7];</span><br><span class="line">            for(var i&#x3D;0,L&#x3D;window.mcHandler.elements.length;i&lt;L;i++)window.mcHandler.elements[i].style.color&#x3D;color;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    window.mcHandler.elements&#x3D;elem;</span><br><span class="line">    if(window.mcHandler.timer&#x3D;&#x3D;undefined)&#123;</span><br><span class="line">        window.mcHandler.timer&#x3D;setInterval(()&#x3D;&gt;&#123;window.mcHandler.run(mode)&#125;,500);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">magicColor(&quot;&quot;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="添加一个天气插件"><a href="#添加一个天气插件" class="headerlink" title="添加一个天气插件"></a>添加一个天气插件</h3></li></ol><ul><li>使用方法</li><li><a href="http://u2.weather.com.cn/web/sso/regist-ui.do" target="_blank" rel="noopener">注册中国天气网帐号</a>或<a href="http://u2.weather.com.cn/web/sso/login-ui.do" target="_blank" rel="noopener">登录</a>（已有帐号）</li><li>登陆后<a href="https://cj.weather.com.cn/plugin/pc" target="_blank" rel="noopener">打开天气插件网页</a></li><li>自定义喜欢的插件样式</li><li>自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 天气预报 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">WIDGET &#x3D; &#123;FID: &#39;xMTkJaIYK0&#39;&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;apip.weatherdt.com&#x2F;float&#x2F;static&#x2F;js&#x2F;r.js?v&#x3D;1111&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ul><li>将生成的代码复制到 html 文件里即可</li></ul><h3 id="添加动漫玩偶效果"><a href="#添加动漫玩偶效果" class="headerlink" title="添加动漫玩偶效果"></a>添加动漫玩偶效果</h3><ul><li>方法一：将下面代码放入网页的&lt; head&gt;标签中即可，但只有单个看板娘，可能需要根据自己网页布局调试。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--看板娘CSS --&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">canvas#live2dcanvas &#123;</span><br><span class="line">border: 0 !important;</span><br><span class="line">left: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--看板娘小女孩 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;blog-static.cnblogs.com&#x2F;files&#x2F;luzhanshi&#x2F;kbn.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;blog-static.cnblogs.com&#x2F;files&#x2F;luzhanshi&#x2F;L2Dwidget.0.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;blog-static.cnblogs.com&#x2F;files&#x2F;luzhanshi&#x2F;L2Dwidget.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">　　L2Dwidget.init(&#123; &quot;model&quot;: &#123; jsonPath:</span><br><span class="line">　　&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-shizuku@1.0.5&#x2F;assets&#x2F;shizuku.model.json&quot;,</span><br><span class="line">　　&quot;scale&quot;: 1 &#125;, &quot;display&quot;: &#123; &quot;position&quot;: &quot;right&quot;, &quot;width&quot;: 110, &quot;height&quot;: 210,</span><br><span class="line">　　&quot;hOffset&quot;: 0, &quot;vOffset&quot;: -20 &#125;, &quot;mobile&quot;: &#123; &quot;show&quot;: true, &quot;scale&quot;: 0.5 &#125;,</span><br><span class="line">　　&quot;react&quot;: &#123; &quot;opacityDefault&quot;: 0.7, &quot;opacityOnHover&quot;: 0.2 &#125; &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ul><li>方法二：只需3行代码，为网站博客添加萌萌哒看板娘可爱二次元女动漫玩偶人物（推荐）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--三行代码实现看板娘 start --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&#x2F;&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;!--三行代码实现看板娘 end --&gt;</span><br></pre></td></tr></table></figure><p><strong>定制看板娘的语录(调教你的看板娘)</strong></p><ol><li><p>从github中下载项目: <a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">https://github.com/stevenjoezhang/live2d-widget</a></p></li><li><p>更改waifu-tip.json里面的内容</p></li><li><p>更改autoload.js的引入位置</p><p> 将&lt; script src=”<a href="https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js&quot;" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js&quot;</a> &gt; 改成自己修改后的路径</p></li></ol><h3 id="Live2D的使用"><a href="#Live2D的使用" class="headerlink" title="Live2D的使用"></a>Live2D的使用</h3><p>可以自定义添加更多自己喜欢的看板娘效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 固定看板娘效果 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;eqcn.ajz.miesnfu.com&#x2F;wp-content&#x2F;plugins&#x2F;wp-3d-pony&#x2F;live2dw&#x2F;lib&#x2F;L2Dwidget.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    L2Dwidget.init(&#123;</span><br><span class="line">        &quot;model&quot;: &#123;</span><br><span class="line">　　　　　　　&#x2F;&#x2F;jsonpath控制显示那个小萝莉模型，下面这个就是我觉得最可爱的小萝莉模型</span><br><span class="line">            jsonPath: &quot;https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-miku@1.0.5&#x2F;assets&#x2F;miku.model.json&quot;,</span><br><span class="line">            &quot;scale&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;display&quot;: &#123;</span><br><span class="line">            &quot;position&quot;: &quot;right&quot;, &#x2F;&#x2F;看板娘的表现位置</span><br><span class="line">            &quot;width&quot;: 150,  &#x2F;&#x2F;小萝莉的宽度</span><br><span class="line">            &quot;height&quot;: 300, &#x2F;&#x2F;小萝莉的高度</span><br><span class="line">            &quot;hOffset&quot;: 0,</span><br><span class="line">            &quot;vOffset&quot;: -20</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot;: &#123;</span><br><span class="line">            &quot;show&quot;: true,</span><br><span class="line">            &quot;scale&quot;: 0.5</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;react&quot;: &#123;</span><br><span class="line">            &quot;opacityDefault&quot;: 0.7,</span><br><span class="line">            &quot;opacityOnHover&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>通过替换代码中jsonPath来替换模型，可选的模型列表：</p><ul><li><code>live2d-widget-model-chitose</code></li><li><code>live2d-widget-model-epsilon2_1</code></li><li><code>live2d-widget-model-gf</code></li><li><code>live2d-widget-model-haru/01</code> </li><li><code>live2d-widget-model-haru/02</code> </li><li><code>live2d-widget-model-haruto</code></li><li><code>live2d-widget-model-hibiki</code></li><li><code>live2d-widget-model-hijiki</code></li><li><code>live2d-widget-model-izumi</code></li><li><code>live2d-widget-model-koharu</code></li><li><code>live2d-widget-model-miku</code></li><li><code>live2d-widget-model-ni-j</code></li><li><code>live2d-widget-model-nico</code></li><li><code>live2d-widget-model-nietzsche</code></li><li><code>live2d-widget-model-nipsilon</code></li><li><code>live2d-widget-model-nito</code></li><li><code>live2d-widget-model-shizuku</code></li><li><code>live2d-widget-model-tororo</code></li><li><code>live2d-widget-model-tsumiki</code></li><li><code>live2d-widget-model-unitychan</code></li><li><code>live2d-widget-model-wanko</code></li><li><code>live2d-widget-model-z16</code></li></ul><p><code style="color:red;">注意：</code>比如更换模型为<code>live2d-widget-model-koharu</code>，则jsonPath: “<a href="https://unpkg.com/" target="_blank" rel="noopener">https://unpkg.com/</a><code style="color:red;">live2d-widget-model-koharu</code>@1.0.5/assets/<code style="color:red;">koharu</code>.model.json”,将标红部分改为自定义模型对应名称即可。</p><p><strong>live2d-widget-models的GitHub地址：</strong><a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">https://github.com/xiazeyu/live2d-widget-models</a></p><h3 id="添加浮动小人效果"><a href="#添加浮动小人效果" class="headerlink" title="添加浮动小人效果"></a>添加浮动小人效果</h3><p>JQery代码引入：放在&lt; head&gt;标签中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 浮动的小人必须先加载的JQuery插件，否则无法拖动 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;lib.baomitu.com&#x2F;jquery&#x2F;3.3.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>JS代码：放在&lt; body&gt;标签底部</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--.浮动小人--&gt;    </span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">&lt;?php if(is_home()) echo &#39;var isindex&#x3D;true;var title&#x3D;&quot;&quot;;&#39;;else echo &#39;var isindex&#x3D;false;var title&#x3D;&quot;&#39;, get_the_title(),&#39;&quot;;&#39;; ?&gt;</span><br><span class="line">&lt;?php if((($display_name &#x3D; wp_get_current_user()-&gt;display_name) !&#x3D; null)) echo &#39;var visitor&#x3D;&quot;&#39;,$display_name,&#39;&quot;;&#39;; else if(isset($_COOKIE[&#39;comment_author_&#39;.COOKIEHASH])) echo &#39;var visitor&#x3D;&quot;&#39;,$_COOKIE[&#39;comment_author_&#39;.COOKIEHASH],&#39;&quot;;&#39;;else echo &#39;var visitor&#x3D;&quot;游客&quot;;&#39;;echo &quot;\n&quot;; ?&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;放置的js文件路径&#x2F;spig.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.spig &#123;display:block;width:130px;height:170px;position:absolute;bottom: 300px;left:160px;z-index:9999;&#125;</span><br><span class="line">#message&#123;color :#191919;border: 1px solid #c4c4c4;background:#ddd;-moz-border-radius:5px;-webkit-border-radius:5px;border-radius:5px;min-height:1em;padding:5px;top:-45px;position:absolute;text-align:center;width:auto !important;z-index:10000;-moz-box-shadow:0 0 15px #eeeeee;-webkit-box-shadow:0 0 15px #eeeeee;border-color:#eeeeee;box-shadow:0 0 15px #eeeeee;outline:none;&#125;</span><br><span class="line">.mumu&#123;width:130px;height:170px;cursor: move;background:url(小人图片路径&#x2F;spig.png) no-repeat;&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;spig&quot; class&#x3D;&quot;spig&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;message&quot;&gt;加载中……&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;mumu&quot; class&#x3D;&quot;mumu&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!--.end浮动小人--&gt;</span><br></pre></td></tr></table></figure><p>其中修改一下src路径和url路径即可。</p><p><a href="https://pan.baidu.com/s/1pJNr4oz" target="_blank" rel="noopener">浮动小人部分素材网盘下载地址</a></p><h3 id="给系统鼠标添加星星特效"><a href="#给系统鼠标添加星星特效" class="headerlink" title="给系统鼠标添加星星特效"></a>给系统鼠标添加星星特效</h3><p><a href="https://pan.baidu.com/share/link?shareid=2315382770&uk=2504301295" target="_blank" rel="noopener">下载地址</a></p><p><code style="color:red">说明</code>：下载直接解压后，双击打开Star Cursor.EXE程序，出现星星特效说明已经启动成功了，不需要再将其关闭即可。</p><h3 id="美化鼠标样式"><a href="#美化鼠标样式" class="headerlink" title="美化鼠标样式"></a>美化鼠标样式</h3><p><a href="https://zhutix.com/tag/cursors/" target="_blank" rel="noopener">下载链接</a></p><p>找到自己喜欢的鼠标样式，下载解压后，找到.inf文件，右键安装，在弹出的设置里面选择样式应用即可。</p><h3 id="网页添加鼠标跟随样式"><a href="#网页添加鼠标跟随样式" class="headerlink" title="网页添加鼠标跟随样式"></a>网页添加鼠标跟随样式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--引入鼠标**跟随的特效--&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;sviptzk&#x2F;HexoStaticFile@latest&#x2F;Hexo&#x2F;js&#x2F;mouse_snow.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="自动播放背景音乐"><a href="#自动播放背景音乐" class="headerlink" title="自动播放背景音乐"></a>自动播放背景音乐</h3><p>选择自己喜欢的音乐作为网页的背景音乐，但大多浏览器已不再支持标签audio的自动播放功能。</p><p>代码一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--自动播放音乐--&gt;</span><br><span class="line">&lt;audio autoplay&#x3D;&quot;autoplay&quot;&gt;</span><br><span class="line">&lt;!--通过外链转换工具https:&#x2F;&#x2F;link.hhtjim.com&#x2F;，将音乐id转成mp3格式--&gt;</span><br><span class="line">&lt;source src&#x3D;&quot;https:&#x2F;&#x2F;link.hhtjim.com&#x2F;163&#x2F;523251118.mp3&quot; type&#x3D;&quot;audio&#x2F;mpeg&quot;&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">document.getElementById(&#39;bgaudio&#39;).play();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;audio&gt;</span><br></pre></td></tr></table></figure><p>代码二：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio controls&#x3D;&quot;controls&quot; autoplay&#x3D;&quot;autoplay&quot; preload&#x3D;&quot;auto&quot;&gt;</span><br><span class="line"> &lt;source src&#x3D;&quot;https:&#x2F;&#x2F;www.joy127.com&#x2F;url&#x2F;79687.mp3 &quot; type&#x3D;&quot;audio&#x2F;mp3&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;audio&gt;</span><br><span class="line">&lt;style type&#x3D;&quot;text&#x2F;css&quot;&gt;</span><br><span class="line">     audio&#123;</span><br><span class="line">             display: none;</span><br><span class="line">         &#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure><p>注意：需要域名引入才能播放，本地引入无法播放。</p><h3 id="标题title切换效果"><a href="#标题title切换效果" class="headerlink" title="标题title切换效果"></a>标题title切换效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 标题title切换效果 --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        var originTitle &#x3D; document.title;</span><br><span class="line">        var titleTime;</span><br><span class="line">        document.addEventListener(&quot;visibilitychange&quot;, function() &#123;</span><br><span class="line">            if (document.hidden) &#123;</span><br><span class="line">                document.title &#x3D; &quot;(つェ⊂) 我藏好了哦~ &quot; + originTitle;</span><br><span class="line">                clearTimeout(titleTime);</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">                document.title &#x3D; &quot;(*´∇｀*) 被你发现啦~ &quot; + originTitle;</span><br><span class="line">                titleTime &#x3D; setTimeout(function() &#123;</span><br><span class="line">                    document.title &#x3D; originTitle;</span><br><span class="line">                &#125;, 2000);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="挂灯笼特效"><a href="#挂灯笼特效" class="headerlink" title="挂灯笼特效"></a>挂灯笼特效</h3><ol><li>第一步、添加HTML代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 灯笼 1 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;deng-box&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;deng&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;xian&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;deng-a&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;deng-b&quot;&gt;&lt;div class&#x3D;&quot;deng-t&quot;&gt;春节&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;shui shui-a&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;shui shui-b&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;shui shui-c&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!-- 灯笼 2 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;deng-box1&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;deng&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;xian&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;deng-a&quot;&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;deng-b&quot;&gt;&lt;div class&#x3D;&quot;deng-t&quot;&gt;快乐&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;shui shui-a&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;shui shui-b&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;shui shui-c&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>第二步、添加CSS样式</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 挂灯笼特效 *&#x2F;</span><br><span class="line">.xian &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: -20px;</span><br><span class="line">    left: 60px;</span><br><span class="line">    width: 2px;</span><br><span class="line">    height: 20px;</span><br><span class="line">    background: #dc8f03;</span><br><span class="line">&#125;</span><br><span class="line">.deng-box &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: -30px;</span><br><span class="line">&#x2F;* right: -20px; *&#x2F;</span><br><span class="line">    z-index: 999;</span><br><span class="line">&#125;</span><br><span class="line">.deng-box1 &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: -30px;</span><br><span class="line">    right: 0px;</span><br><span class="line">    z-index: 999;</span><br><span class="line">&#125;</span><br><span class="line">.deng-box1 .deng &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 120px;</span><br><span class="line">    height: 90px;</span><br><span class="line">    margin: 50px;</span><br><span class="line">    background: #d8000f;</span><br><span class="line">    background: rgba(216, 0, 15, 0.9);</span><br><span class="line">    border-radius: 50% 50%;</span><br><span class="line">    -webkit-transform-origin: 50% -100px;</span><br><span class="line">    -webkit-animation: swing 5s infinite ease-in-out;</span><br><span class="line">    box-shadow: -5px 5px 50px 4px rgba(250, 108, 0, 1);</span><br><span class="line">&#125;</span><br><span class="line">.deng &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 120px;</span><br><span class="line">    height: 90px;</span><br><span class="line">    margin: 50px;</span><br><span class="line">    background: #d8000f;</span><br><span class="line">    background: rgba(216, 0, 15, 0.9);</span><br><span class="line">    border-radius: 50% 50%;</span><br><span class="line">    -webkit-transform-origin: 50% -100px;</span><br><span class="line">    -webkit-animation: swing 3s infinite ease-in-out;</span><br><span class="line">    box-shadow: -5px 5px 50px 4px rgba(250, 108, 0, 1);</span><br><span class="line">&#125;</span><br><span class="line">.deng-a &#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 90px;</span><br><span class="line">    background: #d8000f;</span><br><span class="line">    background: rgba(216, 0, 15, 0.2);</span><br><span class="line">    margin: 12px 8px 8px 8px;</span><br><span class="line">    border-radius: 50% 50%;</span><br><span class="line">    border: 2px solid #dc8f03;</span><br><span class="line">&#125;</span><br><span class="line">.deng-b &#123;</span><br><span class="line">    width: 45px;</span><br><span class="line">    height: 90px;</span><br><span class="line">    background: #d8000f;</span><br><span class="line">    background: rgba(216, 0, 15, 0.2);</span><br><span class="line">    margin: -4px 8px 8px 26px;</span><br><span class="line">    border-radius: 50% 50%;</span><br><span class="line">    border: 2px solid #dc8f03;</span><br><span class="line">&#125;</span><br><span class="line">.shui &#123;</span><br><span class="line">    width: 5px;</span><br><span class="line">    height: 40px;</span><br><span class="line">    background: #ffa500;</span><br><span class="line">    border-radius: 0 0 5px 5px;</span><br><span class="line">&#125;</span><br><span class="line">.shui-a &#123;</span><br><span class="line">    margin: -10px 0 0 40px;</span><br><span class="line">    -webkit-animation: swing 4s infinite ease-in-out;</span><br><span class="line">    -webkit-transform-origin: 50% -20px;</span><br><span class="line">&#125;</span><br><span class="line">.shui-b &#123;</span><br><span class="line">    margin: -35px 0 0 59px;</span><br><span class="line">    -webkit-animation: swing 4s infinite ease-in-out;</span><br><span class="line">    -webkit-transform-origin: 50% -45px;</span><br><span class="line">&#125;</span><br><span class="line">.shui-c &#123;</span><br><span class="line">    margin: -45px 0 0 77px;</span><br><span class="line">    -webkit-animation: swing 4s infinite ease-in-out;</span><br><span class="line">    -webkit-transform-origin: 50% -25px;</span><br><span class="line">&#125;</span><br><span class="line">.deng:before &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: -7px;</span><br><span class="line">    left: 29px;</span><br><span class="line">    height: 12px;</span><br><span class="line">    width: 60px;</span><br><span class="line">    content: &quot; &quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    z-index: 999;</span><br><span class="line">    border-radius: 5px 5px 0 0;</span><br><span class="line">    border: solid 1px #dc8f03;</span><br><span class="line">    background: #ffa500;</span><br><span class="line">    background: linear-gradient(to rightright, #dc8f03, #ffa500, #dc8f03, #ffa500, #dc8f03);</span><br><span class="line">&#125;</span><br><span class="line">.deng:after &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    bottom: -7px;</span><br><span class="line">    left: 10px;</span><br><span class="line">    height: 12px;</span><br><span class="line">    width: 60px;</span><br><span class="line">    content: &quot; &quot;;</span><br><span class="line">    display: block;</span><br><span class="line">    margin-left: 20px;</span><br><span class="line">    border-radius: 0 0 5px 5px;</span><br><span class="line">    border: solid 1px #dc8f03;</span><br><span class="line">    background: #ffa500;</span><br><span class="line">    background: linear-gradient(to rightright, #dc8f03, #ffa500, #dc8f03, #ffa500, #dc8f03);</span><br><span class="line">&#125;</span><br><span class="line">.deng-t &#123;</span><br><span class="line">    font-family: 华文行楷,Arial,Lucida Grande,Tahoma,sans-serif;</span><br><span class="line">    font-size: 1.8rem;</span><br><span class="line">    color: #dc8f03;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    margin-top: 8px;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.night .deng-t,</span><br><span class="line">.night .deng-box,</span><br><span class="line">.night .deng-box1 &#123;</span><br><span class="line">    background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes swing &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        -moz-transform: rotate(-10deg)</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        -moz-transform: rotate(10deg)</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        -moz-transform: rotate(-10deg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes swing &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        -webkit-transform: rotate(-10deg)</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        -webkit-transform: rotate(10deg)</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        -webkit-transform: rotate(-10deg)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CSS样式代码量较多，可在CSS目录下建立deng.css文件，将其引入&lt; head&gt;标签中即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 灯笼CSS样式 --&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;css&#x2F;deng.css&quot; type&#x3D;&quot;text&#x2F;css&quot; rel&#x3D;&quot;stylesheet&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h3 id="梅花枝特效"><a href="#梅花枝特效" class="headerlink" title="梅花枝特效"></a>梅花枝特效</h3><ol><li>添加html代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 梅花枝，可删除 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;meiha&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加CSS代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**梅花枝CSS**&#x2F;</span><br><span class="line">.meiha &#123;</span><br><span class="line">position: fixed;</span><br><span class="line">top: 0;</span><br><span class="line">right: 0;</span><br><span class="line">z-index: 999;&#x2F;** 参数越大，堆叠顺序越往前 **&#x2F;</span><br><span class="line">width: 350px;&#x2F;** PNG图宽度 **&#x2F;</span><br><span class="line">height: 231px;&#x2F;** PNG图高度 **&#x2F;</span><br><span class="line">pointer-events: none;</span><br><span class="line">background: url(&#39;https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2020&#x2F;10&#x2F;26&#x2F;Bni5As.png&#39;) no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用的是fixed相对浏览器窗口定位，想要绝对定位在网页某处时，在父元素添加position:relative;相对定位，子元素再使用position: absolute;相对于父元素进行绝对定位，这样可以有效避免手机端浏览器不兼容问题。</p><h3 id="梅花灯笼效果"><a href="#梅花灯笼效果" class="headerlink" title="梅花灯笼效果"></a>梅花灯笼效果</h3><p>Html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 梅花灯笼效果 --&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;60420e5f360785be540d1bb1.png&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;lantern lantern-l&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;60420e5f360785be540d1bb5.png&quot; alt&#x3D;&quot;&quot; class&#x3D;&quot;lantern lantern-r&quot;&gt;</span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 梅花灯笼效果 *&#x2F;</span><br><span class="line">.lantern &#123;</span><br><span class="line">    z-index: 1;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: 0;</span><br><span class="line">    -webkit-animation: swing1 ease-in-out 5s infinite alternate;</span><br><span class="line">    animation: swing1 ease-in-out 5s infinite alternate</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.lantern-l &#123;</span><br><span class="line">    left: 0;</span><br><span class="line">    -webkit-transform-origin: top left;</span><br><span class="line">    -ms-transform-origin: top left;</span><br><span class="line">    transform-origin: top left;</span><br><span class="line">    -webkit-animation: swing1 ease-in-out 5s infinite alternate;</span><br><span class="line">    animation: swing1 ease-in-out 5s infinite alternate</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.lantern-r &#123;</span><br><span class="line">    right: 0;</span><br><span class="line">    -webkit-transform-origin: top right;</span><br><span class="line">    -ms-transform-origin: top right;</span><br><span class="line">    transform-origin: top right;</span><br><span class="line">    -webkit-animation: swing2 ease-in-out 5s infinite alternate;</span><br><span class="line">    animation: swing2 ease-in-out 5s infinite alternate</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes swing1 &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        -webkit-transform: rotate(5deg);</span><br><span class="line">        transform: rotate(5deg)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes swing1 &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        -webkit-transform: rotate(5deg);</span><br><span class="line">        transform: rotate(5deg)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-webkit-keyframes swing2 &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        -webkit-transform: rotate(-5deg);</span><br><span class="line">        transform: rotate(-5deg)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes swing2 &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        -webkit-transform: rotate(-5deg);</span><br><span class="line">        transform: rotate(-5deg)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    100% &#123;</span><br><span class="line">        -webkit-transform: rotate(0);</span><br><span class="line">        transform: rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="枫叶飘落特效"><a href="#枫叶飘落特效" class="headerlink" title="枫叶飘落特效"></a>枫叶飘落特效</h3><p>引入前先下载相关文件：<a href="https://wws.lanzous.com/iTKhqkvxssf" target="_blank" rel="noopener">js和img文件获取</a></p><ol><li>在&lt; /head&gt;标签前引入CSS代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href&#x3D;&quot;js&#x2F;zdy.css&quot; type&#x3D;&quot;text&#x2F;css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在&lt; /body&gt;标签前添加js代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 枫叶飘落特效 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;snowfall.jquery.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;zdy.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>还可以通过一行js代码实现樱花飘落效果。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;www.zyglz.com&#x2F;usr&#x2F;uploads&#x2F;yinghua.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="全局自定义鼠标样式"><a href="#全局自定义鼠标样式" class="headerlink" title="全局自定义鼠标样式"></a>全局自定义鼠标样式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 全局添加鼠标样式 *&#x2F;</span><br><span class="line">*&#123; cursor:url(&#39;https:&#x2F;&#x2F;www.trueme.net&#x2F;images&#x2F;yuhou_tree.cur&#39;),auto;&#125;</span><br><span class="line">a:hover &#123;  cursor: url(&#39;https:&#x2F;&#x2F;ihuan.me&#x2F;wp-content&#x2F;themes&#x2F;CKoo&#x2F;1.cur&#39;), pointer !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="叶子飘落特效"><a href="#叶子飘落特效" class="headerlink" title="叶子飘落特效"></a>叶子飘落特效</h3><ol><li>步骤一：引入&lt; head&gt;标签处的CSS代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 树叶飘落装饰特效CSS --&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;GreedySnake&#x2F;css&#x2F;default.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;GreedySnake&#x2F;css&#x2F;jquery.classyleaves.min.css&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>步骤二：引入&lt; body&gt;标签处的html、JS代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;addLeaf btn btn-danger&quot;&gt;增加叶子&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 叶子飘落特效JS --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;GreedySnake&#x2F;js&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;GreedySnake&#x2F;js&#x2F;jquery.rotate.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;GreedySnake&#x2F;js&#x2F;jquery.classyleaves.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(document).ready(function() &#123;</span><br><span class="line">            var tree &#x3D; new ClassyLeaves(&#123;</span><br><span class="line">                leaves: 30,</span><br><span class="line">                maxY: -10,</span><br><span class="line">                multiplyOnClick: true,</span><br><span class="line">                multiply: 2,</span><br><span class="line">                infinite: true,</span><br><span class="line">                speed: 4000</span><br><span class="line">            &#125;);</span><br><span class="line">            $(&#39;body&#39;).on(&#39;click&#39;, &#39;.addLeaf&#39;, function() &#123;</span><br><span class="line">                tree.add(8);</span><br><span class="line">                return false;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="雪花特效"><a href="#雪花特效" class="headerlink" title="雪花特效"></a>雪花特效</h3><p>在网页末尾&lt; /body&gt;上方（这样可以最后加载特效，以免影响其他内容的访问速度）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 下雪特效一 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;api.dujin.org&#x2F;js&#x2F;xiaxue&#x2F;xiaxue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 下雪特效二 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">(function($)&#123;</span><br><span class="line">$.fn.snow &#x3D; function(options)&#123;</span><br><span class="line">var $flake &#x3D; $(&#39;&lt;div id&#x3D;&quot;snowbox&quot; &#x2F;&gt;&#39;).css(&#123;&#39;position&#39;: &#39;absolute&#39;,&#39;z-index&#39;:&#39;9999&#39;, &#39;top&#39;: &#39;-50px&#39;&#125;).html(&#39;&amp;#10052;&#39;),</span><br><span class="line">documentHeight &#x3D; $(document).height(),</span><br><span class="line">documentWidth&#x3D; $(document).width(),</span><br><span class="line">defaults &#x3D; &#123;</span><br><span class="line">minSize: 10,</span><br><span class="line">maxSize: 20,</span><br><span class="line">newOn: 1000,</span><br><span class="line">flakeColor: &quot;#AFDAEF&quot; &#x2F;* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF *&#x2F;</span><br><span class="line">&#125;,</span><br><span class="line">options&#x3D; $.extend(&#123;&#125;, defaults, options);</span><br><span class="line">var interval&#x3D; setInterval( function()&#123;</span><br><span class="line">var startPositionLeft &#x3D; Math.random() * documentWidth - 100,</span><br><span class="line">startOpacity &#x3D; 0.5 + Math.random(),</span><br><span class="line">sizeFlake &#x3D; options.minSize + Math.random() * options.maxSize,</span><br><span class="line">endPositionTop &#x3D; documentHeight - 200,</span><br><span class="line">endPositionLeft &#x3D; startPositionLeft - 500 + Math.random() * 500,</span><br><span class="line">durationFall &#x3D; documentHeight * 10 + Math.random() * 5000;</span><br><span class="line">$flake.clone().appendTo(&#39;body&#39;).css(&#123;</span><br><span class="line">left: startPositionLeft,</span><br><span class="line">opacity: startOpacity,</span><br><span class="line">&#39;font-size&#39;: sizeFlake,</span><br><span class="line">color: options.flakeColor</span><br><span class="line">&#125;).animate(&#123;</span><br><span class="line">top: endPositionTop,</span><br><span class="line">left: endPositionLeft,</span><br><span class="line">opacity: 0.2</span><br><span class="line">&#125;,durationFall,&#39;linear&#39;,function()&#123;</span><br><span class="line">$(this).remove()</span><br><span class="line">&#125;);</span><br><span class="line">&#125;, options.newOn);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $.fn.snow(&#123; </span><br><span class="line">    minSize: 5, &#x2F;* 定义雪花最小尺寸 *&#x2F;</span><br><span class="line">    maxSize: 50,&#x2F;* 定义雪花最大尺寸 *&#x2F;</span><br><span class="line">    newOn: 300  &#x2F;* 定义密集程度，数字越小越密集 *&#x2F;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 下雪特效三 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    &#x2F;* 控制下雪 *&#x2F;</span><br><span class="line">    function snowFall(snow) &#123;</span><br><span class="line">        &#x2F;* 可配置属性 *&#x2F;</span><br><span class="line">        snow &#x3D; snow || &#123;&#125;;</span><br><span class="line">        this.maxFlake &#x3D; snow.maxFlake || 200;   &#x2F;* 最多片数 *&#x2F;</span><br><span class="line">        this.flakeSize &#x3D; snow.flakeSize || 10;  &#x2F;* 雪花形状 *&#x2F;</span><br><span class="line">        this.fallSpeed &#x3D; snow.fallSpeed || 1;   &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;* 兼容写法 *&#x2F;</span><br><span class="line">    requestAnimationFrame &#x3D; window.requestAnimationFrame ||</span><br><span class="line">        window.mozRequestAnimationFrame ||</span><br><span class="line">        window.webkitRequestAnimationFrame ||</span><br><span class="line">        window.msRequestAnimationFrame ||</span><br><span class="line">        window.oRequestAnimationFrame ||</span><br><span class="line">        function(callback) &#123; setTimeout(callback, 1000 &#x2F; 60); &#125;;</span><br><span class="line"> </span><br><span class="line">    cancelAnimationFrame &#x3D; window.cancelAnimationFrame ||</span><br><span class="line">        window.mozCancelAnimationFrame ||</span><br><span class="line">        window.webkitCancelAnimationFrame ||</span><br><span class="line">        window.msCancelAnimationFrame ||</span><br><span class="line">        window.oCancelAnimationFrame;</span><br><span class="line">    &#x2F;* 开始下雪 *&#x2F;</span><br><span class="line">    snowFall.prototype.start &#x3D; function()&#123;</span><br><span class="line">        &#x2F;* 创建画布 *&#x2F;</span><br><span class="line">        snowCanvas.apply(this);</span><br><span class="line">        &#x2F;* 创建雪花形状 *&#x2F;</span><br><span class="line">        createFlakes.apply(this);</span><br><span class="line">        &#x2F;* 画雪 *&#x2F;</span><br><span class="line">        drawSnow.apply(this)</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;* 创建画布 *&#x2F;</span><br><span class="line">    function snowCanvas() &#123;</span><br><span class="line">        &#x2F;* 添加Dom结点 *&#x2F;</span><br><span class="line">        var snowcanvas &#x3D; document.createElement(&quot;canvas&quot;);</span><br><span class="line">        snowcanvas.id &#x3D; &quot;snowfall&quot;;</span><br><span class="line">        snowcanvas.width &#x3D; window.innerWidth;</span><br><span class="line">        snowcanvas.height &#x3D; document.body.clientHeight;</span><br><span class="line">        snowcanvas.setAttribute(&quot;style&quot;, &quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;);</span><br><span class="line">        document.getElementsByTagName(&quot;body&quot;)[0].appendChild(snowcanvas);</span><br><span class="line">        this.canvas &#x3D; snowcanvas;</span><br><span class="line">        this.ctx &#x3D; snowcanvas.getContext(&quot;2d&quot;);</span><br><span class="line">        &#x2F;* 窗口大小改变的处理 *&#x2F;</span><br><span class="line">        window.onresize &#x3D; function() &#123;</span><br><span class="line">            snowcanvas.width &#x3D; window.innerWidth;</span><br><span class="line">            &#x2F;* snowcanvas.height &#x3D; window.innerHeight *&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;* 雪运动对象 *&#x2F;</span><br><span class="line">    function flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) &#123;</span><br><span class="line">        this.x &#x3D; Math.floor(Math.random() * canvasWidth);   &#x2F;* x坐标 *&#x2F;</span><br><span class="line">        this.y &#x3D; Math.floor(Math.random() * canvasHeight);  &#x2F;* y坐标 *&#x2F;</span><br><span class="line">        this.size &#x3D; Math.random() * flakeSize + 2;          &#x2F;* 形状 *&#x2F;</span><br><span class="line">        this.maxSize &#x3D; flakeSize;                           &#x2F;* 最大形状 *&#x2F;</span><br><span class="line">        this.speed &#x3D; Math.random() * 1 + fallSpeed;         &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">        this.fallSpeed &#x3D; fallSpeed;                         &#x2F;* 坠落速度 *&#x2F;</span><br><span class="line">        this.velY &#x3D; this.speed;                             &#x2F;* Y方向速度 *&#x2F;</span><br><span class="line">        this.velX &#x3D; 0;                                      &#x2F;* X方向速度 *&#x2F;</span><br><span class="line">        this.stepSize &#x3D; Math.random() &#x2F; 30;                 &#x2F;* 步长 *&#x2F;</span><br><span class="line">        this.step &#x3D; 0                                       &#x2F;* 步数 *&#x2F;</span><br><span class="line">    &#125;</span><br><span class="line">    flakeMove.prototype.update &#x3D; function() &#123;</span><br><span class="line">        var x &#x3D; this.x,</span><br><span class="line">            y &#x3D; this.y;</span><br><span class="line">        &#x2F;* 左右摆动(余弦) *&#x2F;</span><br><span class="line">        this.velX *&#x3D; 0.98;</span><br><span class="line">        if (this.velY &lt;&#x3D; this.speed) &#123;</span><br><span class="line">            this.velY &#x3D; this.speed</span><br><span class="line">        &#125;</span><br><span class="line">        this.velX +&#x3D; Math.cos(this.step +&#x3D; .05) * this.stepSize;</span><br><span class="line"> </span><br><span class="line">        this.y +&#x3D; this.velY;</span><br><span class="line">        this.x +&#x3D; this.velX;</span><br><span class="line">        &#x2F;* 飞出边界的处理 *&#x2F;</span><br><span class="line">        if (this.x &gt;&#x3D; canvas.width || this.x &lt;&#x3D; 0 || this.y &gt;&#x3D; canvas.height || this.y &lt;&#x3D; 0) &#123;</span><br><span class="line">            this.reset(canvas.width, canvas.height)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    &#x2F;* 飞出边界-放置最顶端继续坠落 *&#x2F;</span><br><span class="line">    flakeMove.prototype.reset &#x3D; function(width, height) &#123;</span><br><span class="line">        this.x &#x3D; Math.floor(Math.random() * width);</span><br><span class="line">        this.y &#x3D; 0;</span><br><span class="line">        this.size &#x3D; Math.random() * this.maxSize + 2;</span><br><span class="line">        this.speed &#x3D; Math.random() * 1 + this.fallSpeed;</span><br><span class="line">        this.velY &#x3D; this.speed;</span><br><span class="line">        this.velX &#x3D; 0;</span><br><span class="line">    &#125;;</span><br><span class="line">    &#x2F;&#x2F; 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span><br><span class="line">    flakeMove.prototype.render &#x3D; function(ctx) &#123;</span><br><span class="line">        var snowFlake &#x3D; ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);</span><br><span class="line">        snowFlake.addColorStop(0, &quot;rgba(255, 255, 255, 0.9)&quot;);  &#x2F;* 此处是雪花颜色，默认是白色 *&#x2F;</span><br><span class="line">        snowFlake.addColorStop(.5, &quot;rgba(255, 255, 255, 0.5)&quot;); &#x2F;* 若要改为其他颜色，请自行查 *&#x2F;</span><br><span class="line">        snowFlake.addColorStop(1, &quot;rgba(255, 255, 255, 0)&quot;);    &#x2F;* 找16进制的RGB 颜色代码。 *&#x2F;</span><br><span class="line">        ctx.save();</span><br><span class="line">        ctx.fillStyle &#x3D; snowFlake;</span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);</span><br><span class="line">        ctx.fill();</span><br><span class="line">        ctx.restore();</span><br><span class="line">    &#125;;</span><br><span class="line">    &#x2F;* 创建雪花-定义形状 *&#x2F;</span><br><span class="line">    function createFlakes() &#123;</span><br><span class="line">        var maxFlake &#x3D; this.maxFlake,</span><br><span class="line">            flakes &#x3D; this.flakes &#x3D; [],</span><br><span class="line">            canvas &#x3D; this.canvas;</span><br><span class="line">        for (var i &#x3D; 0; i &lt; maxFlake; i++) &#123;</span><br><span class="line">            flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;* 画雪 *&#x2F;</span><br><span class="line">    function drawSnow() &#123;</span><br><span class="line">        var maxFlake &#x3D; this.maxFlake,</span><br><span class="line">            flakes &#x3D; this.flakes;</span><br><span class="line">        ctx &#x3D; this.ctx, canvas &#x3D; this.canvas, that &#x3D; this;</span><br><span class="line">        &#x2F;* 清空雪花 *&#x2F;</span><br><span class="line">        ctx.clearRect(0, 0, canvas.width, canvas.height);</span><br><span class="line">        for (var e &#x3D; 0; e &lt; maxFlake; e++) &#123;</span><br><span class="line">            flakes[e].update();</span><br><span class="line">            flakes[e].render(ctx);</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;*  一帧一帧的画 *&#x2F;</span><br><span class="line">        this.loop &#x3D; requestAnimationFrame(function() &#123;</span><br><span class="line">            drawSnow.apply(that);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;* 调用及控制方法 *&#x2F;</span><br><span class="line">    var snow &#x3D; new snowFall(&#123;maxFlake:500&#125;);</span><br><span class="line">    snow.start();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="新春对联特效"><a href="#新春对联特效" class="headerlink" title="新春对联特效"></a>新春对联特效</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 新春对联JS --&gt;</span><br><span class="line">&lt;SCRIPT language&#x3D;&quot;JavaScript&quot;&gt;</span><br><span class="line">lastScrollY &#x3D; 0;</span><br><span class="line">function heartBeat()&#123;</span><br><span class="line">var diffY;</span><br><span class="line">if (document.documentElement &amp;&amp; document.documentElement.scrollTop)</span><br><span class="line">diffY &#x3D; document.documentElement.scrollTop;</span><br><span class="line">else if (document.body)</span><br><span class="line">diffY &#x3D; document.body.scrollTop</span><br><span class="line">else</span><br><span class="line">&#123;&#x2F;*Netscape stuff*&#x2F;&#125;</span><br><span class="line">&#x2F;&#x2F;alert(diffY);</span><br><span class="line">percent&#x3D;.1*(diffY-lastScrollY);</span><br><span class="line">if(percent&gt;0)percent&#x3D;Math.ceil(percent);</span><br><span class="line">else percent&#x3D;Math.floor(percent);</span><br><span class="line">document.getElementById(&quot;leftDiv&quot;).style.top &#x3D; parseInt(document.getElementById(&quot;leftDiv&quot;).style.top)+percent+&quot;px&quot;;</span><br><span class="line">document.getElementById(&quot;rightDiv&quot;).style.top &#x3D; parseInt(document.getElementById(&quot;rightDiv&quot;).style.top)+percent+&quot;px&quot;;</span><br><span class="line">lastScrollY&#x3D;lastScrollY+percent;</span><br><span class="line">&#x2F;&#x2F;alert(lastScrollY);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;下面这段删除后，对联将不跟随屏幕而移动。</span><br><span class="line">window.setInterval(&quot;heartBeat()&quot;,1);</span><br><span class="line">&#x2F;&#x2F;--&gt;</span><br><span class="line">&#x2F;&#x2F;关闭按钮</span><br><span class="line">function close_left2()&#123;</span><br><span class="line"> left2.style.visibility&#x3D;&#39;hidden&#39;;</span><br><span class="line">&#125;</span><br><span class="line">function close_right2()&#123;</span><br><span class="line"> right2.style.visibility&#x3D;&#39;hidden&#39;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;显示样式</span><br><span class="line">document.writeln(&quot;&lt;style type&#x3D;\&quot;text\&#x2F;css\&quot;&gt;&quot;);</span><br><span class="line">document.writeln(&quot;#leftDiv,#rightDiv&#123;position:absolute;&#125;&quot;);</span><br><span class="line">document.writeln(&quot;.itemFloat&#123;width:100px;height:auto;line-height:5px&#125;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;\&#x2F;style&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;以下为主要内容</span><br><span class="line">document.writeln(&quot;&lt;div id&#x3D;\&quot;leftDiv\&quot; style&#x3D;\&quot;top:112px;left:50px\&quot;&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;------左侧各块开始</span><br><span class="line">&#x2F;&#x2F;---L2</span><br><span class="line">document.writeln(&quot;&lt;div id&#x3D;\&quot;left2\&quot; class&#x3D;\&quot;itemFloat\&quot;&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;img border&#x3D;0 src&#x3D;https:&#x2F;&#x2F;www.dujin.org&#x2F;images&#x2F;duilianz.jpg&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;br&gt;&lt;a href&#x3D;\&quot;javascript:close_left2();\&quot; title&#x3D;\&quot;关闭上面的广告\&quot;&gt;×&lt;\&#x2F;a&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;\&#x2F;div&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;------左侧各块结束</span><br><span class="line">document.writeln(&quot;&lt;\&#x2F;div&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;div id&#x3D;\&quot;rightDiv\&quot; style&#x3D;\&quot;top:112px;right:50px\&quot;&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;------右侧各块结束</span><br><span class="line">&#x2F;&#x2F;---R2</span><br><span class="line">document.writeln(&quot;&lt;div id&#x3D;\&quot;right2\&quot; class&#x3D;\&quot;itemFloat\&quot;&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;img border&#x3D;0 src&#x3D;https:&#x2F;&#x2F;www.dujin.org&#x2F;images&#x2F;duiliany.jpg&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;br&gt;&lt;a href&#x3D;\&quot;javascript:close_right2();\&quot; title&#x3D;\&quot;关闭上面的广告\&quot;&gt;×&lt;\&#x2F;a&gt;&quot;);</span><br><span class="line">document.writeln(&quot;&lt;\&#x2F;div&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;------右侧各块结束</span><br><span class="line">document.writeln(&quot;&lt;\&#x2F;div&gt;&quot;);</span><br><span class="line">&lt;&#x2F;SCRIPT&gt;</span><br></pre></td></tr></table></figure><p>加入了一下css样式是为了手机端不显示该特效。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@media (max-width:1500px)&#123;#leftDiv,#rightDiv&#123;display:none !important&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="跑马灯效果"><a href="#跑马灯效果" class="headerlink" title="跑马灯效果"></a>跑马灯效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跑马灯效果 --&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;pmd&quot; style&#x3D;&quot;color: white;background-color: #ff0018;text-align: center;font-size: 30px;&quot;&gt;小康空间站欢迎您的来访！&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">        setInterval(function ()&#x2F;&#x2F;通过定时器重复动作</span><br><span class="line">        &#123;</span><br><span class="line">            var oTxt &#x3D; document.getElementById(&#39;pmd&#39;); &#x2F;&#x2F;获取标签</span><br><span class="line">            var txt &#x3D; oTxt.innerText; &#x2F;&#x2F;获取标签文本内容</span><br><span class="line">            &#x2F;&#x2F; console.log(typeof txt)  页面控制台查看是string</span><br><span class="line">            var first_i &#x3D; txt[0]; &#x2F;&#x2F;字符串索引取值</span><br><span class="line">            var last_i &#x3D; txt.slice(1,txt.length);&#x2F;&#x2F;字符串切片</span><br><span class="line">            var new_txt &#x3D; last_i + first_i;&#x2F;&#x2F;字符串拼接</span><br><span class="line">            oTxt.innerText &#x3D; new_txt; &#x2F;&#x2F;拼接后的字符串放到标签文本内容</span><br><span class="line">        &#125;,500)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="点击显示文字效果"><a href="#点击显示文字效果" class="headerlink" title="点击显示文字效果"></a>点击显示文字效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 点击显示文字效果 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    var a_idx &#x3D; 0;</span><br><span class="line">    jQuery(document).ready(function($) &#123;</span><br><span class="line">        $(&quot;body&quot;).click(function(e) &#123;</span><br><span class="line">         var a &#x3D; new Array(&quot;小康&quot;, &quot;空间站&quot;, &quot;欢迎&quot;, &quot;您的&quot;,&quot;来访&quot;);</span><br><span class="line">            var $i &#x3D; $(&quot;&lt;span&#x2F;&gt;&quot;).text(a[a_idx]);</span><br><span class="line">            a_idx &#x3D; (a_idx + 1) % a.length;</span><br><span class="line">            var x &#x3D; e.pageX,</span><br><span class="line">            y &#x3D; e.pageY;</span><br><span class="line">            $i.css(&#123;</span><br><span class="line">                &quot;z-index&quot;: 9999,</span><br><span class="line">                &quot;top&quot;: y - 20,</span><br><span class="line">                &quot;left&quot;: x,</span><br><span class="line">                &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">                &quot;font-weight&quot;: &quot;bold&quot;,</span><br><span class="line">                &quot;color&quot;: &quot;#ff0000&quot;</span><br><span class="line">            &#125;);</span><br><span class="line">            $(&quot;body&quot;).append($i);</span><br><span class="line">            $i.animate(&#123;</span><br><span class="line">                &quot;top&quot;: y - 180,</span><br><span class="line">                &quot;opacity&quot;: 0</span><br><span class="line">           &#125;,</span><br><span class="line">           2000,</span><br><span class="line">            function() &#123;</span><br><span class="line">                $i.remove();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="恋爱计时器"><a href="#恋爱计时器" class="headerlink" title="恋爱计时器"></a>恋爱计时器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;lovexhj&quot; style&#x3D;&quot;width: 100%; height: 100px; text-align: center; font-size: 1rem;&quot;&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;lovexhjImage&quot; style&#x3D;&quot;width: 220px; margin: 0 auto;&quot;&gt;</span><br><span class="line">        &lt;!-- 左边的头像 --&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;q1.qlogo.cn&#x2F;g?b&#x3D;qq&amp;nk&#x3D;304915556&amp;s&#x3D;640&quot; alt&#x3D;&quot;love&quot;</span><br><span class="line">            style&#x3D;&quot;width: 60px; border-radius: 50%;&quot;&gt;</span><br><span class="line">        &lt;!-- 中间的图片 --&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;cdn.nutssss.cn&#x2F;wp-content&#x2F;uploads&#x2F;2020&#x2F;02&#x2F;1582858549-lovexhjlogo.gif&quot; alt&#x3D;&quot;love&quot;</span><br><span class="line">            style&#x3D;&quot;width: 60px; border-radius: 50%;&quot;&gt;</span><br><span class="line">        &lt;!-- 右边的头像 --&gt;</span><br><span class="line">        &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;q1.qlogo.cn&#x2F;g?b&#x3D;qq&amp;nk&#x3D;1656071287&amp;s&#x3D;640&quot; alt&#x3D;&quot;love&quot;</span><br><span class="line">            style&#x3D;&quot;width: 60px; border-radius: 50%;&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;p id&#x3D;&quot;lovexhjSitetime&quot; style&#x3D;&quot;font-size: 0.8rem;&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;script language&#x3D;javascript&gt;</span><br><span class="line">        function lovexhjSitetime() &#123;</span><br><span class="line">            window.setTimeout(&quot;lovexhjSitetime()&quot;, 1000);</span><br><span class="line">            var seconds &#x3D; 1000</span><br><span class="line">            var minutes &#x3D; seconds * 60</span><br><span class="line">            var hours &#x3D; minutes * 60</span><br><span class="line">            var days &#x3D; hours * 24</span><br><span class="line">            var years &#x3D; days * 365</span><br><span class="line">            var today &#x3D; new Date()</span><br><span class="line">            var todayYear &#x3D; today.getFullYear()</span><br><span class="line">            var todayMonth &#x3D; today.getMonth() + 1</span><br><span class="line">            var todayDate &#x3D; today.getDate()</span><br><span class="line">            var todayHour &#x3D; today.getHours()</span><br><span class="line">            var todayMinute &#x3D; today.getMinutes()</span><br><span class="line">            var todaySecond &#x3D; today.getSeconds()</span><br><span class="line">            &#x2F;&#x2F; 时间设置</span><br><span class="line">            var t1 &#x3D; Date.UTC(2018, 03, 01, 00, 00, 00)</span><br><span class="line">            var t2 &#x3D; Date.UTC(todayYear, todayMonth, todayDate, todayHour, todayMinute, todaySecond)</span><br><span class="line">            var diff &#x3D; t2 - t1</span><br><span class="line">            var diffYears &#x3D; Math.floor(diff &#x2F; years)</span><br><span class="line">            var diffDays &#x3D; Math.floor((diff &#x2F; days) - diffYears * 365)</span><br><span class="line">            var diffHours &#x3D; Math.floor((diff - (diffYears * 365 + diffDays) * days) &#x2F; hours)</span><br><span class="line">            var diffMinutes &#x3D; Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) &#x2F; minutes)</span><br><span class="line">            var diffSeconds &#x3D; Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours -</span><br><span class="line">                diffMinutes * minutes) &#x2F; seconds)</span><br><span class="line">            document.getElementById(&quot;lovexhjSitetime&quot;).innerHTML &#x3D; &quot;我们相恋了&quot; + diffYears + &quot;年&quot; + diffDays + &quot;天&quot; +</span><br><span class="line">                diffHours + &quot;小时&quot; + diffMinutes + &quot;分钟&quot; + diffSeconds + &quot;秒啦&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        lovexhjSitetime()</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="蒲公英效果"><a href="#蒲公英效果" class="headerlink" title="蒲公英效果"></a>蒲公英效果</h3><ol><li>html代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 底部蒲公英特效 --&gt;</span><br><span class="line"> &lt;div class&#x3D;&quot;dandelion&quot;&gt;</span><br><span class="line"> &lt;span class&#x3D;&quot;smalldan&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line"> &lt;span class&#x3D;&quot;bigdan&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>CSS代码：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 蒲公英特效 *&#x2F;</span><br><span class="line">@media screen and (max-width:600px)&#123;</span><br><span class="line">.dandelion&#123;display: none !important;&#125;</span><br><span class="line">&#125;</span><br><span class="line">.dandelion .smalldan &#123;</span><br><span class="line">width: 36px;</span><br><span class="line">height: 60px;</span><br><span class="line">right: 88px;</span><br><span class="line">background-position: 0 -90px;</span><br><span class="line">&#125;</span><br><span class="line">.dandelion span &#123;</span><br><span class="line">-webkit-animation: ball-x 3s linear 2s infinite;</span><br><span class="line"> -moz-animation: ball-x 3s linear 2s infinite;</span><br><span class="line"> animation: ball-x 3s linear 2s infinite;</span><br><span class="line">-webkit-transform-origin: bottom center;</span><br><span class="line"> -moz-transform-origin: bottom center;</span><br><span class="line"> transform-origin: bottom center;</span><br><span class="line">&#125;</span><br><span class="line">.dandelion span &#123;</span><br><span class="line">display: block;</span><br><span class="line">position: fixed;</span><br><span class="line">z-index:9999999999;</span><br><span class="line">bottom: 0px;</span><br><span class="line">background-image: url(https:&#x2F;&#x2F;panyongkang.github.io&#x2F;mypages&#x2F;GreedySnake&#x2F;images&#x2F;pgy.png);</span><br><span class="line">background-repeat: no-repeat;</span><br><span class="line">&#125;</span><br><span class="line">.dandelion .bigdan &#123;</span><br><span class="line">width: 64px;</span><br><span class="line">height: 115px;</span><br><span class="line">right: 41px;</span><br><span class="line">background-position: -86px -36px;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes ball-x &#123;</span><br><span class="line"> 0% &#123; transform:rotate(0deg);&#125;</span><br><span class="line"> 25% &#123; transform:rotate(5deg); &#125;</span><br><span class="line"> 50% &#123; transform:rotate(0deg);&#125;</span><br><span class="line"> 75% &#123; transform:rotate(-5deg);&#125;</span><br><span class="line"> 100% &#123; transform:rotate(0deg);&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes ball-x &#123;</span><br><span class="line"> 0% &#123; -webkit-transform:rotate(0deg);&#125;</span><br><span class="line"> 25% &#123; -webkit-transform:rotate(5deg); &#125;</span><br><span class="line"> 50% &#123; -webkit-transform:rotate(0deg);&#125;</span><br><span class="line"> 75% &#123; -webkit-transform:rotate(-5deg);&#125;</span><br><span class="line"> 100% &#123; -webkit-transform:rotate(0deg);&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes ball-x &#123;</span><br><span class="line"> 0% &#123; -moz-transform:rotate(0deg);&#125;</span><br><span class="line"> 25% &#123; -moz-transform:rotate(5deg); &#125;</span><br><span class="line"> 50% &#123; -moz-transform:rotate(0deg);&#125;</span><br><span class="line"> 75% &#123; -moz-transform:rotate(-5deg);&#125;</span><br><span class="line"> 100% &#123; -moz-transform:rotate(0deg);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="给网站添加底部波浪特效"><a href="#给网站添加底部波浪特效" class="headerlink" title="给网站添加底部波浪特效"></a>给网站添加底部波浪特效</h3><p>将下面代码复制到footer标签合适的地方：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class="waveHorizontals mobile-hide"&gt; </span><br><span class="line">&lt;div id="waveHorizontal1" class="waveHorizontal"&gt;&lt;/div&gt; </span><br><span class="line">&lt;div id="waveHorizontal2" class="waveHorizontal"&gt;&lt;/div&gt; </span><br><span class="line">&lt;div id="waveHorizontal3" class="waveHorizontal"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>将下面代码复制到你的网站主css文件里：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 底部波浪 */</span></span><br><span class="line"><span class="selector-class">.waveHorizontals</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#fff</span> <span class="meta">!important</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ripro-dark</span> <span class="selector-class">.waveHorizontals</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#181616</span> <span class="meta">!important</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#waveHorizontal1</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-mask</span>: <span class="built_in">url</span>(https://img.srcdict.com/SRCDICT/svg/srcdict_001.svg);</span><br><span class="line">    <span class="attribute">mask</span>: <span class="built_in">url</span>(https://img.srcdict.com/SRCDICT/svg/srcdict_001.svg);</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">12s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#waveHorizontal1</span>, <span class="selector-id">#waveHorizontal2</span>, <span class="selector-id">#waveHorizontal3</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">20deg</span>,#f84270 <span class="number">0</span>,#fe803b <span class="number">100%</span>)<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ripro-dark</span> <span class="selector-id">#waveHorizontal1</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ripro-dark</span>  <span class="selector-id">#waveHorizontal2</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ripro-dark</span>  <span class="selector-id">#waveHorizontal3</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waveHorizontal</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-repeat</span>: repeat-x;</span><br><span class="line">    <span class="attribute">background-position</span>: left bottom;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">350px</span> <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">100%</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">animation-name</span>: move;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: linear;</span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> move&#123;0%&#123;<span class="attribute">transform</span>:<span class="built_in">translate</span>(-<span class="number">175px</span>,<span class="number">0px</span>) <span class="built_in">scale</span>(<span class="number">1</span>,<span class="number">1</span>)&#125;50%&#123;<span class="attribute">transform</span>:<span class="built_in">translate</span>(-<span class="number">87px</span>,<span class="number">0px</span>) <span class="built_in">scale</span>(<span class="number">1</span>,<span class="number">0.5</span>)&#125;100%&#123;<span class="attribute">transform</span>:<span class="built_in">translate</span>(<span class="number">0px</span>,<span class="number">0px</span>) <span class="built_in">scale</span>(<span class="number">1</span>,<span class="number">1</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#waveHorizontal2</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-mask</span>: <span class="built_in">url</span>(https://img.srcdict.com/SRCDICT/svg/srcdict_002.svg);</span><br><span class="line">    <span class="attribute">mask</span>: <span class="built_in">url</span>(https://img.srcdict.com/SRCDICT/svg/srcdict_002.svg);</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">2s</span>;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#waveHorizontal3</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-mask</span>: <span class="built_in">url</span>(https://img.srcdict.com/SRCDICT/svg/srcdict_003.svg);</span><br><span class="line">    <span class="attribute">mask</span>: <span class="built_in">url</span>(https://img.srcdict.com/SRCDICT/svg/srcdict_003.svg);</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3实现文字跑马灯-流光-效果"><a href="#CSS3实现文字跑马灯-流光-效果" class="headerlink" title="CSS3实现文字跑马灯(流光)效果"></a>CSS3实现文字跑马灯(流光)效果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">.pmd &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            background: -webkit-linear-gradient(left,</span><br><span class="line">                #ffffff,</span><br><span class="line">                #ff0000 6.25%,</span><br><span class="line">                #ff7d00 12.5%,</span><br><span class="line">                #ffff00 18.75%,</span><br><span class="line">                #00ff00 25%,</span><br><span class="line">                #00ffff 31.25%,</span><br><span class="line">                #0000ff 37.5%,</span><br><span class="line">                #ff00ff 43.75%,</span><br><span class="line">                #ffff00 50%,</span><br><span class="line">                #ff0000 56.25%,</span><br><span class="line">                #ff7d00 62.5%,</span><br><span class="line">                #ffff00 68.75%,</span><br><span class="line">                #00ff00 75%,</span><br><span class="line">                #00ffff 81.25%,</span><br><span class="line">                #0000ff 87.5%,</span><br><span class="line">                #ff00ff 93.75%,</span><br><span class="line">                #ffff00 100%);</span><br><span class="line">            -webkit-background-clip: text;</span><br><span class="line">            -webkit-text-fill-color: transparent;</span><br><span class="line">            background-size: 200% 100%;</span><br><span class="line">            animation: masked-animation 2s infinite linear;</span><br><span class="line">        &#125;</span><br><span class="line">           @keyframes masked-animation &#123;</span><br><span class="line">        0% &#123;</span><br><span class="line">            background-position: 0 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        100% &#123;</span><br><span class="line">            background-position: -100%, 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="文字跳动效果"><a href="#文字跳动效果" class="headerlink" title="文字跳动效果"></a>文字跳动效果</h3><p>CSS代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* start *&#x2F;</span><br><span class="line"> .my-face &#123;</span><br><span class="line">    animation: my-face 5s infinite ease-in-out;</span><br><span class="line">    color: #00f1ff;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin: 0 5px;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes my-face &#123;</span><br><span class="line">    2%, 24%, 80% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    4%, 68%, 98% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    38%, 6% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    8%, 86% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    10%, 72% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    12%, 64%, 78%, 96% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    14%, 54% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    16% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    18%, 22% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    20%, 36%, 46% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    26%, 50% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    28% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    30%, 40%, 62%, 76%, 88% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    32%, 34%, 66% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    42% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    44%, 70% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    48%, 74%, 82% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    52%, 56%, 60% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    58% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    84% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    90% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    92% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    94% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    0%, 100% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 0) rotate(0);</span><br><span class="line">        transform: translate(0, 0) rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes my-face &#123;</span><br><span class="line">    2%, 24%, 80% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    4%, 68%, 98% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    38%, 6% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    8%, 86% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    10%, 72% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    12%, 64%, 78%, 96% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    14%, 54% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    16% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    18%, 22% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    20%, 36%, 46% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -1.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, -1.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    26%, 50% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    28% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(1.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    30%, 40%, 62%, 76%, 88% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    32%, 34%, 66% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    42% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(-1.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(-1.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    44%, 70% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    48%, 74%, 82% &#123;</span><br><span class="line">        -webkit-transform: translate(0, -.5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, -.5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    52%, 56%, 60% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    58% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    84% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 1.5px) rotate(2.5deg);</span><br><span class="line">        transform: translate(0, 1.5px) rotate(2.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    90% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    92% &#123;</span><br><span class="line">        -webkit-transform: translate(0, .5px) rotate(-.5deg);</span><br><span class="line">        transform: translate(0, .5px) rotate(-.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    94% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 2.5px) rotate(.5deg);</span><br><span class="line">        transform: translate(0, 2.5px) rotate(.5deg)</span><br><span class="line">    &#125;</span><br><span class="line">    0%, 100% &#123;</span><br><span class="line">        -webkit-transform: translate(0, 0) rotate(0);</span><br><span class="line">        transform: translate(0, 0) rotate(0)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* end *&#x2F;</span><br></pre></td></tr></table></figure><p>然后在想要的文字插入class=”my-face”：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"my-face"</span>&gt;</span>不停的跳动！<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现输入礼花及震动特效"><a href="#实现输入礼花及震动特效" class="headerlink" title="实现输入礼花及震动特效"></a>实现输入礼花及震动特效</h3><p>新建一个activate-power-mode.js文件，将下面代码拷贝放在js目录中引入即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(function webpackUniversalModuleDefinition(root,factory)&#123;if(typeof exports&#x3D;&#x3D;&#x3D;&#39;object&#39;&amp;&amp;typeof module&#x3D;&#x3D;&#x3D;&#39;object&#39;)module.exports&#x3D;factory();else if(typeof define&#x3D;&#x3D;&#x3D;&#39;function&#39;&amp;&amp;define.amd)define([],factory);else if(typeof exports&#x3D;&#x3D;&#x3D;&#39;object&#39;)exports[&quot;POWERMODE&quot;]&#x3D;factory();else root[&quot;POWERMODE&quot;]&#x3D;factory()&#125;)(this,function()&#123;return(function(modules)&#123;var installedModules&#x3D;&#123;&#125;;function __webpack_require__(moduleId)&#123;if(installedModules[moduleId])return installedModules[moduleId].exports;var module&#x3D;installedModules[moduleId]&#x3D;&#123;exports:&#123;&#125;,id:moduleId,loaded:false&#125;;modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded&#x3D;true;return module.exports&#125;__webpack_require__.m&#x3D;modules;__webpack_require__.c&#x3D;installedModules;__webpack_require__.p&#x3D;&quot;&quot;;return __webpack_require__(0)&#125;)([function(module,exports,__webpack_require__)&#123;&#39;use strict&#39;;var canvas&#x3D;document.createElement(&#39;canvas&#39;);canvas.width&#x3D;window.innerWidth;canvas.height&#x3D;window.innerHeight;canvas.style.cssText&#x3D;&#39;position:fixed;top:0;left:0;pointer-events:none;z-index:999999&#39;;window.addEventListener(&#39;resize&#39;,function()&#123;canvas.width&#x3D;window.innerWidth;canvas.height&#x3D;window.innerHeight&#125;);document.body.appendChild(canvas);var context&#x3D;canvas.getContext(&#39;2d&#39;);var particles&#x3D;[];var particlePointer&#x3D;0;POWERMODE.shake&#x3D;true;function getRandom(min,max)&#123;return Math.random()*(max-min)+min&#125;function getColor(el)&#123;if(POWERMODE.colorful)&#123;var u&#x3D;getRandom(0,360);return&#39;hsla(&#39;+getRandom(u-10,u+10)+&#39;, 100%, &#39;+getRandom(50,80)+&#39;%, &#39;+1+&#39;)&#39;&#125;else&#123;return window.getComputedStyle(el).color&#125;&#125;function getCaret()&#123;var el&#x3D;document.activeElement;var bcr;if(el.tagName&#x3D;&#x3D;&#x3D;&#39;TEXTAREA&#39;||(el.tagName&#x3D;&#x3D;&#x3D;&#39;INPUT&#39;&amp;&amp;el.getAttribute(&#39;type&#39;)&#x3D;&#x3D;&#x3D;&#39;text&#39;))&#123;var offset&#x3D;__webpack_require__(1)(el,el.selectionStart);bcr&#x3D;el.getBoundingClientRect();return&#123;x:offset.left+bcr.left,y:offset.top+bcr.top,color:getColor(el)&#125;&#125;var selection&#x3D;window.getSelection();if(selection.rangeCount)&#123;var range&#x3D;selection.getRangeAt(0);var startNode&#x3D;range.startContainer;if(startNode.nodeType&#x3D;&#x3D;&#x3D;document.TEXT_NODE)&#123;startNode&#x3D;startNode.parentNode&#125;bcr&#x3D;range.getBoundingClientRect();return&#123;x:bcr.left,y:bcr.top,color:getColor(startNode)&#125;&#125;return&#123;x:0,y:0,color:&#39;transparent&#39;&#125;&#125;function createParticle(x,y,color)&#123;return&#123;x:x,y:y,alpha:1,color:color,velocity:&#123;x:-1+Math.random()*2,y:-3.5+Math.random()*2&#125;&#125;&#125;function POWERMODE()&#123;&#123;var caret&#x3D;getCaret();var numParticles&#x3D;5+Math.round(Math.random()*10);while(numParticles--)&#123;particles[particlePointer]&#x3D;createParticle(caret.x,caret.y,caret.color);particlePointer&#x3D;(particlePointer+1)%500&#125;&#125;&#123;if(POWERMODE.shake)&#123;var intensity&#x3D;1+2*Math.random();var x&#x3D;intensity*(Math.random()&gt;0.5?-1:1);var y&#x3D;intensity*(Math.random()&gt;0.5?-1:1);document.body.style.marginLeft&#x3D;x+&#39;px&#39;;document.body.style.marginTop&#x3D;y+&#39;px&#39;;setTimeout(function()&#123;document.body.style.marginLeft&#x3D;&#39;&#39;;document.body.style.marginTop&#x3D;&#39;&#39;&#125;,75)&#125;&#125;&#125;;POWERMODE.colorful&#x3D;false;function loop()&#123;requestAnimationFrame(loop);context.clearRect(0,0,canvas.width,canvas.height);for(var i&#x3D;0;i&lt;particles.length;++i)&#123;var particle&#x3D;particles[i];if(particle.alpha&lt;&#x3D;0.1)continue;particle.velocity.y+&#x3D;0.075;particle.x+&#x3D;particle.velocity.x;particle.y+&#x3D;particle.velocity.y;particle.alpha*&#x3D;0.96;context.globalAlpha&#x3D;particle.alpha;context.fillStyle&#x3D;particle.color;context.fillRect(Math.round(particle.x-1.5),Math.round(particle.y-1.5),3,3)&#125;&#125;requestAnimationFrame(loop);module.exports&#x3D;POWERMODE&#125;,function(module,exports)&#123;(function()&#123;var properties&#x3D;[&#39;direction&#39;,&#39;boxSizing&#39;,&#39;width&#39;,&#39;height&#39;,&#39;overflowX&#39;,&#39;overflowY&#39;,&#39;borderTopWidth&#39;,&#39;borderRightWidth&#39;,&#39;borderBottomWidth&#39;,&#39;borderLeftWidth&#39;,&#39;borderStyle&#39;,&#39;paddingTop&#39;,&#39;paddingRight&#39;,&#39;paddingBottom&#39;,&#39;paddingLeft&#39;,&#39;fontStyle&#39;,&#39;fontVariant&#39;,&#39;fontWeight&#39;,&#39;fontStretch&#39;,&#39;fontSize&#39;,&#39;fontSizeAdjust&#39;,&#39;lineHeight&#39;,&#39;fontFamily&#39;,&#39;textAlign&#39;,&#39;textTransform&#39;,&#39;textIndent&#39;,&#39;textDecoration&#39;,&#39;letterSpacing&#39;,&#39;wordSpacing&#39;,&#39;tabSize&#39;,&#39;MozTabSize&#39;];var isFirefox&#x3D;window.mozInnerScreenX!&#x3D;null;function getCaretCoordinates(element,position,options)&#123;var debug&#x3D;options&amp;&amp;options.debug||false;if(debug)&#123;var el&#x3D;document.querySelector(&#39;#input-textarea-caret-position-mirror-div&#39;);if(el)&#123;el.parentNode.removeChild(el)&#125;&#125;var div&#x3D;document.createElement(&#39;div&#39;);div.id&#x3D;&#39;input-textarea-caret-position-mirror-div&#39;;document.body.appendChild(div);var style&#x3D;div.style;var computed&#x3D;window.getComputedStyle?getComputedStyle(element):element.currentStyle;style.whiteSpace&#x3D;&#39;pre-wrap&#39;;if(element.nodeName!&#x3D;&#x3D;&#39;INPUT&#39;)style.wordWrap&#x3D;&#39;break-word&#39;;style.position&#x3D;&#39;absolute&#39;;if(!debug)style.visibility&#x3D;&#39;hidden&#39;;properties.forEach(function(prop)&#123;style[prop]&#x3D;computed[prop]&#125;);if(isFirefox)&#123;if(element.scrollHeight&gt;parseInt(computed.height))style.overflowY&#x3D;&#39;scroll&#39;&#125;else&#123;style.overflow&#x3D;&#39;hidden&#39;&#125;div.textContent&#x3D;element.value.substring(0,position);if(element.nodeName&#x3D;&#x3D;&#x3D;&#39;INPUT&#39;)div.textContent&#x3D;div.textContent.replace(&#x2F;\s&#x2F;g,&quot;\u00a0&quot;);var span&#x3D;document.createElement(&#39;span&#39;);span.textContent&#x3D;element.value.substring(position)||&#39;.&#39;;div.appendChild(span);var coordinates&#x3D;&#123;top:span.offsetTop+parseInt(computed[&#39;borderTopWidth&#39;]),left:span.offsetLeft+parseInt(computed[&#39;borderLeftWidth&#39;])&#125;;if(debug)&#123;span.style.backgroundColor&#x3D;&#39;#aaa&#39;&#125;else&#123;document.body.removeChild(div)&#125;return coordinates&#125;if(typeof module!&#x3D;&quot;undefined&quot;&amp;&amp;typeof module.exports!&#x3D;&quot;undefined&quot;)&#123;module.exports&#x3D;getCaretCoordinates&#125;else&#123;window.getCaretCoordinates&#x3D;getCaretCoordinates&#125;&#125;())&#125;])&#125;);</span><br></pre></td></tr></table></figure><p>在页面中引入该activate-power-mode.js特效文件：</p><script src="static/js/activate-power-mode.js"></script><script>POWERMODE.colorful = true; // ture 为启用礼花特效POWERMODE.shake = false; // false 为禁用震动特效document.body.addEventListener('input', POWERMODE);</script><h3 id="实现切换背景皮肤效果"><a href="#实现切换背景皮肤效果" class="headerlink" title="实现切换背景皮肤效果"></a>实现切换背景皮肤效果</h3><p>HTML代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class&#x3D;&quot;btnpf&quot;  onclick&#x3D;&quot;myFunction()&quot;&gt;皮肤切换&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*切换背景皮肤*&#x2F;</span><br><span class="line">.dark-mode &#123;</span><br><span class="line">  background: url(https:&#x2F;&#x2F;s3.ax1x.com&#x2F;2020&#x2F;12&#x2F;16&#x2F;r1XxzR.jpg);</span><br><span class="line">  background-size: unset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btnpf &#123;</span><br><span class="line">background-color: #26e1be;</span><br><span class="line">padding: 0 8px;</span><br><span class="line">margin: 2px 1px;</span><br><span class="line">border-radius: 8px;</span><br><span class="line">line-height: 32px; &#x2F;* 高度 *&#x2F;</span><br><span class="line">border-width: 0px; &#x2F;* 边框宽度 *&#x2F;</span><br><span class="line">cursor: pointer; &#x2F;* 鼠标移入按钮范围时出现手势 *&#x2F;</span><br><span class="line">outline: none; &#x2F;* 不显示轮廓线 *&#x2F;</span><br><span class="line">font-family: Microsoft YaHei; &#x2F;* 设置字体 *&#x2F;</span><br><span class="line">color: white; &#x2F;* 字体颜色 *&#x2F;</span><br><span class="line">font-size: 14px; &#x2F;* 字体大小 *&#x2F;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 切换背景皮肤</span><br><span class="line">function myFunction() &#123;</span><br><span class="line">   var element &#x3D; document.body;</span><br><span class="line">   element.classList.toggle(&quot;dark-mode&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：其中CSS代码是根据自己想要放置网页中的位置进行调试美化的，可自行调整使用。</p><h3 id="背景图片平铺满整个页面效果"><a href="#背景图片平铺满整个页面效果" class="headerlink" title="背景图片平铺满整个页面效果"></a>背景图片平铺满整个页面效果</h3><p>方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img width&#x3D;&quot;100%&quot; height&#x3D;&quot;100%&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;605b092c8322e6675ceac8a5.gif&quot; style&#x3D;&quot;position:absolute; left:0; top:0; z-index:-1;&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>原理：把图片相对于浏览器决定定位，把层级设为-1之后就其他元素就显示在它上面了，比较适合登录功能的背景图平铺整个页面。</p><p>方法二：</p><p>在&lt; body&gt;元素中增加CSS:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">background:url(https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;605b092c8322e6675ceac8a5.gif) no-repeat;</span><br><span class="line">background-size: 100% 100%;</span><br><span class="line">&lt;!-- background-size: cover; --&gt; 看情况使用</span><br></pre></td></tr></table></figure><h3 id="幸运大转盘"><a href="#幸运大转盘" class="headerlink" title="幸运大转盘"></a>幸运大转盘</h3><p>HTML的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;wrapper&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;light&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;panel&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;谢谢参与&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt; 导航网站&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;谢谢参与&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;科学翻墙&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt; 博客网站&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;谢谢参与&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;影视会员&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;谢谢参与&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;音乐会员&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;sector&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sector-inner&quot;&gt;</span><br><span class="line">          &lt;span&gt;微信小程序&lt;&#x2F;span&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;pointer&quot;&gt;开始抽奖&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;result&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">* &#123; &#x2F;** 重置默认样式 **&#x2F;</span><br><span class="line">      margin: 0;</span><br><span class="line">      padding: 0;</span><br><span class="line">      border: none;</span><br><span class="line">      outline: none;</span><br><span class="line">      user-select: none;</span><br><span class="line">    &#125;</span><br><span class="line">    .wrapper &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">  top: 260px;</span><br><span class="line">  right: 30px;</span><br><span class="line">      height: 200px;</span><br><span class="line">      width: 200px;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      margin: 20px;</span><br><span class="line">      background-color: #ff5555;</span><br><span class="line">      box-shadow: #000000 0px 0px 10px;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    .light &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      height: 10px;</span><br><span class="line">      width: 10px;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      top: 5px;</span><br><span class="line">      left: 115px;</span><br><span class="line">      transform-origin: 5px 115px;</span><br><span class="line">    &#125;</span><br><span class="line">    .light-twinkling &#123;</span><br><span class="line">      animation: 1s twinkling 3, 100ms 3s twinkling 3;</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(2n) &#123;</span><br><span class="line">      background-color: #fafce7;</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(2n+1) &#123;</span><br><span class="line">      background-color: #ffe58b;</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(2) &#123;</span><br><span class="line">      transform: rotate(36deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(3) &#123;</span><br><span class="line">      transform: rotate(72deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(4) &#123;</span><br><span class="line">      transform: rotate(108deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(5) &#123;</span><br><span class="line">      transform: rotate(144deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(6) &#123;</span><br><span class="line">      transform: rotate(180deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(7) &#123;</span><br><span class="line">      transform: rotate(216deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(8) &#123;</span><br><span class="line">      transform: rotate(252deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(9) &#123;</span><br><span class="line">      transform: rotate(288deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .light:nth-child(10) &#123;</span><br><span class="line">      transform: rotate(324deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .panel &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">      height: 200px;</span><br><span class="line">      width: 200px;</span><br><span class="line">      background-color: #b7b7b7;</span><br><span class="line">      border-radius: 100px;</span><br><span class="line">    &#125;</span><br><span class="line">    .sector &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 100px;</span><br><span class="line">      top: 0px;</span><br><span class="line">      width: 100px;</span><br><span class="line">      height: 200px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      border-radius: 0px 100px 100px 0;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      transform-origin: left center;</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(1) &#123;</span><br><span class="line">      transform: rotate(-18deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(2) &#123;</span><br><span class="line">      transform: rotate(18deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(3) &#123;</span><br><span class="line">      transform: rotate(54deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(4) &#123;</span><br><span class="line">      transform: rotate(90deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(5) &#123;</span><br><span class="line">      transform: rotate(126deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(6) &#123;</span><br><span class="line">      transform: rotate(162deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(7) &#123;</span><br><span class="line">      transform: rotate(198deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(8) &#123;</span><br><span class="line">      transform: rotate(234deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(9) &#123;</span><br><span class="line">      transform: rotate(270deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(10) &#123;</span><br><span class="line">      transform: rotate(306deg);</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(2n+1) .sector-inner &#123;</span><br><span class="line">      background: #fef6e0;</span><br><span class="line">    &#125;</span><br><span class="line">    .sector:nth-child(2n) .sector-inner &#123;</span><br><span class="line">      background: #ffffff;</span><br><span class="line">    &#125;</span><br><span class="line">    .sector-inner &#123;</span><br><span class="line">      text-align: center;</span><br><span class="line">      display: block;</span><br><span class="line">      width: 40px;</span><br><span class="line">      padding: 5px 3px 0 57px;</span><br><span class="line">      height: 195px;</span><br><span class="line">      transform: translateX(-100px) rotate(36deg);</span><br><span class="line">      transform-origin: right center;</span><br><span class="line">      border-radius: 100px 0 0 100px;</span><br><span class="line">    &#125;</span><br><span class="line">    .sector-inner span &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      transform-origin: center;</span><br><span class="line">      transform: rotate(-19deg);</span><br><span class="line">      color: #d46854;</span><br><span class="line">    &#125;</span><br><span class="line">    .pointer &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 79px;</span><br><span class="line">      top: 79px;</span><br><span class="line">      z-index: 10;</span><br><span class="line">      height: 30px;</span><br><span class="line">      width: 30px;</span><br><span class="line">      padding: 6px;</span><br><span class="line">      color: #fff899;</span><br><span class="line">      line-height: 15px;</span><br><span class="line">      font-size: 12px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      background-color: #ff5350;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      border: 1px solid #ff5350;</span><br><span class="line">      transition: transform 3s cubic-bezier(.2,.93,.43,1);</span><br><span class="line">    &#125;</span><br><span class="line">    .pointer::after &#123;</span><br><span class="line">      content: &#39;&#39;;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 14px;</span><br><span class="line">      top: -24px;</span><br><span class="line">      border-width: 12px 6px;</span><br><span class="line">      border-style: solid;</span><br><span class="line">      border-color: transparent;</span><br><span class="line">      border-bottom-color: #ff5350;</span><br><span class="line">      transform-origin: center;</span><br><span class="line">    &#125;</span><br><span class="line">    .result &#123;</span><br><span class="line">     margin:30px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @keyframes twinkling &#123;</span><br><span class="line">      50% &#123; background: transparent; &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>JS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">let getEle &#x3D; document.getElementsByClassName.bind(document);</span><br><span class="line">    let pointer &#x3D; getEle(&#39;pointer&#39;)[0];</span><br><span class="line">    let result &#x3D; getEle(&#39;result&#39;)[0];</span><br><span class="line">    let lights &#x3D; Array.prototype.slice.call(getEle(&#39;light&#39;));</span><br><span class="line"></span><br><span class="line">    let onRotation &#x3D; false; &#x2F;&#x2F; 记录当前是否正在旋转，如果正在旋转，就不能继续点击了</span><br><span class="line">    let reward &#x3D; [&#39;谢谢参与&#39;, &#39;导航网站制作名额&#39;, &#39;谢谢参与&#39;, &#39;免费科学翻墙账号&#39;, &#39;博客网站制作名额&#39;, </span><br><span class="line">    &#39;谢谢参与&#39;, &#39;影视会员解析名额&#39;, &#39;谢谢参与&#39;, &#39;VIP音乐平台整合&#39;, &#39;微信小程序制作名额&#39;];</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 根据随机角度获取奖励</span><br><span class="line">    let getReward &#x3D; (function() &#123;</span><br><span class="line">      currentDeg &#x3D; 0;</span><br><span class="line">      return function() &#123;</span><br><span class="line">        &#x2F;&#x2F; 转三圈到四圈</span><br><span class="line">        let rotateDeg &#x3D; Math.random() * 360 + 1080;</span><br><span class="line">        currentDeg +&#x3D; rotateDeg;</span><br><span class="line">        let rewardText &#x3D; reward[Math.floor((currentDeg + 18) % 360 &#x2F; 36)]</span><br><span class="line">        return &#123;</span><br><span class="line">          deg: currentDeg,</span><br><span class="line">          text: rewardText &#x3D;&#x3D;&#x3D; &#39;谢谢参与&#39; ? &#39;很遗憾，您没有获得奖品(⊙o⊙)哦！&#39; : &#39;恭喜获得: &#39; + rewardText</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line"></span><br><span class="line">    pointer.addEventListener(&#39;click&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">      if (onRotation) return;</span><br><span class="line">      console.log(&#39;开始抽奖&#39;);</span><br><span class="line">      onRotation &#x3D; true;</span><br><span class="line">      lights.forEach(light &#x3D;&gt; &#123; light.className +&#x3D; &#39; light-twinkling&#39;; &#125;);</span><br><span class="line">      let nextStatus &#x3D; getReward();</span><br><span class="line">      console.log(nextStatus)</span><br><span class="line">      result.innerText &#x3D; nextStatus.text;</span><br><span class="line">      result.style.display &#x3D; &#39;none&#39;;</span><br><span class="line">      pointer.style.transform &#x3D; &#96;rotateZ($&#123;nextStatus.deg&#125;deg)&#96;;</span><br><span class="line">    &#125;)</span><br><span class="line">    pointer.addEventListener(&#39;transitionend&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">      console.log(&#39;抽奖结束&#39;);</span><br><span class="line">      setTimeout(() &#x3D;&gt; &#123; &#x2F;&#x2F; 等闪烁三下结束</span><br><span class="line">        onRotation &#x3D; false;</span><br><span class="line">        lights.forEach(light &#x3D;&gt; &#123; light.className &#x3D; &#39;light&#39;; &#125;);</span><br><span class="line">        result.style.display &#x3D; &#39;block&#39;;</span><br><span class="line">      &#125;, 300);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="悬挂猫-上吊猫-置顶插件"><a href="#悬挂猫-上吊猫-置顶插件" class="headerlink" title="悬挂猫(上吊猫)置顶插件"></a>悬挂猫(上吊猫)置顶插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 上吊猫置顶效果 --&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;https:&#x2F;&#x2F;blog-static.cnblogs.com&#x2F;files&#x2F;fsh001&#x2F;szgotop.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;blog-static.cnblogs.com&#x2F;files&#x2F;fsh001&#x2F;szgotop.css&quot; &#x2F;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;back-to-top cd-top faa-float animated cd-is-visible&quot; style&#x3D;&quot;top: -999px;&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="右下角图片置顶效果"><a href="#右下角图片置顶效果" class="headerlink" title="右下角图片置顶效果"></a>右下角图片置顶效果</h3><p>Html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 右下角图片置顶效果 --&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;fixedBar&quot; class&#x3D;&quot;back-to-top load&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 右下角图片置顶效果 *&#x2F;</span><br><span class="line">.back-to-top &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  z-index: 2;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  width: 108px;</span><br><span class="line">  height: 150px;</span><br><span class="line">  background: url(&quot;..&#x2F;img&#x2F;back-to-top.png&quot;) no-repeat 0 0;</span><br><span class="line">  background-size: 108px 450px;</span><br><span class="line">  opacity: 0.6;</span><br><span class="line">  transition: opacity 0.3s, right 0.8s;</span><br><span class="line">&#125;</span><br><span class="line">.back-to-top:hover &#123;</span><br><span class="line">  background-position: 0 -150px;</span><br><span class="line">  opacity: 1;</span><br><span class="line">&#125;</span><br><span class="line">.back-to-top.load &#123;</span><br><span class="line">  right: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.back-to-top::after &#123;</span><br><span class="line">  content: &#39;&#39;;</span><br><span class="line">  position: fixed;</span><br><span class="line">  z-index: 2;</span><br><span class="line">  right: 0;</span><br><span class="line">  bottom: 0;</span><br><span class="line">  width: 108px;</span><br><span class="line">  height: 150px;</span><br><span class="line">  background: url(&quot;..&#x2F;img&#x2F;back-to-top.png&quot;) no-repeat 0 0;</span><br><span class="line">  background-size: 108px 450px;</span><br><span class="line">  background-position: 0 -300px;</span><br><span class="line">  transition: opacity 0.3s;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  pointer-events: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 置顶js代码必须单独放在html中，否则不起作用 --&gt;</span><br><span class="line">$(window).scroll(function() &#123;</span><br><span class="line">           if($(window).scrollTop() &gt;&#x3D; 300)&#123;</span><br><span class="line">               $(&#39;#fixedBar&#39;).fadeIn(600);</span><br><span class="line">           &#125;else&#123;</span><br><span class="line">               $(&#39;#fixedBar&#39;).fadeOut(600);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line">       $(&#39;#fixedBar&#39;).click(function() &#123;</span><br><span class="line">           $(&#39;html,body&#39;).animate(&#123;scrollTop:&#39;0px&#39;&#125;,800);</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="https://s3.ax1x.com/2021/01/01/rzleSJ.png"  alt title="图片下载"></p><h3 id="实现气泡对话框"><a href="#实现气泡对话框" class="headerlink" title="实现气泡对话框"></a>实现气泡对话框</h3><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 实现气泡对话框效果 *&#x2F;</span><br><span class="line">.test&#123;</span><br><span class="line">    width:145px;</span><br><span class="line">    padding:50px 40px;</span><br><span class="line">    background:#beceeb;</span><br><span class="line">    -webkit-border-top-left-radius:220px 120px;</span><br><span class="line">    -webkit-border-top-right-radius:220px 120px;</span><br><span class="line">    -webkit-border-bottom-right-radius:220px 120px;</span><br><span class="line">    -webkit-border-bottom-left-radius:220px 120px;</span><br><span class="line">    -moz-border-radius:220px &#x2F; 120px;</span><br><span class="line">    border-radius:220px &#x2F; 120px;</span><br><span class="line">    position:absolute;</span><br><span class="line">top: 60px;</span><br><span class="line">left: 110px;</span><br><span class="line">&#125;</span><br><span class="line">.test span&#123;width:0; height:0; font-size:0; background:#beceeb; overflow:hidden; position:absolute;&#125;</span><br><span class="line">.test span.bot&#123;</span><br><span class="line">    width:30px;</span><br><span class="line">    height:30px;</span><br><span class="line">    -moz-border-radius:30px;</span><br><span class="line">    -webkit-border-radius:30px;</span><br><span class="line">    border-radius:30px;</span><br><span class="line">    left:10px;</span><br><span class="line">    bottom:-20px;</span><br><span class="line">&#125;</span><br><span class="line">.test span.top&#123;</span><br><span class="line">    width:15px;</span><br><span class="line">    height:15px;</span><br><span class="line">    -moz-border-radius:15px;</span><br><span class="line">    -webkit-border-radius:15px;</span><br><span class="line">    border-radius:15px;</span><br><span class="line">    left:5px;</span><br><span class="line">    bottom:-40px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 实现气泡对话框效果 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;test&quot;&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;bot&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;span class&#x3D;&quot;top&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">    一起来玩贪吃蛇吧！</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="水波纹波动动画效果"><a href="#水波纹波动动画效果" class="headerlink" title="水波纹波动动画效果"></a>水波纹波动动画效果</h3><p>代码已经上传到蓝奏云，可以直接下载使用。</p><p><a href="https://wws.lanzous.com/iAk4tjw9sib" target="_blank" rel="noopener">水波纹插件下载</a></p><p>更多样式需要自行修改代码使用。</p><p><a href="https://wws.lanzous.com/ig4fDjw9skd" target="_blank" rel="noopener">更多样式下载</a></p><h3 id="魔方效果"><a href="#魔方效果" class="headerlink" title="魔方效果"></a>魔方效果</h3><p>Html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;mofang&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;cube&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;front&quot;&gt;&lt;a href&#x3D;&quot;javascript:void(0);&quot; rel&#x3D;&quot;nofollow&quot;&gt;维护正义&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;back&quot;&gt;&lt;a href&#x3D;&quot;javascript:void(0);&quot; rel&#x3D;&quot;nofollow&quot;&gt;人人有责&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;right&quot;&gt;&lt;a href&#x3D;&quot;javascript:void(0);&quot; rel&#x3D;&quot;nofollow&quot;&gt;打击盗版&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;left&quot;&gt;&lt;a href&#x3D;&quot;javascript:void(0);&quot; rel&#x3D;&quot;nofollow&quot;&gt;人人有责&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;top&quot;&gt;&lt;a href&#x3D;&quot;javascript:void(0);&quot; rel&#x3D;&quot;nofollow&quot;&gt;忠于初心&lt;&#x2F;a&gt;&lt;&#x2F;div&gt; </span><br><span class="line">&lt;div class&#x3D;&quot;bottom&quot;&gt;&lt;a href&#x3D;&quot;javascript:void(0);&quot; rel&#x3D;&quot;nofollow&quot;&gt;人人有责&lt;&#x2F;a&gt;&lt;&#x2F;div&gt; </span><br><span class="line">&lt;&#x2F;div&gt; </span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--网站底部魔方效果--&gt;</span><br><span class="line">.mofang&#123;width:60px;height:60px;margin:0 auto;position:fixed;z-index:999;-webkit-perspective:1000px;perspective:1000px;right:0;bottom:0;-webkit-transform:translate(-80%,-80%);transform:translate(-80%,-80%);margin-right: 50px;&#125;</span><br><span class="line">.cube&#123;width:100%;height:100%;position:absolute;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transform:rotateX(-15deg) rotateY(-20deg) translateZ(-100px);transform:rotateX(-15deg) rotateY(-20deg) translateZ(-100px);-webkit-transform-origin:center center -100px;transform-origin:center center -100px;-webkit-animation:around 5s cubic-bezier(.94,-.6,.45,1.31) infinite;animation:around 5s cubic-bezier(.94,-.6,.45,1.31) infinite&#125;</span><br><span class="line">.cube div&#123;width:80px;height:80px;display:block;margin:0;position:absolute&#125;</span><br><span class="line">.cube div a&#123;color:#fff;text-decoration:none;text-align:center;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);line-height:normal;font-size:16px;letter-spacing:3px&#125;</span><br><span class="line">.cube .front&#123;-webkit-transform:rotateY(0) translateZ(40px);transform:rotateY(0) translateZ(40px);background-color:rgba(0,191,255,.7);border:2px solid rgba(0,191,255,.7)&#125;</span><br><span class="line">.cube .back&#123;-webkit-transform:rotate(180deg) rotateY(-0deg) rotateX(-180deg) translateZ(40px);transform:rotate(180deg) rotateY(-0deg) rotateX(-180deg) translateZ(40px);background-color:rgba(124,252,0,.7);border:2px solid rgba(124,252,0,.7);&#125;</span><br><span class="line">.cube .left&#123;-webkit-transform:rotateY(-90deg) translateZ(40px);transform:rotateY(-90deg) translateZ(40px);background-color:rgba(255,215,0,.7);border:2px solid rgba(255,215,0,.7)&#125;</span><br><span class="line">.cube .right&#123;-webkit-transform:rotateY(90deg) translateZ(40px);transform:rotateY(90deg) translateZ(40px);background-color:rgba(255,69,0,.7);border:2px solid rgba(255,69,0,.7);&#125;</span><br><span class="line">.cube .top&#123;-webkit-transform:rotateX(90deg) translateZ(40px);transform:rotateX(90deg) translateZ(40px);background-color:rgba(255,0,157,.7);border:2px solid rgba(255,0,157,.7)&#125;</span><br><span class="line">.cube .bottom&#123;-webkit-transform:rotateX(-90deg) translateZ(40px);transform:rotateX(-90deg) translateZ(40px);background-color:rgba(184,111,220,.7);border:2px solid rgba(184,111,220,.7);&#125;</span><br><span class="line">@-webkit-keyframes around&#123;100%&#123;-webkit-transform:rotateX(-15deg) rotateY(-380deg) translateZ(-100px);transform:rotateX(-15deg) rotateY(-380deg) translateZ(-100px)&#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes around&#123;100%&#123;-webkit-transform:rotateX(-15deg) rotateY(-380deg) translateZ(-100px);transform:rotateX(-15deg) rotateY(-380deg) translateZ(-100px);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="侧边悬浮打赏功能"><a href="#侧边悬浮打赏功能" class="headerlink" title="侧边悬浮打赏功能"></a>侧边悬浮打赏功能</h3><p>代码放在&lt; /body&gt;之前：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 侧边悬浮打赏功能 --&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;static&#x2F;js&#x2F;Reward.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">   &lt;script&gt;  </span><br><span class="line">   new tctip(&#123;</span><br><span class="line">     top: &#39;20%&#39;,</span><br><span class="line">     button: &#123;</span><br><span class="line">       id: 9,</span><br><span class="line">       type: &#39;dashang&#39;,</span><br><span class="line">     &#125;,</span><br><span class="line">     list: [</span><br><span class="line">       &#123;</span><br><span class="line">         type: &#39;alipay&#39;,</span><br><span class="line">         qrImg: &#39;https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2020&#x2F;06&#x2F;09&#x2F;t4czVK.th.jpg&#39;</span><br><span class="line">       &#125;, &#123;</span><br><span class="line">         type: &#39;wechat&#39;,</span><br><span class="line">         qrImg: &#39;https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2020&#x2F;06&#x2F;09&#x2F;t40mLD.th.png&#39;</span><br><span class="line">       &#125;</span><br><span class="line">     ]</span><br><span class="line">   &#125;).init()</span><br><span class="line">   &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><a href="https://wws.lanzous.com/ig7Vokhk9yf" target="_blank" rel="noopener">Reward.js下载</a></p><h3 id="呼吸灯效果"><a href="#呼吸灯效果" class="headerlink" title="呼吸灯效果"></a>呼吸灯效果</h3><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*呼吸灯效果*&#x2F;</span><br><span class="line">.box-full &#123;</span><br><span class="line">border-radius: 50%;</span><br><span class="line">animation: light 4s ease-in-out infinite;</span><br><span class="line">transition: .5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes light &#123;</span><br><span class="line">0% &#123;</span><br><span class="line">box-shadow: 0 0 4px #ca00ff</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">25% &#123;</span><br><span class="line">box-shadow: 0 0 16px #00b5e5</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">50% &#123;</span><br><span class="line">box-shadow: 0 0 4px #00f</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">75% &#123;</span><br><span class="line">box-shadow: 0 0 16px #b1da21</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">100% &#123;</span><br><span class="line">box-shadow: 0 0 4px #f00</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后将class类box-full引入到需要的地方即可。给边框或图片增加一点色彩。</p><h3 id="浮动公告栏"><a href="#浮动公告栏" class="headerlink" title="浮动公告栏"></a>浮动公告栏</h3><p>Html代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 浮动公告栏 *&#x2F;</span><br><span class="line">&lt;div id&#x3D;&quot;float_box&quot; class&#x3D;&quot;float_box&quot; align&#x3D;&quot;middle&quot; onmouseover&#x3D;&quot;window.clearInterval(interval)&quot; onmouseout&#x3D;&quot;interval &#x3D; window.setInterval(&#39;changePos()&#39;, delay)&quot; style&#x3D;&quot;top: 22px; visibility: visible; left: 1088px;&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;list-title&quot; onclick&#x3D;&quot;closeBox()&quot;&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;title-text&quot;&gt;</span><br><span class="line">&lt;span&gt;关闭&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;float_box_content&quot; class&#x3D;&quot;float_box_content&quot;&gt;</span><br><span class="line">        &lt;marquee class&#x3D;&quot;float_box_content_text&quot; direction&#x3D;&quot;right&quot;&gt;欢迎光临小康私维空间站 ^_^&lt;&#x2F;marquee&gt;</span><br><span class="line">        &lt;br&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;s3.ax1x.com&#x2F;2021&#x2F;02&#x2F;25&#x2F;yx9Rwd.gif&quot; class&#x3D;&quot;float_box_content_img&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>CSS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 浮动公告栏 *&#x2F;</span><br><span class="line">.float_box &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  z-index: 1000;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">&#125;</span><br><span class="line">.float_box_close &#123;</span><br><span class="line">  CURSOR: hand;</span><br><span class="line">  &#x2F;* color: #f00; *&#x2F;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  font-size: 14px;</span><br><span class="line">  &#x2F;* background-color: #80ffff; *&#x2F;</span><br><span class="line">  width: 20%;</span><br><span class="line">  border-radius: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.float_box_content &#123;</span><br><span class="line">  &#x2F;* border: 2px dashed #46a3ff; *&#x2F;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: 7px;</span><br><span class="line">  &#x2F;* background: #bebebe; *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">.float_box_content_text &#123;</span><br><span class="line">  margin-top: 7px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  white-space: nowrap;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  color: #00bfff;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  text-shadow: #2c3e50 1px 0px 0px, #2c3e50 0px 1px 0px, #2c3e50 -1px 0px 0px, #2c3e50 0px -1px 0px;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  border-right: 15px solid #ffab00;</span><br><span class="line">  animation: moving 2s ease 300ms infinite;</span><br><span class="line">  border-radius: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.float_box_content_img &#123;</span><br><span class="line">  width: 220px;</span><br><span class="line">  height: 125px;</span><br><span class="line">  margin-top: 12px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@-moz-keyframes moving &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    transform: scaleY(0.5);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes moving &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    transform: scaleY(0.5);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-o-keyframes moving &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    transform: scaleY(0.5);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes moving &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">  50% &#123;</span><br><span class="line">    transform: scaleY(0.5);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: scaleY(1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 关闭黄条样式 *&#x2F;</span><br><span class="line">.list-title &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin-top: -37px;</span><br><span class="line">    margin-bottom: 7px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list-title .title-text:before &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    width: 34px;</span><br><span class="line">    height: 24px;</span><br><span class="line">    display: block;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 56px;</span><br><span class="line">    top: -25px;</span><br><span class="line">    background-image: url(data:image&#x2F;svg+xml;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNCIgaGVpZ2h0PSIyNCI+PGRlZnM+PGxpbmVhckdyYWRpZW50IGlkPSJhIiB4MT0iMTA0IiB5MT0iMTUzNCIgeDI9IjEzOCIgeTI9IjE1MzQiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIj48c3RvcCBvZmZzZXQ9IjAiIHN0b3AtY29sb3I9IiNmZmFiMDAiLz48c3RvcCBvZmZzZXQ9IjEiIHN0b3AtY29sb3I9IiNlNjZjMDAiLz48L2xpbmVhckdyYWRpZW50PjwvZGVmcz48cGF0aCBkPSJNMTA0IDE1MjJoMzR2MjRoLTM0bDYtMTJ6IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMTA0IC0xNTIyKSIgZmlsbD0idXJsKCNhKSIgZmlsbC1ydWxlPSJldmVub2RkIi8+PHBhdGggZD0iTTI1IDE4bDkgNlYwaC05djE4eiIgZmlsbD0iI2IzNTQwMCIgZmlsbC1ydWxlPSJldmVub2RkIi8+PC9zdmc+);</span><br><span class="line">&#125;</span><br><span class="line">.list-title .title-text:after &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    width: 34px;</span><br><span class="line">    height: 24px;</span><br><span class="line">    display: block;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 56px;</span><br><span class="line">    top: -25px;</span><br><span class="line">    background-image: url(data:image&#x2F;svg+xml;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzNCIgaGVpZ2h0PSIyNCI+PGRlZnM+PGxpbmVhckdyYWRpZW50IGlkPSJhIiB4MT0iMjUzIiB5MT0iMTUzNCIgeDI9IjIxOSIgeTI9IjE1MzQiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIj48c3RvcCBvZmZzZXQ9IjAiIHN0b3AtY29sb3I9IiNmZmFiMDAiLz48c3RvcCBvZmZzZXQ9IjEiIHN0b3AtY29sb3I9IiNlNjZjMDAiLz48L2xpbmVhckdyYWRpZW50PjwvZGVmcz48cGF0aCBkPSJNMjUzIDE1MjJoLTM0djI0aDM0bC02LTEyeiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIxOSAtMTUyMikiIGZpbGw9InVybCgjYSkiIGZpbGwtcnVsZT0iZXZlbm9kZCIvPjxwYXRoIGQ9Ik05IDE4bC05IDZWMGg5djE4eiIgZmlsbD0iI2IzNTQwMCIgZmlsbC1ydWxlPSJldmVub2RkIi8+PC9zdmc+);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list-title .title-text span &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    border-radius: 5px 5px 2px 2px;</span><br><span class="line">    height: 30px;</span><br><span class="line">    padding: 0 25px;</span><br><span class="line">    line-height: 30px;</span><br><span class="line">    color: #fff;</span><br><span class="line">    text-shadow: 0 -1px var(--primary_dark_1);</span><br><span class="line">    background: linear-gradient(90deg,#ff861a,#ffab00,#ff861a);</span><br><span class="line">    z-index: 1;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    box-shadow: 0 10px 10px rgb(0 4 10 &#x2F; 30%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Js代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 一定要放在尾部浮动公告栏才能起作用 --&gt;</span><br><span class="line">float_box &#x3D; document.getElementById(&quot;float_box&quot;);</span><br><span class="line">var xPos &#x3D; document.body.clientWidth;</span><br><span class="line">var yPos &#x3D; 0;</span><br><span class="line">var step &#x3D; 1;</span><br><span class="line">var delay &#x3D; 30;</span><br><span class="line">var height &#x3D; 0;</span><br><span class="line">var Hoffset &#x3D; 0;</span><br><span class="line">var Woffset &#x3D; 0;</span><br><span class="line">var yon &#x3D; 0;</span><br><span class="line">var xon &#x3D; 0;</span><br><span class="line">var pause &#x3D; true;</span><br><span class="line">var interval;</span><br><span class="line"></span><br><span class="line">float_box.style.top &#x3D; yPos;</span><br><span class="line"></span><br><span class="line">function closeBox() &#123;</span><br><span class="line">    clearInterval(interval);</span><br><span class="line">    float_box.style.visibility &#x3D; &#39;hidden&#39;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function changePos() &#123;</span><br><span class="line">    width &#x3D; document.body.clientWidth;</span><br><span class="line">    height &#x3D; document.body.clientHeight;</span><br><span class="line">    Hoffset &#x3D; float_box.offsetHeight;</span><br><span class="line">    Woffset &#x3D; float_box.offsetWidth;</span><br><span class="line">    float_box.style.left &#x3D; xPos + document.body.scrollLeft+&#39;px&#39;;</span><br><span class="line">    float_box.style.top &#x3D; yPos + document.body.scrollTop+&#39;px&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if (yon) &#123;</span><br><span class="line">        yPos &#x3D; yPos + step;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        yPos &#x3D; yPos - step;</span><br><span class="line">    &#125;</span><br><span class="line">    if (yPos &lt; 0) &#123;</span><br><span class="line">        yon &#x3D; 1;</span><br><span class="line">        yPos &#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">    if (yPos &gt;&#x3D; (height - Hoffset)) &#123;</span><br><span class="line">        yon &#x3D; 0;</span><br><span class="line">        yPos &#x3D; (height - Hoffset);</span><br><span class="line">    &#125;</span><br><span class="line">    if (xon) &#123;</span><br><span class="line">        xPos &#x3D; xPos + step;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        xPos &#x3D; xPos - step;</span><br><span class="line">    &#125;</span><br><span class="line">    if (xPos &lt; 0) &#123;</span><br><span class="line">        xon &#x3D; 1;</span><br><span class="line">        xPos &#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">    if (xPos &gt;&#x3D; (width - Woffset)) &#123;</span><br><span class="line">        xon &#x3D; 0;</span><br><span class="line">        xPos &#x3D; (width - Woffset);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function start() &#123;</span><br><span class="line">    float_box.style.visibility &#x3D; &quot;visible&quot;;</span><br><span class="line">    interval &#x3D; setInterval(&#39;changePos()&#39;, delay);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start();</span><br></pre></td></tr></table></figure><h3 id="诺兰音乐播放器"><a href="#诺兰音乐播放器" class="headerlink" title="诺兰音乐播放器"></a>诺兰音乐播放器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 添加诺兰网播放器 --&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;lib.baomitu.com&#x2F;font-awesome&#x2F;4.7.0&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;music&quot; key&#x3D;&quot;601d2e8e6ab7b&quot; api&#x3D;&quot;https:&#x2F;&#x2F;music.918xw.cn&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;script id&#x3D;&quot;xplayer&quot; src&#x3D;&quot;https:&#x2F;&#x2F;music.918xw.cn&#x2F;Static&#x2F;player2&#x2F;js&#x2F;player.js&quot; &gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="梨花带雨播放器"><a href="#梨花带雨播放器" class="headerlink" title="梨花带雨播放器"></a>梨花带雨播放器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 梨花带雨播放器 --&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;https:&#x2F;&#x2F;lib.baomitu.com&#x2F;font-awesome&#x2F;4.7.0&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;music&quot; key&#x3D;&quot;5fd3082fcfd27&quot; api&#x3D;&quot;https:&#x2F;&#x2F;music.xingyaox.com&quot;&gt;&lt;&#x2F;div&gt;&lt;script id&#x3D;&quot;xplayer&quot; src&#x3D;&quot;https:&#x2F;&#x2F;music.xingyaox.com&#x2F;api&#x2F;PlayerJs&#x2F;id&#x2F;5fd3082fcfd27&quot; &gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="节日主题小挂件"><a href="#节日主题小挂件" class="headerlink" title="节日主题小挂件"></a>节日主题小挂件</h3><p>Html:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 春节主题 按钮 --&gt;</span><br><span class="line">&lt;a onclick&#x3D;&quot;switchThemes()&quot; id&#x3D;&quot;switchspring&quot;&gt;</span><br><span class="line">    &lt;img class&#x3D;&quot;chunjiepic&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;604a17545aedab222c308691.png&quot; title&#x3D;&quot;节日主题&quot;&gt;</span><br><span class="line">&lt;&#x2F;a&gt;</span><br><span class="line">&lt;!-- 圣诞老人 小挂件 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;caishendeng&quot;&gt;    </span><br><span class="line">&lt;!-- 圣诞老人--&gt;    </span><br><span class="line">    &lt;div class&#x3D;&quot;caishenxian&quot;&gt;</span><br><span class="line">        &lt;img class&#x3D;&quot;caishenpic lala&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;604a17775aedab222c30af59.png&quot;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt; </span><br><span class="line">&lt;!-- 福袋仙 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;caishenxian fudaixian&quot;&gt;</span><br><span class="line">&lt;img class&#x3D;&quot;caishenpic fudai&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;604a2bdc5aedab222c4501c0.png&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt; </span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>CSS:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*春节模式 *&#x2F;</span><br><span class="line">#switchspring &#123;</span><br><span class="line">    background: #e7510a;</span><br><span class="line">    width: 38px;</span><br><span class="line">    height: 2px;</span><br><span class="line">    display: block;</span><br><span class="line">    position: fixed;</span><br><span class="line">    border-radius: 50%;</span><br><span class="line">    right: 15px;</span><br><span class="line">    bottom: 240px;</span><br><span class="line">    padding-top: 15px;</span><br><span class="line">    margin-bottom: 0;</span><br><span class="line">    z-index: 998;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.chunjiepic &#123;</span><br><span class="line">width: 38px;</span><br><span class="line">height: 38px;</span><br><span class="line">border-radius: 50%;</span><br><span class="line">position: absolute;</span><br><span class="line">bottom: 7px;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*春节主题 挂件吊线*&#x2F;</span><br><span class="line">.caishenxianleft &#123;</span><br><span class="line">left: 16%!important;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 0px;</span><br><span class="line">width: 2px;</span><br><span class="line">height: 20px;</span><br><span class="line">background: #dc8f03;</span><br><span class="line">transform-origin: 50% -100px;</span><br><span class="line">animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.guguxian &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 0px;</span><br><span class="line">left: 20%;</span><br><span class="line">width: 2px;</span><br><span class="line">height: 20px;</span><br><span class="line">background: #dc8f03;</span><br><span class="line">transform-origin: 50% -100px;</span><br><span class="line">animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">.wenzhangxian &#123;</span><br><span class="line">left: 50%!important;</span><br><span class="line">z-index: 998;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*春节主题 挂件*&#x2F;</span><br><span class="line">.caishenxian &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 0px;</span><br><span class="line">right: 20%;</span><br><span class="line">width: 2px;</span><br><span class="line">height: 20px;</span><br><span class="line">background: #dc8f03;</span><br><span class="line">transform-origin: 50% -100px;</span><br><span class="line">animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.caishenpic &#123;</span><br><span class="line">width: 48px;</span><br><span class="line">height: 48px;</span><br><span class="line">border-radius: 50%;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 12px;</span><br><span class="line">right: -22px;</span><br><span class="line">z-index: 9;</span><br><span class="line">&#x2F;* transform-origin: 50% -100px; *&#x2F;</span><br><span class="line">animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">&#x2F;* -webkit-transform-origin: 50% -100px; *&#x2F;</span><br><span class="line">-webkit-animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 圣诞老人 *&#x2F;</span><br><span class="line">.lala &#123;</span><br><span class="line">width: 32px!important;</span><br><span class="line">height: 32px!important;</span><br><span class="line">opacity: 1!important;</span><br><span class="line">left: -4px!important;</span><br><span class="line">top: 14px!important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 福袋仙 *&#x2F;</span><br><span class="line">.fudaixian &#123;</span><br><span class="line">    left: 30%!important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fudai &#123;</span><br><span class="line">top: 14px!important;</span><br><span class="line">left: -22px!important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.chunp &#123;</span><br><span class="line">width: 216px!important;</span><br><span class="line">height: 96px!important;</span><br><span class="line">left: -80px!important;</span><br><span class="line">top: 6px!important;</span><br><span class="line">&#125;</span><br><span class="line">.fudao &#123;</span><br><span class="line">width: 38px;</span><br><span class="line">height: 38px;</span><br><span class="line">top: 18px!important;</span><br><span class="line">left: -19px!important;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 点击显示或者隐藏总样式开始 *&#x2F;</span><br><span class="line">.caishendeng,</span><br><span class="line">.xiaomaozitx,</span><br><span class="line">.labelmz,</span><br><span class="line">.friendmz</span><br><span class="line">&#123;</span><br><span class="line">display: none;</span><br><span class="line">&#125;</span><br><span class="line">body.themespring .caishendeng,</span><br><span class="line">body.themespring .xiaomaozitx,</span><br><span class="line">body.themespring .labelmz,</span><br><span class="line">body.themespring .friendmz</span><br><span class="line">&#123;</span><br><span class="line">display: block;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;* 点击显示或者隐藏总样式结束 *&#x2F;</span><br><span class="line">.toupic &#123;</span><br><span class="line">position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.xiaomaozitx &#123;</span><br><span class="line">width: 60px;</span><br><span class="line">height: 60px;</span><br><span class="line">position: absolute;</span><br><span class="line">top: -127px;</span><br><span class="line">right: 25%;</span><br><span class="line">transform: rotate(40deg);</span><br><span class="line">position: absolute;</span><br><span class="line">z-index: 99;</span><br><span class="line">-webkit-animation: mzanimate 1.2s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">.labelmz &#123;</span><br><span class="line">width: 34px;</span><br><span class="line">height: 34px;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 7px;</span><br><span class="line">right: -84px;</span><br><span class="line">transform: rotate(40deg);</span><br><span class="line">position: absolute;</span><br><span class="line">z-index: 99;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: mzanimate 1.8s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">.weilemz &#123;</span><br><span class="line">position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.friendmz &#123;</span><br><span class="line">width: 50px!important;</span><br><span class="line">height: 50px!important;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 8px;</span><br><span class="line">right: -90px;</span><br><span class="line">transform: rotate(44deg);</span><br><span class="line">position: absolute;</span><br><span class="line">z-index: 99;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: mzanimate 1.8s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">.lions &#123;</span><br><span class="line">width: 32px!important;</span><br><span class="line">height: 32px!important;</span><br><span class="line">opacity: 1!important;</span><br><span class="line">left: -15px!important;</span><br><span class="line">top: 14px!important;</span><br><span class="line">&#125;</span><br><span class="line">.fenleiss &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: -64px;</span><br><span class="line">left: 20%;</span><br><span class="line">width: 2px;</span><br><span class="line">height: 20px;</span><br><span class="line">background: #dc8f03;</span><br><span class="line">transform-origin: 50% -100px;</span><br><span class="line">animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: swing 3.5s infinite ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">.gugus &#123;</span><br><span class="line">width: 32px!important;</span><br><span class="line">height: 32px!important;</span><br><span class="line">opacity: 1!important;</span><br><span class="line">left: -15px!important;</span><br><span class="line">top: 9px!important;</span><br><span class="line">&#125;</span><br><span class="line">.huadengpic &#123;</span><br><span class="line">width: 40px!important;</span><br><span class="line">height: 40px!important;</span><br><span class="line">opacity: 1!important;</span><br><span class="line">left: -18px!important;</span><br><span class="line">top: 9px!important;</span><br><span class="line">&#125;</span><br><span class="line">.shanzipic &#123;</span><br><span class="line">width: 40px!important;</span><br><span class="line">height: 40px!important;</span><br><span class="line">opacity: 1!important;</span><br><span class="line">left: -18px!important;</span><br><span class="line">top: 18px!important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.denglong &#123;</span><br><span class="line">display: none;</span><br><span class="line">&#125;</span><br><span class="line">body.themespring .denglong &#123;</span><br><span class="line">display: block;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 1124px) &#123;</span><br><span class="line">.nav-menu &#123;</span><br><span class="line">padding-right: 0px;</span><br><span class="line">&#125;</span><br><span class="line">body.themespring .nav-menu &#123;</span><br><span class="line">padding-right: 96px;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (max-width: 760px) &#123;</span><br><span class="line">.deng-box, .deng-box1 &#123;</span><br><span class="line">width: 40%;</span><br><span class="line">&#125;</span><br><span class="line">body.themespring .right &#123;</span><br><span class="line">float: left!important;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">@media only screen and (min-width: 768px) and (max-width: 1024px) &#123;</span><br><span class="line">.right &#123;</span><br><span class="line">float: left!important;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">.deng-box &#123;</span><br><span class="line">position: fixed;</span><br><span class="line">top: -40px;</span><br><span class="line">right: -20px;</span><br><span class="line">z-index: 999;</span><br><span class="line">&#125;</span><br><span class="line">.deng-box1 &#123;</span><br><span class="line">position: fixed;</span><br><span class="line">top: -30px;</span><br><span class="line">right: 10px;</span><br><span class="line">z-index: 999;</span><br><span class="line">&#125;</span><br><span class="line">.deng-box1 .deng &#123;</span><br><span class="line">position: relative;</span><br><span class="line">width: 120px;</span><br><span class="line">height: 90px;</span><br><span class="line">margin: 50px;</span><br><span class="line">background: #d8000f;</span><br><span class="line">background: rgba(216, 0, 15, 0.8);</span><br><span class="line">border-radius: 50% 50%;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: swing 5s infinite ease-in-out;</span><br><span class="line">box-shadow: -5px 5px 30px 4px rgba(252, 144, 61, 1);</span><br><span class="line">&#125;</span><br><span class="line">.deng &#123;</span><br><span class="line">position: relative;</span><br><span class="line">width: 120px;</span><br><span class="line">height: 90px;</span><br><span class="line">margin: 50px;</span><br><span class="line">background: #d8000f;</span><br><span class="line">background: rgba(216, 0, 15, 0.8);</span><br><span class="line">border-radius: 50% 50%;</span><br><span class="line">-webkit-transform-origin: 50% -100px;</span><br><span class="line">-webkit-animation: swing 3s infinite ease-in-out;</span><br><span class="line">box-shadow: -5px 5px 50px 4px rgba(250, 108, 0, 1);</span><br><span class="line">&#125;</span><br><span class="line">.deng-a &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 90px;</span><br><span class="line">background: #d8000f;</span><br><span class="line">background: rgba(216, 0, 15, 0.1);</span><br><span class="line">margin: 12px 8px 8px 10px;</span><br><span class="line">border-radius: 50% 50%;</span><br><span class="line">border: 2px solid #dc8f03;</span><br><span class="line">&#125;</span><br><span class="line">.deng-b &#123;</span><br><span class="line">width: 45px;</span><br><span class="line">height: 90px;</span><br><span class="line">background: #d8000f;</span><br><span class="line">background: rgba(216, 0, 15, 0.1);</span><br><span class="line">margin: -4px 8px 8px 26px;</span><br><span class="line">border-radius: 50% 50%;</span><br><span class="line">border: 2px solid #dc8f03;</span><br><span class="line">&#125;</span><br><span class="line">.xian &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: -20px;</span><br><span class="line">left: 60px;</span><br><span class="line">width: 2px;</span><br><span class="line">height: 20px;</span><br><span class="line">background: #dc8f03;</span><br><span class="line">&#125;</span><br><span class="line">.shui-a &#123;</span><br><span class="line">position: relative;</span><br><span class="line">width: 5px;</span><br><span class="line">height: 20px;</span><br><span class="line">margin: -5px 0 0 59px;</span><br><span class="line">-webkit-animation: swing 4s infinite ease-in-out;</span><br><span class="line">-webkit-transform-origin: 50% -45px;</span><br><span class="line">background: #ffa500;</span><br><span class="line">border-radius: 0 0 5px 5px;</span><br><span class="line">&#125;</span><br><span class="line">.shui-b &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 14px;</span><br><span class="line">left: -2px;</span><br><span class="line">width: 10px;</span><br><span class="line">height: 10px;</span><br><span class="line">background: #dc8f03;</span><br><span class="line">border-radius: 50%;</span><br><span class="line">&#125;</span><br><span class="line">.shui-c &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: 18px;</span><br><span class="line">left: -2px;</span><br><span class="line">width: 10px;</span><br><span class="line">height: 35px;</span><br><span class="line">background: #ffa500;</span><br><span class="line">border-radius: 0 0 0 5px;</span><br><span class="line">&#125;</span><br><span class="line">.deng:before &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">top: -7px;</span><br><span class="line">left: 29px;</span><br><span class="line">height: 12px;</span><br><span class="line">width: 60px;</span><br><span class="line">content: &quot; &quot;;</span><br><span class="line">display: block;</span><br><span class="line">z-index: 999;</span><br><span class="line">border-radius: 5px 5px 0 0;</span><br><span class="line">border: solid 1px #dc8f03;</span><br><span class="line">background: #ffa500;</span><br><span class="line">background: linear-gradient(to right, #dc8f03, #ffa500, #dc8f03, #ffa500, #dc8f03);</span><br><span class="line">&#125;</span><br><span class="line">.deng:after &#123;</span><br><span class="line">position: absolute;</span><br><span class="line">bottom: -7px;</span><br><span class="line">left: 10px;</span><br><span class="line">height: 12px;</span><br><span class="line">width: 60px;</span><br><span class="line">content: &quot; &quot;;</span><br><span class="line">display: block;</span><br><span class="line">margin-left: 20px;</span><br><span class="line">border-radius: 0 0 5px 5px;</span><br><span class="line">border: solid 1px #dc8f03;</span><br><span class="line">background: #ffa500;</span><br><span class="line">background: linear-gradient(to right, #dc8f03, #ffa500, #dc8f03, #ffa500, #dc8f03);</span><br><span class="line">&#125;</span><br><span class="line">.deng-t &#123;</span><br><span class="line">font-family: 华文行楷;</span><br><span class="line">font-size: 26px;</span><br><span class="line">color: #dc8f03;</span><br><span class="line">font-weight: bold;</span><br><span class="line">line-height: 44px;</span><br><span class="line">text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.night .deng-t,</span><br><span class="line">.night .deng-box,</span><br><span class="line">.night .deng-box1 &#123;</span><br><span class="line">background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes swing &#123;</span><br><span class="line">0% &#123;</span><br><span class="line">-moz-transform: rotate(-10deg)</span><br><span class="line">&#125;</span><br><span class="line">50% &#123;</span><br><span class="line">-moz-transform: rotate(10deg)</span><br><span class="line">&#125;</span><br><span class="line">100% &#123;</span><br><span class="line">-moz-transform: rotate(-10deg)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes swing &#123;</span><br><span class="line">0% &#123;</span><br><span class="line">-webkit-transform: rotate(-10deg)</span><br><span class="line">&#125;</span><br><span class="line">50% &#123;</span><br><span class="line">-webkit-transform: rotate(10deg)</span><br><span class="line">&#125;</span><br><span class="line">100% &#123;</span><br><span class="line">-webkit-transform: rotate(-10deg)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 节日主题切换</span><br><span class="line">if (localStorage.getItem(&#39;themespring&#39;) &#x3D;&#x3D;&#x3D; &#39;1&#39;) &#123;</span><br><span class="line">document.body.classList.add(&#39;themespring&#39;);</span><br><span class="line">&#125;</span><br><span class="line">else if (matchMedia(&#39;(prefers-color-scheme: themespring)&#39;).matches) &#123;</span><br><span class="line">document.body.classList.add(&#39;themespring&#39;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function switchThemes() &#123;</span><br><span class="line">var body &#x3D; document.body;</span><br><span class="line">if(body.classList.contains(&#39;themespring&#39;))&#123;</span><br><span class="line">  document.body.classList.remove(&#39;themespring&#39;);</span><br><span class="line">  localStorage.setItem(&#39;themespring&#39;,&#39;0&#39;);</span><br><span class="line">  return;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  document.body.classList.add(&#39;themespring&#39;);</span><br><span class="line">  localStorage.setItem(&#39;themespring&#39;,&#39;1&#39;);</span><br><span class="line">  return;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure><h2 id="用bat脚本加密文件夹"><a href="#用bat脚本加密文件夹" class="headerlink" title="用bat脚本加密文件夹"></a>用bat脚本加密文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cls</span><br><span class="line">@ECHO OFF</span><br><span class="line">title Folder Private</span><br><span class="line">if EXIST &quot;Control Panel.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;&quot; goto UNLOCK</span><br><span class="line">if NOT EXIST Private goto MDLOCKER</span><br><span class="line">:CONFIRM</span><br><span class="line">echo Are you sure you want to lock the folder(Y&#x2F;N)</span><br><span class="line">set&#x2F;p &quot;cho&#x3D;&gt;&quot;</span><br><span class="line">if %cho%&#x3D;&#x3D;Y goto LOCK</span><br><span class="line">if %cho%&#x3D;&#x3D;y goto LOCK</span><br><span class="line">if %cho%&#x3D;&#x3D;n goto END</span><br><span class="line">if %cho%&#x3D;&#x3D;N goto END</span><br><span class="line">echo Invalid choice.</span><br><span class="line">goto CONFIRM</span><br><span class="line">:LOCK</span><br><span class="line">ren Private &quot;Control Panel.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;&quot;</span><br><span class="line">attrib +h +s &quot;Control Panel.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;&quot;</span><br><span class="line">echo Folder locked</span><br><span class="line">goto End</span><br><span class="line">:UNLOCK</span><br><span class="line">echo Enter password to unlock folder</span><br><span class="line">set&#x2F;p &quot;pass&#x3D;&gt;&quot;</span><br><span class="line">if NOT %pass%&#x3D;&#x3D; 你的密码 goto FAIL</span><br><span class="line">attrib -h -s &quot;Control Panel.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;&quot;</span><br><span class="line">ren &quot;Control Panel.&#123;21EC2020-3AEA-1069-A2DD-08002B30309D&#125;&quot; Private</span><br><span class="line">echo Folder Unlocked successfully</span><br><span class="line">goto End</span><br><span class="line">:FAIL</span><br><span class="line">echo Invalid password</span><br><span class="line">goto end</span><br><span class="line">:MDLOCKER</span><br><span class="line">md Private</span><br><span class="line">echo Private created successfully</span><br><span class="line">goto End</span><br><span class="line">:End</span><br></pre></td></tr></table></figure><h2 id="透明窗口样式代码"><a href="#透明窗口样式代码" class="headerlink" title="透明窗口样式代码"></a>透明窗口样式代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">&#x2F;*透明窗口样式*&#x2F;</span><br><span class="line">.sidenav &#123;</span><br><span class="line">-webkit-box-shadow: 0 2px 2px 0 rgb(0 0 0 &#x2F; 14%), 0 3px 1px -2px rgb(0 0 0 &#x2F; 12%), 0 1px 5px 0 rgb(0 0 0 &#x2F; 20%);</span><br><span class="line">box-shadow: 0 2px 2px 0 rgb(0 0 0 &#x2F; 14%), 0 3px 1px -2px rgb(0 0 0 &#x2F; 12%), 0 1px 5px 0 rgb(0 0 0 &#x2F; 20%);</span><br><span class="line">width: 300px;</span><br><span class="line">height: 300px;</span><br><span class="line">background: url(https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;604822065aedab222c050382.png) no-repeat;</span><br><span class="line">background-size: contain;</span><br><span class="line">float:left;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;sidenav&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 黑技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端理论</title>
      <link href="/2020/04/21/%E5%89%8D%E7%AB%AF%E7%90%86%E8%AE%BA/"/>
      <url>/2020/04/21/%E5%89%8D%E7%AB%AF%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="JavaScript、Ajax、JQuery和JSON的关系"><a href="#JavaScript、Ajax、JQuery和JSON的关系" class="headerlink" title="JavaScript、Ajax、JQuery和JSON的关系"></a>JavaScript、Ajax、JQuery和JSON的关系</h3><h4 id="JavaScript、Ajax、JQuery和JSON简介"><a href="#JavaScript、Ajax、JQuery和JSON简介" class="headerlink" title="JavaScript、Ajax、JQuery和JSON简介"></a>JavaScript、Ajax、JQuery和JSON简介</h4><pre><code>1.javascript是一门编程语言，我们用它来编写客户端浏览器脚本。2.JavaScript 为页面提供更多功能，是页面交互功能的基础语言。此外它的语言规范和引擎还被用于其他领域，比如 Node 等。3.jQuery是javascript的一个库，简化js编程，兼容性更强，写的更少，做的更多 4.jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到5.jQuery是一个框架，它对JS进行了封装，使其更方便使用。jQuery使得JS与Ajax的使用更方便6.Ajax是一门技术，它提供了异步更新的机制，使用客户端与服务器间交换数据而非整个页面文档，实现页面的局部更新。7.Ajax 技术提供了一种新的前后端数据交互方式，不需要刷新页面，而且不阻塞页面执行流程，异步的去请求去获取、交互数据。8.Ajax的优点：      1.无需刷新页面即可实现数据的请求和响应，用户体验非常好。      2使用异步方式与服务器通信，具有更加迅速的响应能力。      3.基于标准化的技术，不需要下载插件或者小程序。10.JSON 用来描述前后端数据交互的内容格式，有了 JSON 这样的一套统一的描述规则，前后端解析数据的成本变低，使用非常简单。  JSON 属于 JavaScript 的一个子集，类似于javascript对象的一种数据格式。json的作用：在不同的系统平台，或不同编程语言之间传递数据。11.详情链接    https://blog.csdn.net/jediael_lu/article/details/38312685</code></pre><h4 id="JavaScript部分"><a href="#JavaScript部分" class="headerlink" title="JavaScript部分"></a>JavaScript部分</h4><pre><code>1.定义：JavaScript是一种基于对象和事件驱动的脚本语言，在客户端执行。2.特点：1. 是一种边解释边执行的脚本语言，不需要编译。  2. 主要用来向HTML页面添加交互行为。  3. 可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。  4. 平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行。  3.JavaScript组成：1.ECMAScript:描述了该语言的语法和基本对象2.DOM:操作Html标签的方法和接口3.BOM:操作浏览器的方法和接口4.JavaScript日常用途：1.嵌入动态文本于HTML页面。 2.对浏览器事件做出响应。 3.读写HTML元素。 4.在数据被提交到服务器之前验证数据。 5.检测访客的浏览器信息。 6.控制cookies，包括创建和修改等。 7.基于Node.js技术进行服务器端编程。5.什么是函数？    函数的含义：类似于Java中的方法，是完成特定任务的代码语句块；    使用更简单：不用定义属于某个类，直接使用；    函数分类：系统函数和自定义函数6.BOM和DOM具体内容：https://blog.csdn.net/qq877507054/article/details/51395830BOM编程：1.BOM可实现功能：      1.弹出新的浏览器窗口      2.移动、关闭浏览器窗口以及调整窗口的大小      3.页面的前进、后退具体地址：https://blog.csdn.net/nanjinzhu/article/details/82718317DOM编程：1.    特点：任何一个节点都有若干个子节点，但却只有一个父节点。2.    地址：https://blog.csdn.net/yanyan965914478/article/details/90209377JavaScript作用域：  在JavaScript中，作用域为可访问变量，对象，函数的集合。  变量在函数内部声明即为局部变量，在函数外部定义即为全局变量。  局部变量只能在函数内访问，全局变量在网页中所有脚本和函数均可访问。  （注意：如果变量在函数内没有使用var关键字，该变量自动为全局变量）  生命周期：局部变量在函数执行完毕后销毁，全局变量在页面关闭后销毁。  </code></pre><h4 id="部分方法解释"><a href="#部分方法解释" class="headerlink" title="部分方法解释"></a>部分方法解释</h4><pre><code>1.Window对象的定义和用法：  confirm()方法用于显示一个带有指定消息和确认及取消按钮的对话框。  如果访问者点击&quot;确定&quot;，此方法返回true，否则返回false。2.JavaScript decodeURI() 函数定义和用法：decodeURI() 函数可对 encodeURI() 函数编码过的 URI 进行解码。提示： 使用 encodeURI() 函数可以对 URI 进行编码。3.onfocus 事件  定义和用法  onfocus 事件在对象获得焦点时发生。Onfocus通常用于 input, select, 和a提示： onfocus 事件的相反事件为 onblur 事件。4.input中 autocomplete 属性定义和用法autocomplete 属性规定输入字段是否应该启用自动完成功能。自动完成允许浏览器预测对字段的输入。当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。注意：autocomplete 属性适用于下面的 input 类型：    text、search、url、tel、email、password、datepickers、range 和 color。5.onblur 事件定义和用法onblur 事件会在对象失去焦点时发生。Onblur 经常用于Javascript验证代码，一般用于表单输入框。提示：onblur 相反事件为 onfocus 事件 。</code></pre><h4 id="JQuery框架"><a href="#JQuery框架" class="headerlink" title="JQuery框架"></a>JQuery框架</h4><pre><code>1.简介：jQuery 是一个快速、轻量级、可扩展的 js 库，它提供了易于使用的跨浏览器的API，使得访问dom，时间处理、动画效果、ajax请求变得简单。2.JQuery具有以下特点：  2.1快速获取文档元素  2.2提供漂亮的页面动态效果   2.3创建AJAX无刷新网页  2.4提供对JavaScript语言的增强  2.5增强对事件处理  2.6更改网页内容  3.方法分析：  1..attr() 方法：设置或返回被选元素的属性和值。2..change() 方法：当元素的值改变时发生 change 事件（仅适用于表单字段）。触发change 事件，或规定当发生 change 事件时运行的函数。3..ready() 方法：规定当 ready 事件发生时执行的代码。4..slideToggle()方法：下拉显示或上升隐藏详细地址：https://blog.csdn.net/msyqmsyq/article/details/820182184.JQuery代码写法解释：    $(&quot;tr:eq(1)  td:eq(2)&quot;):这代表了要选中表格的第二行中的第三个单元格，如果在后面再加上.text() 代表要取出这个单元格中的文本。5.prop()方法获取匹配的元素的属性值。     这个方法是jquery1.6以后出来的，用来区别之前的.attr()方法.  区别最大的一点就是：布尔型的属性，1.6以后都是用.prop()方法就好了。  这个布尔型的属性，再解释一下，是属性值只有true|false的属性。  还有种情况就是只添加属性名，不需要写属性值的就可以生效的也同样使用.prop()方法。比如：checked、disable这样的，其实它们说到底还是属于布尔型的属性。  1.添加属性名称该属性就会生效应该使用prop();  2.是有true,false两个属性使用prop();  3.其他则使用attr();  6.部分方法解释：  $(this).attr(key); 获取节点属性名的值，相当于getAttribute(key)方法  $(this).attr(key, value); 设置节点属性的值，相当于setAttribute(key,value)方法 $(this).val();获取某个元素节点的value值，相当于$(this).attr(“value”);  $(this).val(value);设置某个元素节点的value值，相当于$(this).attr(“value”,value);  7.jQuery ready() 方法:      7.1定义和用法          当 DOM（document object model 文档对象模型）加载完毕且页面完全加载（包括图像）时发生 ready 事件。使用 ready() 来使函数在文档加载后是可用的。          提示：ready() 方法不应该与 &lt;body onload=&quot;&quot;&gt; 一起使用。  JQuery中 $(function(){})和$(document).ready(function(){})是等价的，jq ready()的方法就是Dom Ready，他的作用或者意义就是:在DOM加载完成后就可以可以对DOM进行操作。  8.jQuery change() 方法:      8.1定义和用法          当元素的值改变时发生 change 事件（仅适用于表单字段）。      change() 方法触发 change 事件，或规定当发生 change 事件时运行的函数。          注意：当用于 select 元素时，change 事件会在选择某个选项时发生。当用于 text field 或 text area 时，change 事件会在元素失去焦点时发生。  9. jQuery post() 方法      9.1定义和用法：$.post() 方法使用 HTTP POST 请求从服务器加载数据。</code></pre><h4 id="AJAX异步通信"><a href="#AJAX异步通信" class="headerlink" title="AJAX异步通信"></a>AJAX异步通信</h4><pre><code>1.定义：是一种无需加载整个网页的情况下，实现部分网页的更新的技术。2.用途：在不用提交整个页面的情况下，进行局部刷新，从而进行客户端与服务端的数据交互。3.优点：     使用异步方式与服务器进行通信，具有更加迅速的响应能力。   最大的优点是页面无刷新即可实现数据的请求与响应，用户体验非常好。   基于标准化的并被广泛支持的技术，不需要下载小插件或程序。4.缺点：     异步请求不会在浏览器中产生后退历史，而同步访问会对浏览器产生后退历史。   使用JavaScript作Ajax的引擎，JavaScript的兼容性和Debug需要特别注意。5.什么是异步？      异步和同步是对应的关系。    同步是指在网页中，当一个请求发出后，服务器没有响应结束之前，不允许对当前页面进行其他操作（如点击链接），相当于多任务串行。      异步是指当一个请求发出后，在服务器没有响应结束之前，可以对当前页面进行其他操作，相当于多任务并行。      1.同步现象：当客户端向服务器发送请求，在服务器返回响应之前，客户端处于等待，卡死状态。      2.异步现象：客户端向服务器发送请求，无论服务器是否返回响应，客户端随时可以做其他事情，不会被卡死。  ajax，一般中文称之为：&quot;阿贾克斯&quot;，是英文 “Async Javascript And Xml”的简写，译作：异步js和xml数据传输数据技术。ajax的作用： ajax可以让js代替浏览器向后端程序发送http请求，与后端通信，在用户不知道的情况下操作数据和信息，从而实现页面局部刷新数据/无刷新更新数据。所以开发中ajax是很常用的技术，主要用于操作后端提供的数据接口，从而实现网站的前后端分离。axios或者jQuery提供的ajax，本质上就是XMLHttpRequest对象操作的封装。</code></pre><blockquote><p>地址：<a href="https://blog.csdn.net/Ha_Girl/article/details/90710491" target="_blank" rel="noopener" title="详情">AJAX详解</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Jquery </tag>
            
            <tag> Ajax </tag>
            
            <tag> Json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora+MarkDown常用语法</title>
      <link href="/2020/04/21/Typora-MarkDown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/04/21/Typora-MarkDown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="MarkDown常用语法总结"><a href="#MarkDown常用语法总结" class="headerlink" title="MarkDown常用语法总结"></a>MarkDown常用语法总结</h3><h4 id="标题：-H1-H6"><a href="#标题：-H1-H6" class="headerlink" title="标题：(H1~H6)"></a>标题：(H1~H6)</h4><p>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">H1（#） </span><br><span class="line">H2(##) </span><br><span class="line">…</span><br><span class="line">H6（######）</span><br></pre></td></tr></table></figure><p>注意：#后面必须有空格才能生效  </p><h4 id="引用-（-gt-开头）"><a href="#引用-（-gt-开头）" class="headerlink" title="引用 （&gt;开头）"></a>引用 （&gt;开头）</h4><p>  开头以 &gt; 表示，可以嵌套引用  </p><p>  样式例如：  </p><blockquote><p>这种格式的引用  </p></blockquote><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>需要在文字结束后面加两个空格+回车  </p><h4 id="输入-不能显示问题"><a href="#输入-不能显示问题" class="headerlink" title="输入*不能显示问题"></a>输入*不能显示问题</h4><p>需要在前面加\进行转义才能显示<br>例如：  </p><blockquote><p>* </p></blockquote><h4 id="标签元素"><a href="#标签元素" class="headerlink" title="标签元素"></a>标签元素</h4><p>输入标签元素时，为了不让转义成元素，需要在标签&lt;后面加一个空格即可<br>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; body&gt;元素</span><br></pre></td></tr></table></figure><h4 id="复制代码块"><a href="#复制代码块" class="headerlink" title="复制代码块"></a>复制代码块</h4><p>需要在代码或文字前后加上```就行<br>例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">##加入&#96;&#96;&#96;之后可以进行复制</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">printf(&quot;Hello World!\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="无序序列（-内容）"><a href="#无序序列（-内容）" class="headerlink" title="无序序列（+/-/* 内容）"></a>无序序列（+/-/* 内容）</h4><p>  例如：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ Red</span><br><span class="line">- Green</span><br><span class="line">* Blue</span><br></pre></td></tr></table></figure><br>  效果：<br>    - red<br>    + Green<br>    * Blue</p><h4 id="有序序列-1-2-3-内容"><a href="#有序序列-1-2-3-内容" class="headerlink" title="有序序列 (1/2/3. 内容)"></a>有序序列 (1/2/3. 内容)</h4><p>  例如：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. Red</span><br><span class="line">2. Green</span><br><span class="line">3. Blue</span><br></pre></td></tr></table></figure></p><p>  效果:  </p><ol><li>Red</li><li>Green</li><li>Blue  </li></ol><h4 id="表格-（-为分割线）"><a href="#表格-（-为分割线）" class="headerlink" title="表格 （|为分割线）"></a>表格 （|为分割线）</h4><p>  用法：<br>  第一层“|” 为标题分隔<br>  第二层“|”之间需要以“-”分隔（“-”个数任意）<br>  第三层“|”为内容分隔  </p><p>  例如：<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 1    | 2    | 3    |</span><br><span class="line">| ---- | ---- | ---- |</span><br><span class="line">|      |      |      |</span><br><span class="line">|      |      |      |</span><br></pre></td></tr></table></figure></p><p>  效果：  </p><table><thead><tr><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="分割线（-或者—）"><a href="#分割线（-或者—）" class="headerlink" title="分割线（***或者—）"></a>分割线（***或者—）</h4><pre><code>例：  </code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">***或---</span><br></pre></td></tr></table></figure><pre><code>效果： </code></pre><hr><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><h5 id="内链-（-链接内容-链接源-“title”-）"><a href="#内链-（-链接内容-链接源-“title”-）" class="headerlink" title="内链 （[ 链接内容 ](链接源 “title”)）"></a>内链 （[ 链接内容 ](链接源 “title”)）</h5><p>例： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Baidu](https:&#x2F;&#x2F;www.baidu.com &quot;Baidu&quot;)</span><br></pre></td></tr></table></figure><p>效果：<br><a href="https://www.baidu.com" target="_blank" rel="noopener" title="Baidu">Baidu</a><br>注意：title需要加引号  </p><h5 id="引用链接-（-链接内容-id-）"><a href="#引用链接-（-链接内容-id-）" class="headerlink" title="引用链接 （[链接内容][id]）"></a>引用链接 （[链接内容][id]）</h5><p>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[链接内容][id]</span><br><span class="line">[id]:链接源 &quot;title&quot;</span><br></pre></td></tr></table></figure><p>例：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Baidu][id]</span><br><span class="line">[id]:http:&#x2F;&#x2F;www.baidu.com &quot;Baidu&quot;</span><br></pre></td></tr></table></figure><p>效果：<br>[Baidu][id]<br>[id]:<a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> “Baidu”</p><h5 id="URLs-（-lt-gt-括住URL）"><a href="#URLs-（-lt-gt-括住URL）" class="headerlink" title="URLs （&lt;&gt;括住URL）"></a>URLs （&lt;&gt;括住URL）</h5><p>用法：</p><p>用&lt; &gt;括住URL<br>对于标准URL，可自动识别</p><p>例如：<br><a href="https://panyongkang.github.io/mypages/OnlyI.html" target="_blank" rel="noopener">https://panyongkang.github.io/mypages/OnlyI.html</a></p><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>用法：</p><pre><code>手动添加，前面加!，格式类似链接用鼠标将图片拖入</code></pre><p>例：  </p><p><img src="/img/loading.gif" class="lazyload" data-src="http://img4.imgtn.bdimg.com/it/u=3203810868,4187730008&fm=26&gp=0.jpg"  alt="截图" title="截图"></p><h4 id="高亮-（以双-括住内容）"><a href="#高亮-（以双-括住内容）" class="headerlink" title="高亮 （以双==括住内容）"></a>高亮 （以双==括住内容）</h4><p>用法：<br>使用双==括住内容</p><p>例：  </p><p>= = 哈哈哈 = =</p><p>效果：<br>哈哈哈</p><h4 id="斜体和加粗"><a href="#斜体和加粗" class="headerlink" title="斜体和加粗"></a>斜体和加粗</h4><p>斜体 （以* *或_ _括住）<br>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*  _斜体_</span><br></pre></td></tr></table></figure><p>效果：<br><em>斜体</em> <em>斜体</em></p><h4 id="加粗-（-或-）"><a href="#加粗-（-或-）" class="headerlink" title="加粗 （** **或_ _ _ _）"></a>加粗 （** **或_ _ _ _）</h4><p>用法：  </p><p>以双或双_开头，以双或双_结尾</p><p>例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**粗体** __粗体__</span><br></pre></td></tr></table></figure><p>效果:<br><strong>粗体</strong> <strong>粗体</strong></p><h4 id="后续中。。。"><a href="#后续中。。。" class="headerlink" title="后续中。。。"></a>后续中。。。</h4>]]></content>
      
      
      <categories>
          
          <category> 语法指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好用的工具插件</title>
      <link href="/2020/04/20/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/04/20/%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Simple-Allow-Copy"><a href="#Simple-Allow-Copy" class="headerlink" title="Simple Allow Copy"></a>Simple Allow Copy</h3><p>插件链接: <a href="https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc?hl=zh_CN" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc?hl=zh_CN</a></p><p>可用于解锁复制百度文库等VIP会员文章。</p><h3 id="Replace-Google-CDN"><a href="#Replace-Google-CDN" class="headerlink" title="Replace Google CDN"></a>Replace Google CDN</h3><p>访问StackOverflow的时候很慢或登录不上，该插件可以加速访问。 </p><p>插件链接：<a href="https://pan.baidu.com/s/1uYdmj0GkSptWvjFMv4Fpbw" target="_blank" rel="noopener">https://pan.baidu.com/s/1uYdmj0GkSptWvjFMv4Fpbw</a>   </p><p>提取码：nupq </p><p>具体步骤：<br>一、由上面的链接下载ReplaceGoogleCDN然后解压，找到chrome子目录。  </p><p>二、打开Chrome，-》更多工具-》扩展程序，打开开发者模式。  </p><p>三、将已经下载的文件中的Chrome子目录，拖到扩展程序界面中。或者点击“加载已经解压的扩展程序”，定位到指定子目录。</p><p>四、在第三步上自动安装，结果如下，打开Stack Overflow网站后发现，原本出现在top处的红色提示已经不见了。</p><h3 id="IDM高速下载神器"><a href="#IDM高速下载神器" class="headerlink" title="IDM高速下载神器"></a>IDM高速下载神器</h3><p>下载链接：<a href="https://www.lanzous.com/i5sglrc" target="_blank" rel="noopener">https://www.lanzous.com/i5sglrc</a><br>使用该插件可以快速下载网站上的资源，超赞！也可以到吾爱破解网等网站搜索最新版安装。</p><h3 id="WhatRuns"><a href="#WhatRuns" class="headerlink" title="WhatRuns"></a>WhatRuns</h3><p>插件导航：<a href="https://pictureknow.com/extensions" target="_blank" rel="noopener">https://pictureknow.com/extensions</a></p><p>该插件是用于查看当前网站所使用的的技术都有哪些。可在插件导航中搜索添加或自行添加。</p><h3 id="收藏猫"><a href="#收藏猫" class="headerlink" title="收藏猫"></a>收藏猫</h3><p>插件导航：<a href="https://pictureknow.com/extensions" target="_blank" rel="noopener">https://pictureknow.com/extensions</a>  </p><p>该插件是用于管理插件和标签的。</p><h3 id="Cleaner-for-Chrome"><a href="#Cleaner-for-Chrome" class="headerlink" title="Cleaner for Chrome"></a>Cleaner for Chrome</h3><p><a href="https://chrome.google.com/webstore/detail/chrome-cleaner/lcbccdficpgimdbikgdbnhpenpbmfocj/related?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">插件链接</a></p><p>该插件可快速清理谷歌浏览器的垃圾缓存等数据。</p><h3 id="集装箱"><a href="#集装箱" class="headerlink" title="集装箱"></a>集装箱</h3><p><a href="https://chrome.google.com/webstore/detail/%E9%9B%86%E8%A3%85%E7%AE%B1/kbgigmcnifmaklccibmlepmahpfdhjch?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">插件链接</a></p><p>一个插件，提供一揽子服务。</p><h3 id="MONKNOW新标签页"><a href="#MONKNOW新标签页" class="headerlink" title="MONKNOW新标签页"></a>MONKNOW新标签页</h3><p><a href="https://chrome.google.com/webstore/detail/monknow-new-tab-personal/lnbjajkbekhkgablenknhapphbdbldeh?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">插件链接</a></p><p>提供了个性化的新建标签页，个性化的面板等。</p><h3 id="油猴脚本"><a href="#油猴脚本" class="headerlink" title="油猴脚本"></a>油猴脚本</h3><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">插件链接</a></p><p>非常腻害的用户脚本，用过的都说好。</p><p>安装完成后打开<a href="https://greasyfork.org/zh-CN/" target="_blank" rel="noopener">用户脚本网站</a>就可以随心所欲下载各种黑技能工具插件了。</p><h3 id="Adblock-Plus"><a href="#Adblock-Plus" class="headerlink" title="Adblock Plus"></a>Adblock Plus</h3><p><a href="https://chrome.google.com/webstore/detail/adblock-plus-free-ad-bloc/cfhdojbkjhnklbpkdaibdccddilifddb" target="_blank" rel="noopener">插件链接</a></p><p>致力于去除那些烦人的在线广告。它也可以帮助你去除其他的东西比如去除所有的跟踪行为。</p><h3 id="花瓣采集工具"><a href="#花瓣采集工具" class="headerlink" title="花瓣采集工具"></a><a href="https://huaban.com/about/goodies/" target="_blank" rel="noopener">花瓣采集工具</a></h3><p><a href="https://huaban.com/about/goodies/" target="_blank" rel="noopener">插件链接</a></p><p>强大的图片、视频采集工具插件，使用花瓣采集工具，你可以方便的保存任意网站上的图片、视频和截图。采集的图片可以保存到自己的花瓣账号内也可以下载到本地。</p><h3 id="划词翻译"><a href="#划词翻译" class="headerlink" title="划词翻译"></a>划词翻译</h3><p><a href="https://chrome.google.com/webstore/detail/划词翻译/ikhdkkncnoglghljlkmcimlnlhkeamad" target="_blank" rel="noopener">划词翻译</a></p><p>支持谷歌、百度、有道三大翻译和朗读引擎，可以方便的查看、复制和朗读不同引擎的翻译结果。一个简便但强大的翻译扩展。</p><h3 id="谷歌上网助手-开发版"><a href="#谷歌上网助手-开发版" class="headerlink" title="谷歌上网助手-开发版"></a>谷歌上网助手-开发版</h3><p><a href="https://chrome.google.com/webstore/detail/谷歌上网助手-开发版/cieikaeocafmceoapfogpffaalkncpkc?utm_source=chrome-ntp-icon" target="_blank" rel="noopener">插件链接</a></p><p>专门为科研、外贸、跨境电商、海淘人员、开发人员服务的上网加速工具，chrome内核浏览器专用!可以解决chrome扩展无法自动更新的问题，同时可&gt;以访问谷歌google搜索，gmail邮箱，google+等谷歌产品。</p><h3 id="Simple-Allow-Copy-1"><a href="#Simple-Allow-Copy-1" class="headerlink" title="Simple Allow Copy"></a>Simple Allow Copy</h3><p><a href="https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc" target="_blank" rel="noopener">插件链接</a></p><p>Simple Allow Copy是一款可以完全解除浏览文章时遇到不能选取、复制文字的限制，让我们能边选取文字、边阅读，或者轻松复制网址、标题或句子的chrome插件。</p><h3 id="类似的网站"><a href="#类似的网站" class="headerlink" title="类似的网站"></a>类似的网站</h3><p><a href="https://chrome.google.com/webstore/detail/similar-sites-discover-re/necpbmbhhdiplmfhmjicabdeighkndkn" target="_blank" rel="noopener">插件链接</a></p><p>当你浏览当前网站时，点击该插件可以找到类似的网站推荐，打开新的大门。</p><h3 id="SimilarWeb"><a href="#SimilarWeb" class="headerlink" title="SimilarWeb"></a>SimilarWeb</h3><p><a href="https://chrome.google.com/webstore/detail/similarweb-traffic-rank-w/hoklmmgfnpapgjgcpechhaamimifchmp" target="_blank" rel="noopener">插件链接</a></p><p>通过SimilarWeb扩展程序查看真实的深入网站参与、流量来源和网站排名信息。</p><h3 id="Octotree"><a href="#Octotree" class="headerlink" title="Octotree"></a>Octotree</h3><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">插件链接</a></p><p>Github 树形结构查看, 方便易用。</p><h3 id="GitZip-for-github"><a href="#GitZip-for-github" class="headerlink" title="GitZip for github"></a>GitZip for github</h3><p><a href="https://chrome.google.com/webstore/detail/gitzip-for-github/ffabmkklhbepgcgfonabamgnfafbdlkn" target="_blank" rel="noopener">插件链接</a></p><p>如果在Github项目上只需要下载单个文件夹，可以安装此插件，然后右键点击下载压缩包即可，方便快捷。</p>]]></content>
      
      
      <categories>
          
          <category> 工具插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>锦州银行项目</title>
      <link href="/2020/04/18/%E9%94%A6%E5%B7%9E%E9%93%B6%E8%A1%8C%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/04/18/%E9%94%A6%E5%B7%9E%E9%93%B6%E8%A1%8C%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">您好，本篇文章需密码访问，请谅解！</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 银行 </tag>
            
            <tag> 工作笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前后端分离项目</title>
      <link href="/2020/04/17/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/04/17/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">您好, 本文章需要密码可访问</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Springboot </tag>
            
            <tag> Element UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BootStrap框架</title>
      <link href="/2020/04/17/BootStrap%E6%A1%86%E6%9E%B6/"/>
      <url>/2020/04/17/BootStrap%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Bootstrap笔记"><a href="#Bootstrap笔记" class="headerlink" title="Bootstrap笔记"></a>Bootstrap笔记</h2><h3 id="Bootstrap表格"><a href="#Bootstrap表格" class="headerlink" title="Bootstrap表格"></a>Bootstrap表格</h3><p>表格&lt; table &gt;类：</p><table><thead><tr><th>类</th><th>描述</th></tr></thead><tbody><tr><td>.table</td><td>添加基本样式，只有横向分隔线</td></tr><tr><td>.table-striped</td><td>添加斑马条纹</td></tr><tr><td>.table-bordered</td><td>为所有单元格添加边框</td></tr><tr><td>.table-hover</td><td>启用鼠标悬停状态</td></tr><tr><td>.table-condensed</td><td>让表格更加紧凑</td></tr></tbody></table><p>上下文&lt; tr &gt; , &lt; th &gt; 和 &lt; td &gt; 类：</p><p>下表中的类可用于表格的行或单元格：</p><table><thead><tr><th>类</th><th>描述</th></tr></thead><tbody><tr><td>.active</td><td>将悬停的颜色应用在行或单元格上</td></tr><tr><td>.success</td><td>表示成功的操作</td></tr><tr><td>.info</td><td>表示信息变化的操作</td></tr><tr><td>.warning</td><td>表示警告操作</td></tr><tr><td>.danger</td><td>表示危险操作</td></tr></tbody></table><p>使用上下文类可以为表格的行或列添加背景颜色：</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/17/BootStrap%E6%A1%86%E6%9E%B6/hexo_post_1.png"  alt></p><h3 id="Bootstrap表单"><a href="#Bootstrap表单" class="headerlink" title="Bootstrap表单"></a>Bootstrap表单</h3><h4 id="表单布局有下列三种"><a href="#表单布局有下列三种" class="headerlink" title="表单布局有下列三种"></a>表单布局有下列三种</h4><ol><li>垂直表单（默认）</li><li>内联表单</li><li>水平表单</li></ol><h4 id="垂直或基本表单"><a href="#垂直或基本表单" class="headerlink" title="垂直或基本表单"></a>垂直或基本表单</h4><p>​    基本的表单结构是 Bootstrap 自带的，个别的表单控件自动接收一些全局样式。</p><ol><li><p>向父 &lt; form&gt; 元素添加 role=”form”。</p></li><li><p>form-group类，用于获取最佳间距的。</p></li><li><p>向所有的文本元素 &lt; input&gt;、&lt; textarea&gt; 和 &lt; select&gt; 添加 class =”form-control”用于统一格式化 。</p></li></ol><h4 id="内联表单"><a href="#内联表单" class="headerlink" title="内联表单"></a>内联表单</h4><p>​    所有内联表单中的元素都是左对齐的。内联表单需要在 &lt; form&gt; 元素上添加 .form-inline类。</p><p>注意：在屏幕宽度小于 576px 时为垂直堆叠，如果屏幕宽度大于等于576px时表单元素才会显示在同一个水平线上。</p><p>​    class=”sr-only”:隐藏内联表单的标签</p><h4 id="水平表单"><a href="#水平表单" class="headerlink" title="水平表单"></a>水平表单</h4><p>​    水平表单与其他表单不仅标记的数量上不同，而且表单的呈现形式也不同。如需创建一个水平布局的表单，请按下面的几个步骤进行：</p><ol><li><p>向父 &lt; form&gt; 元素添加 class .form-horizontal。</p></li><li><p>把标签和控件放在一个带有 class .form-group 的 &lt; div&gt; 中。</p></li><li><p>向标签添加 class .control-label，用于向右边输入框右对齐。</p></li></ol><h4 id="BootStrap表单控件"><a href="#BootStrap表单控件" class="headerlink" title="BootStrap表单控件"></a>BootStrap表单控件</h4><p>Bootstrap 支持最常见的表单控件，主要是 input、textarea、checkbox、radio 和 select。</p><p>Textarea：当您需要进行多行输入的时，可以使用。rows 属性可以改变行数</p><p>Select: 使用 multiple=”multiple” 允许用户选择多个选项。</p><p>静态控件：当您需要在一个水平表单内的表单标签后放置纯文本时，请在 &lt; p&gt; 上使用 class .form-control-static。</p><p>验证状态:</p><p>Bootstrap 包含了错误、警告和成功消息的验证样式。只需要对父元素简单地添加适当的 class（.has-warning、 .has-error 或 .has-success）即可使用验证状态。</p><h3 id="Bootstrap信息提示框"><a href="#Bootstrap信息提示框" class="headerlink" title="Bootstrap信息提示框"></a>Bootstrap信息提示框</h3><p>提示框可以使用.alert类，后面加上：</p><p>.alert-success, .alert-info, .alert-warning, .alert-danger, .alert-primary, .alert-secondary, .alert-light 或 .alert-dark 类来实现:</p><p>方法：</p><p>​    .alert:方法让所有的警告框都带有关闭功能</p><p>​    .close:关闭警告框的样式</p><p>​    .alert(‘close’):js中使用它可以关闭所有警告框</p><h3 id="Bootstrap按钮"><a href="#Bootstrap按钮" class="headerlink" title="Bootstrap按钮"></a>Bootstrap按钮</h3><p>按钮标签：</p><p>您可以在 &lt; a&gt;、&lt; button&gt; 或 &lt; input&gt; 元素上使用按钮 class。但是建议您在 &lt; button&gt; 元素上使用按钮 class，避免跨浏览器的不一致性问题。</p><p>按钮组</p><p>在 div 中直接使用 .btn-group 可以创建按钮组</p><p>自适应大小的按钮组</p><p>可以通过 .btn-group-justified 类来设置自适应大小的按钮组。</p><p>data-toggle=”dropdown”：按钮组内嵌的按钮可以设置下拉菜单</p><h3 id="Bootsrap辅助类"><a href="#Bootsrap辅助类" class="headerlink" title="Bootsrap辅助类"></a>Bootsrap辅助类</h3><p>aria-hidden=”true” 主要是帮助残障人士（如失明）使用识读设备（自动读取内容并自动播放出来），播放到带此属性的内容时会自动跳过，以免残障人士混淆！</p><h3 id="BootStrap字体图标"><a href="#BootStrap字体图标" class="headerlink" title="BootStrap字体图标"></a>BootStrap字体图标</h3><p>在新增按钮中：class=”glyphicon glyphicon-plus”：glyphicon使之变粗大，glyphicon-plus：字体图标“+”</p><h3 id="BootStrap分页"><a href="#BootStrap分页" class="headerlink" title="BootStrap分页"></a>BootStrap分页</h3><p>.pagination:添加该类来在页面上显示分页</p><p>.disabled:不可点击链接</p><p>.active:指示当前页面</p><p>.pagination-lg:分页放大</p><p>.pagination-sm：分页缩小</p><p>Html的转义字符：</p><p>​    &amp;laquo:代表“&lt;&lt;”符号</p><p>​    &amp;raquo:代表”&gt;&gt;”符号</p><p>​    人民币/日元：&yen;</p><p>​    版权： &amp; copy;</p><h3 id="Bootstrap-模态框（Modal）"><a href="#Bootstrap-模态框（Modal）" class="headerlink" title="Bootstrap 模态框（Modal）"></a>Bootstrap 模态框（Modal）</h3><p>模态框（Modal）是覆盖在父窗体上的子窗体。通常，目的是显示来自一个单独的源的内容，可以在不离开父窗体的情况下有一些互动。子窗体可提供信息、交互等。</p>]]></content>
      
      
      <categories>
          
          <category> 前端框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BootStrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百脑科技商城项目</title>
      <link href="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="项目傻瓜式教程分析"><a href="#项目傻瓜式教程分析" class="headerlink" title="项目傻瓜式教程分析"></a>项目傻瓜式教程分析</h2><blockquote><p>GitHub地址：<a href="https://github.com/panyongkang/gitRepository/tree/master/EStore-master" target="_blank" rel="noopener">https://github.com/panyongkang/gitRepository/tree/master/EStore-master</a></p></blockquote><h4 id="使用泛型的优点"><a href="#使用泛型的优点" class="headerlink" title="使用泛型的优点"></a>使用泛型的优点</h4><p>在编译的时候检查类型安全，并且所有的强制转换都是自动和隐式的，提高代码重用率</p><p>问题：确认支付时，不能返回操作成功页面<br>报错：MySql Lock wait timeout exceeded该如何处理？<br> <img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/Hexo_post_1.png"  alt></p><p>解决方案：  </p><blockquote><p>参考：<a href="https://ningyu1.github.io/site/post/75-mysql-lock-wait-timeout-exceeded/" target="_blank" rel="noopener">https://ningyu1.github.io/site/post/75-mysql-lock-wait-timeout-exceeded/</a></p></blockquote><h4 id="首页header模块"><a href="#首页header模块" class="headerlink" title="首页header模块"></a>首页header模块</h4><p>/commons/header.jsp部分<br>如图展示：<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/Hexo_post_2.png"  alt></p><h5 id="点击”购物车”链接"><a href="#点击”购物车”链接" class="headerlink" title="点击”购物车”链接"></a>点击”购物车”链接</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;li role&#x3D;&quot;presentation&quot; &gt;</span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;forwardPage&amp;page&#x3D;cart&amp;pageNo&#x3D;$&#123;computerpage.pageNo &#125;&quot;&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;glyphicon glyphicon-shopping-cart&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;span&gt;&amp;nbsp;购物车&amp;nbsp;</span><br><span class="line">&lt;span class&#x3D;&quot;badge&quot;&gt;$&#123;sessionScope.ShoppingCart.computerNumber &#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br></pre></td></tr></table></figure><p>跳转forwardPage()方法：</p><p>ComputerServlet.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;跳转页面</span><br><span class="line">protected void forwardPage(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String page &#x3D; request.getParameter(&quot;page&quot;);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;&quot; + page + &quot;.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先在page=cart的cart.jsp页面判断购物车是否为空：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:choose&gt;</span><br><span class="line"></span><br><span class="line">##如果商品不为空，则显示商品信息</span><br><span class="line">&lt;c:when test&#x3D;&quot;$&#123; !empty sessionScope.ShoppingCart.computers &#125;&quot;&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;alert alert-success tip-success&quot; id&#x3D;&quot;computerNumber&quot;&gt;您的购物车中共有 &lt;b&gt;$&#123;sessionScope.ShoppingCart.computerNumber &#125; &lt;&#x2F;b&gt;件商品</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;close&quot; data-dismiss&#x3D;&quot;alert&quot; aria-label&#x3D;&quot;Close&quot;&gt;&lt;span aria-hidden&#x3D;&quot;true&quot;&gt;×&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;table class&#x3D;&quot;table table-striped&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-6&quot;&gt;商品名&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;数量&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;价格&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;操作&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;c:forEach items &#x3D; &quot;$&#123;sessionScope.ShoppingCart.items &#125;&quot; var &#x3D; &quot;item&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-6 &quot;&gt;</span><br><span class="line">&lt;img alt&#x3D;&quot;$&#123;item.computer.id &#125;&quot; src&#x3D;&quot;$&#123;item.computer.url &#125;&quot;&#x2F; style&#x3D;&quot;width:180px;height:180px;&quot;&gt;</span><br><span class="line">$&#123;item.computer.brand &#125; &amp;nbsp; $&#123;item.computer.model &#125; </span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 cartItem text-center&quot; style&#x3D;&quot;height:100px;line-height: 200px;&quot;&gt;</span><br><span class="line">&lt;input class&#x3D;&quot;cartItemNum&quot; step&#x3D;&quot;$&#123;item.quantity &#125;&quot; type&#x3D;&quot;text&quot; size&#x3D;&quot;1&quot; name&#x3D;&quot;$&#123;item.computer.id &#125;&quot; value&#x3D;&quot;$&#123;item.quantity &#125;&quot; style&#x3D;&quot;width:50px;height:30px;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;￥ &lt;b&gt;$&#123;item.computer.price &#125;&lt;&#x2F;b&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;btn btn-danger delete&quot; href&#x3D;&quot;computerServlet?method&#x3D;remove&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&amp;id&#x3D;$&#123;item.computer.id &#125;&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:forEach&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;totalMoney&quot; style&#x3D;&quot;font-weight:bold;&quot;&gt;总金额：￥    $&#123;sessionScope.ShoppingCart.totalMoney &#125;&lt;&#x2F;span&gt; </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-6 col-md-8&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-12 col-md-4 text-right&quot; style&#x3D;&quot;padding-left:30px;&quot;&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;getComputers&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&quot; class&#x3D;&quot;btn btn-default&quot; role&#x3D;&quot;button&quot;&gt;继续购物&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;clear&quot; class&#x3D;&quot;btn btn-danger&quot; role&#x3D;&quot;button&quot;&gt;清空购物车&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;forwardPage&amp;page&#x3D;cash&quot; class&#x3D;&quot;btn btn-primary&quot; role&#x3D;&quot;button&quot;&gt;结账&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:when&gt;</span><br><span class="line">   ##如果商品为空，则跳转到空页面</span><br><span class="line">&lt;c:otherwise&gt;</span><br><span class="line">&lt;jsp:forward page&#x3D;&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;emptycart.jsp&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;c:otherwise&gt;</span><br><span class="line">&lt;&#x2F;c:choose&gt;</span><br></pre></td></tr></table></figure><h5 id="在首页中点击“加入购物车”按钮"><a href="#在首页中点击“加入购物车”按钮" class="headerlink" title="在首页中点击“加入购物车”按钮"></a>在首页中点击“加入购物车”按钮</h5><p>/Estore/WebContent/WEB-INF/pages/computers.jsp代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;addToCart&amp;pageNo&#x3D;$&#123;computerpage.pageNo &#125;&amp;id&#x3D;$&#123;computer.id&#125;&amp;model&#x3D;$&#123;computer.model&#125;&amp;brand&#x3D;$&#123;computer.brand&#125;&quot; class&#x3D;&quot;btn btn-primary addToCart&quot; role&#x3D;&quot;button&quot;&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;glyphicon glyphicon-shopping-cart&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line"> 加入购物车&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>加入购物车后弹出的提示框：<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_4.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;container tips&quot;&gt;</span><br><span class="line">&lt;c:if test&#x3D;&quot;$&#123;param.model !&#x3D; null&#125;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;alert alert-success tip-success&quot;&gt; </span><br><span class="line">   &lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;close&quot; data-dismiss&#x3D;&quot;alert&quot; aria-label&#x3D;&quot;Close&quot;&gt;&lt;span aria-hidden&#x3D;&quot;true&quot;&gt;&amp;times;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;</span><br><span class="line">   &lt;strong&gt;成功！&lt;&#x2F;strong&gt;您已经将 &lt;b&gt;$&#123;param.brand &#125; $&#123;param.model&#125; &lt;&#x2F;b&gt;加入到购物车中!</span><br><span class="line">   &lt;b&gt;&lt;a href&#x3D;&quot;computerServlet?method&#x3D;forwardPage&amp;page&#x3D;cart&amp;pageNo&#x3D;$&#123;computerpage.pageNo &#125;&quot;&gt;立即查看购物车&lt;&#x2F;a&gt;&lt;&#x2F;b&gt;</span><br><span class="line">  &lt;&#x2F;div&gt; </span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:if&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>ComputerServlet.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;添加到购物车</span><br><span class="line">protected void addToCart(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String idStr &#x3D;request.getParameter(“id”);</span><br><span class="line">Int id&#x3D;-1;</span><br><span class="line">Boolean flag&#x3D;false;</span><br><span class="line">try &#123;</span><br><span class="line">id &#x3D; Integer.parseInt(idStr);</span><br><span class="line">&#125; catch (Exception e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">if(id &gt; 0)&#123;</span><br><span class="line">&#x2F;&#x2F;获取购物车对象</span><br><span class="line">ShoppingCart sc &#x3D; EStoreWebUtils.getShoppingCart(request);</span><br><span class="line">&#x2F;&#x2F;调用 ComputerService 的 addToCart() 方法把商品放到购物车中</span><br><span class="line">Flag&#x3D;computerService.addToCart(id,sc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">If(flag)&#123;</span><br><span class="line">&#x2F;&#x2F;添加成功，直接调用getComputers()方法，返回原来页面</span><br><span class="line">GetComputers(request,response);</span><br><span class="line">Return;</span><br><span class="line">&#125;</span><br><span class="line">Response.sendRedirect(request.getContextPath() + &quot;&#x2F;error-1.jsp&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>EStoreWebUtils.java代码：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;获取购物车对象</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 获取购物车对象: 从 session 中获取, 若 session 中没有改对象.</span><br><span class="line"> * 则创建一个新的购物车对象, 放入到 session 中.</span><br><span class="line"> * 若有, 则直接返回. </span><br><span class="line"> * @param request</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public static ShoppingCart getShoppingCart(HttpServletRequest request)&#123;</span><br><span class="line">HttpSession session&#x3D;request.getSession();</span><br><span class="line">ShoppingCart sc&#x3D;(ShoppingCart) session.getAttribute(“ShoppingCart”);</span><br><span class="line">If(sc&#x3D;&#x3D;null)&#123;</span><br><span class="line">Sc&#x3D;new ShoppingCart();</span><br><span class="line">Session.setAttribute(“ShoppingCart”,sc);</span><br><span class="line">&#125;</span><br><span class="line">Return sc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>//调用 ComputerService 的 addToCart() 方法把商品放到购物车中<br>ComputerService.java:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 把商品加入购物车</span><br><span class="line"> * @param id</span><br><span class="line"> * @param sc</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public boolean addToCart(int id, ShoppingCart sc) &#123;</span><br><span class="line">&#x2F;&#x2F; 一、根据id获取computer对象</span><br><span class="line">Computer computer &#x3D; computerDAO.getComputer(id);</span><br><span class="line">&#x2F;&#x2F;判断是否存在</span><br><span class="line">if (computer !&#x3D; null) &#123;</span><br><span class="line">&#x2F;&#x2F;二、存在就执行方法将商品加入购物车</span><br><span class="line">sc.addComputer(computer);</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">return false;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>步骤一涉及的代码：<br>ComputerDAO.java接口：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 根据 id 获取指定 Computer 对象</span><br><span class="line"> * @param id</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public abstract Computer getComputer(int id);</span><br></pre></td></tr></table></figure><p>ComputerDAOImpl.java实现类，继承BaseDAO类，实现ComputerDAO接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public Computer getComputer(int id) &#123;</span><br><span class="line">&#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">String sql &#x3D; &quot;SELECT id,brand,model,price,publishingDate,&quot;+</span><br><span class="line">&quot;salesAmount,storeNumber,Remark,Url FROM mycomputers WHERE id &#x3D; ?&quot;;</span><br><span class="line"></span><br><span class="line">return query(sql, id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BaseDAO类又实现dao接口的query()方法：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public T query(String sql, Object... args) &#123;</span><br><span class="line">Connection connection &#x3D; null;</span><br><span class="line">try &#123;</span><br><span class="line">&#x2F;&#x2F;connection &#x3D; ConnectionContext.getInstance().get();</span><br><span class="line">connection &#x3D; JDBCUtils.getConnection();</span><br><span class="line">return queryRunner.query(connection, sql, new BeanHandler&lt;&gt;(clazz), args);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;finally&#123;</span><br><span class="line">JDBCUtils.release(connection);</span><br><span class="line">&#125;</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dao接口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 执行单条记录的查询操作, 返回与记录对应的类的一个对象</span><br><span class="line"> * @param sql: 待执行的 SQL 语句</span><br><span class="line"> * @param args: 填充占位符的可变参数</span><br><span class="line"> * @return: 与记录对应的类的一个对象</span><br><span class="line"> *&#x2F;</span><br><span class="line">T query(String sql, Object ... args);</span><br></pre></td></tr></table></figure><p>步骤二涉及的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ShoppingCart.java:</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 向购物车中添加一件商品</span><br><span class="line"> * @param computer</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void addComputer(Computer computer)&#123;</span><br><span class="line">&#x2F;&#x2F;1. 检查购物车中有没有该商品, 若有, 则使其数量 +1, 若没有, </span><br><span class="line">&#x2F;&#x2F;新创建其对应的 ShoppingCartItem, 并把其加入到Map的对象 computers 中</span><br><span class="line">ShoppingCartItem sci&#x3D;computers.get(computer.getId());</span><br><span class="line">If(sci&#x3D;&#x3D;null)&#123;</span><br><span class="line">&#x2F;&#x2F;若没有，新创建其对应的 ShoppingCartItem,</span><br><span class="line"> 并把其加入到Map的对象 computers 中</span><br><span class="line">Sci&#x3D;new ShoppingCartItem(computer);</span><br><span class="line">Computers.put(computer.getId(),sci);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">&#x2F;&#x2F;若有, 则使其数量 +1,</span><br><span class="line">Sci.increment();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ShoppingCartItem.java:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">private int quantity;&#x2F;&#x2F;数量</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 使商品数量 + 1</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void increment()&#123;</span><br><span class="line">quantity++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="点击“我的账户”"><a href="#点击“我的账户”" class="headerlink" title="点击“我的账户”"></a>点击“我的账户”</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;a href&#x3D;&quot;&#123;pageContext.request.contextPath&#125;&#x2F;computerServlet?method&#x3D;getMyphone&amp;pageNo&#x3D;1&amp;id&#x3D;1&quot;&gt;我的账号&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br></pre></td></tr></table></figure><p>如图所示：<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_3.gif"  alt></p><p>/Estore/WebContent/WEB-INF/pages/myphone.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@page import&#x3D;&quot;org.apache.jasper.tagplugins.jstl.core.Param&quot;%&gt;</span><br><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot; import&#x3D;&quot;java.util.*&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String jsUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;js&#x2F;&quot;;</span><br><span class="line">String cssUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;css&#x2F;&quot;;</span><br><span class="line">String imgUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;img&#x2F;&quot;;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;我的账号 &lt;&#x2F;title&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;index.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;jquery-3.2.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;queryCondition.jsp&quot; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;header.jsp&quot;%&gt;</span><br><span class="line"></span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;thumbnail&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;img&#x2F;tx.jpg&quot; style&#x3D;&quot;width:200px;height:200px;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;caption&quot;&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;span&gt;用户名：$&#123;user.username&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;span&gt;密码：$&#123;user.password&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;span&gt;用户账号: $&#123;user.accountId&#125;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;span&gt;当前时间:&lt;%&#x3D;new Date().toLocaleString() %&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;span&gt;账号备注: 保密&lt;&#x2F;span&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;a class&#x3D;&quot;btn btn-primary btn-ms&quot; href&#x3D;&quot;computerServlet?method&#x3D;getComputers&quot; role&#x3D;&quot;button&quot;&gt;返回&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;$&#123;pageContext.request.contextPath&#125;&#x2F;userServlet?method&#x3D;quitUser&quot; class&#x3D;&quot;btn btn-primary btn-ms&quot; role&#x3D;&quot;button&quot;&gt; 退出&lt;&#x2F;a&gt; </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;center&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;footer.jsp&quot;%&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/servlet/ComputerServlet.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;我的账号</span><br><span class="line">protected void getMyphone(HttpServletRequest request,HttpServletResponse response) throws IOException, ServletException &#123;</span><br><span class="line">String username&#x3D;request.getParameter(&quot;username&quot;);</span><br><span class="line">String idStr &#x3D; request.getParameter(&quot;id&quot;);</span><br><span class="line">int id &#x3D; -1;</span><br><span class="line">User user&#x3D;null;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">id &#x3D; Integer.parseInt(idStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line">if (id &gt; 0) &#123;</span><br><span class="line">user&#x3D;userService.getUserByUserName(username);</span><br><span class="line">&#125;</span><br><span class="line">request.setAttribute(&quot;user&quot;, user);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;myphone.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/service/UserService.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 通过用户名获取User对象</span><br><span class="line"> * @param username</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public User getUserByUserName(String username)&#123;</span><br><span class="line">return userDAO.getUser(username);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/dao/UserDAO.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 根据用户名获取 User 对象</span><br><span class="line"> * @param username</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public abstract User getUser(String username);</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/dao/impl/UserDAOImpl.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public User getUser(String username) &#123;</span><br><span class="line">String sql &#x3D; &quot;SELECT userId, username, accountId &quot; +</span><br><span class="line">&quot;FROM userinfo WHERE username &#x3D; ?&quot;;</span><br><span class="line">return query(sql, username); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/dao/impl/BaseDAO.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public T query(String sql, Object... args) &#123;</span><br><span class="line"></span><br><span class="line">Connection connection &#x3D; null;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">&#x2F;&#x2F;connection &#x3D; ConnectionContext.getInstance().get();</span><br><span class="line">connection &#x3D; JDBCUtils.getConnection();</span><br><span class="line">return queryRunner.query(connection, sql, new BeanHandler&lt;&gt;(clazz), args);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;finally&#123;</span><br><span class="line">JDBCUtils.release(connection);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/db/JDBCUtils.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;获取数据库连接</span><br><span class="line">public static Connection getConnection()&#123;  </span><br><span class="line">try &#123;</span><br><span class="line">return dataSource.getConnection();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">throw new DBException(&quot;数据库连接错误!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;关闭数据库连接</span><br><span class="line">public static void release(Connection connection) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">if(connection !&#x3D; null)&#123;</span><br><span class="line">connection.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">throw new DBException(&quot;数据库连接错误!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/dao/Dao.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 执行单条记录的查询操作, 返回与记录对应的类的一个对象</span><br><span class="line"> * @param sql: 待执行的 SQL 语句</span><br><span class="line"> * @param args: 填充占位符的可变参数</span><br><span class="line"> * @return: 与记录对应的类的一个对象</span><br><span class="line"> *&#x2F;</span><br><span class="line">T query(String sql, Object ... args);</span><br></pre></td></tr></table></figure><h5 id="返回和退出"><a href="#返回和退出" class="headerlink" title="返回和退出"></a>返回和退出</h5><p>//返回的方法<br>/Estore/src/com/xmut/estore/servlet/ComputerServlet.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">protected void getComputers(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String pageNoStr &#x3D; request.getParameter(&quot;pageNo&quot;);</span><br><span class="line">String minPriceStr &#x3D; request.getParameter(&quot;minPrice&quot;);&#x2F;&#x2F;最低价格</span><br><span class="line">String maxPriceStr &#x3D; request.getParameter(&quot;maxPrice&quot;);&#x2F;&#x2F;最高价格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int pageNo &#x3D; 1;</span><br><span class="line">int minPrice &#x3D; 0;</span><br><span class="line">int maxPrice &#x3D; Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">pageNo &#x3D; Integer.parseInt(pageNoStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">minPrice &#x3D; Integer.parseInt(minPriceStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">maxPrice &#x3D; Integer.parseInt(maxPriceStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">CriteriaComputer criteriaComputer &#x3D; new CriteriaComputer(minPrice, maxPrice, pageNo);</span><br><span class="line">Page&lt;Computer&gt; page &#x3D; computerService.getPage(criteriaComputer);</span><br><span class="line"></span><br><span class="line">request.setAttribute(&quot;computerpage&quot;, page);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;computers.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>//退出的方法<br>/Estore/src/com/xmut/estore/servlet/UserServlet.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &#x2F;**</span><br><span class="line">   * 用户退出</span><br><span class="line">   * @param request</span><br><span class="line">   * @param response</span><br><span class="line">   * @throws IOException</span><br><span class="line">   *&#x2F;</span><br><span class="line">public void quitUser(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">&#x2F;&#x2F; 退出当前登陆</span><br><span class="line">request.getSession().invalidate();</span><br><span class="line">response.sendRedirect(request.getContextPath()+&quot;&#x2F;login.jsp&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="首页body模块"><a href="#首页body模块" class="headerlink" title="首页body模块"></a>首页body模块</h4><p>/WEB-INF/pages/computers.jsp部分</p><h5 id="价格查询"><a href="#价格查询" class="headerlink" title="价格查询"></a>价格查询</h5><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_5.gif"  alt><br>/Estore/WebContent/WEB-INF/pages/computers.jsp代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;container searchBox&quot;&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;computerServlet?method&#x3D;getComputers&quot; method&#x3D;&quot;post&quot; class&#x3D;&quot;form-inline&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;div &gt;</span><br><span class="line">    &lt;label class&#x3D;&quot;sr-only&quot; for&#x3D;&quot;exampleInputAmount&quot;&gt;Amount (in dollars)&lt;&#x2F;label&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;input-group&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;input-group-addon&quot;&gt;从&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control col-xs-1&quot; name&#x3D;&quot;minPrice&quot; placeholder&#x3D;&quot;最低价格&quot;&#x2F;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;input-group-addon&quot;&gt;到&lt;&#x2F;div&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control col-xs-1&quot; name&#x3D;&quot;maxPrice&quot; placeholder&#x3D;&quot;最高价格&quot;&#x2F;&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;button type&#x3D;&quot;submit&quot; class&#x3D;&quot;btn btn-primary searchBtn &quot;&gt;&lt;span class&#x3D;&quot;glyphicon glyphicon-search&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;span&gt; 查询&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/servlet/ComputerServlet.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">protected void getComputers(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String pageNoStr &#x3D; request.getParameter(&quot;pageNo&quot;);</span><br><span class="line">String minPriceStr &#x3D; request.getParameter(&quot;minPrice&quot;);&#x2F;&#x2F;最低价格</span><br><span class="line">String maxPriceStr &#x3D; request.getParameter(&quot;maxPrice&quot;);&#x2F;&#x2F;最高价格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int pageNo &#x3D; 1;</span><br><span class="line">int minPrice &#x3D; 0;</span><br><span class="line">int maxPrice &#x3D; Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">pageNo &#x3D; Integer.parseInt(pageNoStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">minPrice &#x3D; Integer.parseInt(minPriceStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">maxPrice &#x3D; Integer.parseInt(maxPriceStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">CriteriaComputer criteriaComputer &#x3D; new CriteriaComputer(minPrice, maxPrice, pageNo);</span><br><span class="line">Page&lt;Computer&gt; page &#x3D; computerService.getPage(criteriaComputer);</span><br><span class="line"></span><br><span class="line">request.setAttribute(&quot;computerpage&quot;, page);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;computers.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/web/CriteriaComputer.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">package com.xmut.estore.web;</span><br><span class="line"></span><br><span class="line">public class CriteriaComputer &#123;</span><br><span class="line">&#x2F;&#x2F;封装查询条件的CriteriaComputer类</span><br><span class="line">private float minPrice &#x3D; 0;</span><br><span class="line">private float maxPrice &#x3D; Integer.MAX_VALUE;</span><br><span class="line">private int pageNo;</span><br><span class="line"></span><br><span class="line">public CriteriaComputer(float minPrice, float maxPrice, int pageNo) &#123;</span><br><span class="line">super();</span><br><span class="line">this.minPrice &#x3D; minPrice;</span><br><span class="line">this.maxPrice &#x3D; maxPrice;</span><br><span class="line">this.pageNo &#x3D; pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public float getMinPrice() &#123;</span><br><span class="line">return minPrice;</span><br><span class="line">&#125;</span><br><span class="line">public void setMinPrice(float minPrice) &#123;</span><br><span class="line">this.minPrice &#x3D; minPrice;</span><br><span class="line">&#125;</span><br><span class="line">public float getMaxPrice() &#123;</span><br><span class="line">return maxPrice;</span><br><span class="line">&#125;</span><br><span class="line">public void setMaxPrice(float maxPrice) &#123;</span><br><span class="line">this.maxPrice &#x3D; maxPrice;</span><br><span class="line">&#125;</span><br><span class="line">public int getPageNo() &#123;</span><br><span class="line">return pageNo;</span><br><span class="line">&#125;</span><br><span class="line">public void setPageNo(int pageNo) &#123;</span><br><span class="line">this.pageNo &#x3D; pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/service/ComputerService.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public Page&lt;Computer&gt; getPage(CriteriaComputer cc)&#123;</span><br><span class="line">return computerDAO.getPage(cc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/dao/ComputerDAO.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 根据传入的 CriteriaComputer 对象返回对应的 Page 对象</span><br><span class="line"> * @param cc</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public abstract Page&lt;Computer&gt; getPage(CriteriaComputer cc);</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/dao/impl/ComputerDAOImpl.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;将请求条件封装成CriteriaComputer</span><br><span class="line">@Override</span><br><span class="line">public Page&lt;Computer&gt; getPage(CriteriaComputer cc) &#123;</span><br><span class="line">&#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">Page&lt;Computer&gt; page &#x3D; new Page&lt;&gt;(cc.getPageNo());</span><br><span class="line"></span><br><span class="line">page.setTotalItemNumber(getTotalComputerNumber(cc));</span><br><span class="line">&#x2F;&#x2F;校验pageNo的合法性</span><br><span class="line">cc.setPageNo(page.getPageNo());</span><br><span class="line">page.setList(getPageList(cc, 6));</span><br><span class="line">return page;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>/Estore/src/com/xmut/estore/web/Page.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">public class Page&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;当前第几页</span><br><span class="line">private int pageNo;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;当前页的 List</span><br><span class="line">private List&lt;T&gt; list;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;每页显示多少条记录</span><br><span class="line">private int pageSize &#x3D; 6;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;共有多少条记录</span><br><span class="line">private long totalItemNumber;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;构造器中需要对 pageNo 进行初始化</span><br><span class="line">public Page(int pageNo) &#123;</span><br><span class="line">super();</span><br><span class="line">this.pageNo &#x3D; pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;校验页数是否合法</span><br><span class="line">public int getPageNo() &#123;</span><br><span class="line">if(pageNo &lt; 0)</span><br><span class="line">pageNo &#x3D; 1;</span><br><span class="line"></span><br><span class="line">if(pageNo &gt; getTotalPageNumber())&#123;</span><br><span class="line">pageNo &#x3D; getTotalPageNumber();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getPageSize() &#123;</span><br><span class="line">return pageSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setList(List&lt;T&gt; list) &#123;</span><br><span class="line">this.list &#x3D; list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public List&lt;T&gt; getList() &#123;</span><br><span class="line">return list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取总页数</span><br><span class="line">public int getTotalPageNumber()&#123;</span><br><span class="line"></span><br><span class="line">int totalPageNumber &#x3D; (int)totalItemNumber &#x2F; pageSize;</span><br><span class="line"></span><br><span class="line">if(totalItemNumber % pageSize !&#x3D; 0)&#123;</span><br><span class="line">totalPageNumber++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return totalPageNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setTotalItemNumber(long totalItemNumber) &#123;</span><br><span class="line">this.totalItemNumber &#x3D; totalItemNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean isHasNext()&#123;</span><br><span class="line">if(getPageNo() &lt; getTotalPageNumber())&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean isHasPrev()&#123;</span><br><span class="line">if(getPageNo() &gt; 1)&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getPrevPage()&#123;</span><br><span class="line">if(isHasPrev())&#123;</span><br><span class="line">return getPageNo() - 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return getPageNo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getNextPage()&#123;</span><br><span class="line">if(isHasNext())&#123;</span><br><span class="line">return getPageNo() + 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return getPageNo();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="首页商品展示"><a href="#首页商品展示" class="headerlink" title="首页商品展示"></a>首页商品展示</h5><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_7.gif"  alt></p><h5 id="分页模块展示"><a href="#分页模块展示" class="headerlink" title="分页模块展示"></a>分页模块展示</h5><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_8.gif"  alt></p><h4 id="首页footer模块"><a href="#首页footer模块" class="headerlink" title="首页footer模块"></a>首页footer模块</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_9.gif"  alt><br>/Estore/WebContent/commons/footer.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;hr width&#x3D;&quot;80%&quot; &gt;</span><br><span class="line">&lt;div class&#x3D;&quot;navbar navbar-default navbar-static-top&quot; &gt;</span><br><span class="line">&lt;footer class&#x3D;&quot;footer&quot; style&#x3D;&quot;margin-top:10px;&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">      &lt;div id&#x3D;&quot;back-to-top&quot; href&#x3D;&quot;#&quot;&gt;</span><br><span class="line">              &lt;span class&#x3D;&quot;glyphicon glyphicon-triangle-top&quot;&gt;&lt;&#x2F;span&gt;&amp;nbsp;回到顶部</span><br><span class="line">       &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;p class&#x3D;&quot;text-muted&quot;&gt;&amp;copy; 2019 百脑 科技 有限责任公司. </span><br><span class="line">        </span><br><span class="line">          &lt;&#x2F;p&gt;</span><br><span class="line">       </span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;footer&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h4 id="购物车模块"><a href="#购物车模块" class="headerlink" title="购物车模块"></a>购物车模块</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_6.gif"  alt></p><h5 id="模块分析"><a href="#模块分析" class="headerlink" title="模块分析"></a>模块分析</h5><p>进入购物车后，首先判断商品是否为空，不为空则显示商品详情页，如果为空则跳转到空页面，此时就使用到c：标签判断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;c&quot; uri&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;jsp&#x2F;jstl&#x2F;core&quot;  %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String jsUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;js&#x2F;&quot;;</span><br><span class="line">String cssUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;css&#x2F;&quot;;</span><br><span class="line">String imgUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;img&#x2F;&quot;;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;购物车&lt;&#x2F;title&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;index.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;cart.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;jquery-3.2.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;cartValidate.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;queryCondition.jsp&quot; %&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;header.jsp&quot;%&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:when test&#x3D;&quot;$&#123; !empty sessionScope.ShoppingCart.computers &#125;&quot;&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;alert alert-success tip-success&quot; id&#x3D;&quot;computerNumber&quot;&gt;您的购物车中共有 &lt;b&gt;$&#123;sessionScope.ShoppingCart.computerNumber &#125; &lt;&#x2F;b&gt;件商品&lt;&#x2F;div&gt;</span><br><span class="line">&lt;table class&#x3D;&quot;table table-striped&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-6&quot;&gt;商品名&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;数量&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;价格&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;操作&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;c:forEach items &#x3D; &quot;$&#123;sessionScope.ShoppingCart.items &#125;&quot; var &#x3D; &quot;item&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-6 &quot;&gt;</span><br><span class="line">&lt;img alt&#x3D;&quot;$&#123;item.computer.id &#125;&quot; src&#x3D;&quot;$&#123;item.computer.url &#125;&quot;&#x2F; style&#x3D;&quot;width:180px;height:180px;&quot;&gt;</span><br><span class="line">$&#123;item.computer.brand &#125; &amp;nbsp; $&#123;item.computer.model &#125; </span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 cartItem text-center&quot; style&#x3D;&quot;height:100px;line-height: 200px;&quot;&gt;</span><br><span class="line">&lt;input class&#x3D;&quot;cartItemNum&quot; step&#x3D;&quot;$&#123;item.quantity &#125;&quot; type&#x3D;&quot;text&quot; size&#x3D;&quot;1&quot; name&#x3D;&quot;$&#123;item.computer.id &#125;&quot; value&#x3D;&quot;$&#123;item.quantity &#125;&quot; style&#x3D;&quot;width:50px;height:30px;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;￥ &lt;b&gt;$&#123;item.computer.price &#125;&lt;&#x2F;b&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;btn btn-danger delete&quot; href&#x3D;&quot;computerServlet?method&#x3D;remove&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&amp;id&#x3D;$&#123;item.computer.id &#125;&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:forEach&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;totalMoney&quot; style&#x3D;&quot;font-weight:bold;&quot;&gt;总金额：￥    $&#123;sessionScope.ShoppingCart.totalMoney &#125;&lt;&#x2F;span&gt; </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-6 col-md-8&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-12 col-md-4 text-right&quot; style&#x3D;&quot;padding-left:30px;&quot;&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;getComputers&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&quot; class&#x3D;&quot;btn btn-default&quot; role&#x3D;&quot;button&quot;&gt;继续购物&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;clear&quot; class&#x3D;&quot;btn btn-danger&quot; role&#x3D;&quot;button&quot;&gt;清空购物车&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a href&#x3D;&quot;computerServlet?method&#x3D;forwardPage&amp;page&#x3D;cash&quot; class&#x3D;&quot;btn btn-primary&quot; role&#x3D;&quot;button&quot;&gt;结账&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:when&gt;</span><br><span class="line">&lt;c:otherwise&gt;</span><br><span class="line">&lt;jsp:forward page&#x3D;&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;emptycart.jsp&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;c:otherwise&gt;</span><br><span class="line">&lt;&#x2F;c:choose&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;footer.jsp&quot;%&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h5 id="商品详情"><a href="#商品详情" class="headerlink" title="商品详情"></a>商品详情</h5><p>消息提示框：<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_10.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;WEB-INF&#x2F;pages&#x2F;cart.jsp</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;alert alert-success tip-success&quot; id&#x3D;&quot;computerNumber&quot;&gt;</span><br><span class="line">您的购物车中共有 &lt;b&gt;$&#123;sessionScope.ShoppingCart.computerNumber &#125; &lt;&#x2F;b&gt;件商品</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;close&quot; data-dismiss&#x3D;&quot;alert&quot; aria-label&#x3D;&quot;Close&quot;&gt;</span><br><span class="line">&lt;span aria-hidden&#x3D;&quot;true&quot;&gt;×&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>循环商品表格：<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_11.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;WEB-INF&#x2F;pages&#x2F;cart.jsp</span><br><span class="line"></span><br><span class="line">&lt;table class&#x3D;&quot;table table-striped&quot;&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-6&quot;&gt;商品名&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;数量&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;价格&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;操作&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;c:forEach items &#x3D; &quot;$&#123;sessionScope.ShoppingCart.items &#125;&quot; var &#x3D; &quot;item&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-6 &quot;&gt;</span><br><span class="line">&lt;img alt&#x3D;&quot;$&#123;item.computer.id &#125;&quot; src&#x3D;&quot;$&#123;item.computer.url &#125;&quot; style&#x3D;&quot;width:180px;height:180px;&quot;&gt;</span><br><span class="line">$&#123;item.computer.brand &#125; &amp;nbsp; $&#123;item.computer.model &#125; </span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 cartItem text-center&quot; style&#x3D;&quot;height:100px;line-height: 200px;&quot;&gt;</span><br><span class="line">&lt;input class&#x3D;&quot;cartItemNum&quot; step&#x3D;&quot;$&#123;item.quantity &#125;&quot; type&#x3D;&quot;text&quot; size&#x3D;&quot;1&quot; name&#x3D;&quot;$&#123;item.computer.id &#125;&quot; value&#x3D;&quot;$&#123;item.quantity &#125;&quot; style&#x3D;&quot;width:50px;height:30px;&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;￥ &lt;b&gt;$&#123;item.computer.price &#125;&lt;&#x2F;b&gt;&lt;&#x2F;td&gt;</span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;btn btn-danger delete&quot; href&#x3D;&quot;computerServlet?method&#x3D;remove&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&amp;id&#x3D;$&#123;item.computer.id &#125;&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:forEach&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line">##修改数量使件数和总金额发生变化</span><br><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;public&#x2F;js&#x2F;cartValidate.js</span><br><span class="line"></span><br><span class="line">$(function()&#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;ajax 修改单个商品的数量:</span><br><span class="line">&#x2F;&#x2F;1. 获取页面中所有的 text, 并为其添加 onchange 响应函数. 弹出确认对话框: 确定要修改吗? </span><br><span class="line">$(&quot;:text&quot;).change(function()&#123;</span><br><span class="line">var quantityVal &#x3D; $.trim(this.value);</span><br><span class="line"></span><br><span class="line">var flag &#x3D; false;</span><br><span class="line"></span><br><span class="line">var reg &#x3D; &#x2F;^\d+$&#x2F;g;</span><br><span class="line">var quantity &#x3D; -1;</span><br><span class="line">if(reg.test(quantityVal))&#123;</span><br><span class="line">quantity &#x3D; parseInt(quantityVal);</span><br><span class="line">if(quantity &gt;&#x3D; 0)&#123;</span><br><span class="line">flag &#x3D; true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(!flag)&#123;</span><br><span class="line">alert(&quot;输入的数量不合法!&quot;);</span><br><span class="line">$(this).val($(this).attr(&quot;step&quot;));</span><br><span class="line">return;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">var $tr &#x3D; $(this).parent().parent();</span><br><span class="line">var title &#x3D; $.trim($tr.find(&quot;td:first&quot;).text());</span><br><span class="line"></span><br><span class="line">if(quantity &#x3D;&#x3D; 0)&#123;</span><br><span class="line">var flag2 &#x3D; confirm(&quot;确定要删除&quot; + title + &quot;吗?&quot;);</span><br><span class="line">if(flag2)&#123;</span><br><span class="line">&#x2F;&#x2F;得到了 a 节点</span><br><span class="line">var $a &#x3D; $tr.find(&quot;td:last&quot;).find(&quot;a&quot;);</span><br><span class="line">&#x2F;&#x2F;执行 a 节点的 onclick 响应函数. </span><br><span class="line">$a[0].onclick();</span><br><span class="line"></span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var flag &#x3D; confirm(&quot;确定要修改&quot; + title + &quot;的数量吗?&quot;);</span><br><span class="line"></span><br><span class="line">if(!flag)&#123;</span><br><span class="line">$(this).val($(this).attr(&quot;class&quot;));</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;2. 请求地址为: computerServlet</span><br><span class="line">var url &#x3D; &quot;computerServlet&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;3. 请求参数为: method:updateItemQuantity, id:name属性值, quantity:val, time:new Date()</span><br><span class="line">var idVal &#x3D; $.trim(this.name);</span><br><span class="line">var args &#x3D; &#123;&quot;method&quot;:&quot;updateItemQuantity&quot;, &quot;id&quot;:idVal, &quot;quantity&quot;:quantityVal, &quot;time&quot;:new Date()&#125;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;4. 在 updateItemQuantity 方法中, 获取 quanity, id, 再获取购物车对象, 调用 service 的方法做修改</span><br><span class="line">&#x2F;&#x2F;5. 传回 JSON 数据: computerNumber:xx, totalMoney</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;6. 更新当前页面的 computerNumber 和 totalMoney</span><br><span class="line">$.post(url, args, function(data)&#123;</span><br><span class="line">var computerNumber &#x3D; data.computerNumber;</span><br><span class="line">var totalMoney &#x3D; data.totalMoney;</span><br><span class="line"></span><br><span class="line">$(&quot;#totalMoney&quot;).text(&quot;总金额：￥   &quot; + totalMoney);</span><br><span class="line">$(&quot;#computerNumber&quot;).text(&quot;您的购物车中共有&quot; + computerNumber + &quot;件商品&quot;);</span><br><span class="line">&#125;,&quot;JSON&quot;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>总金额：<br><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_12.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;WEB-INF&#x2F;pages&#x2F;cart.jsp</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;totalMoney&quot; style&#x3D;&quot;font-weight:bold;&quot;&gt;总金额：￥$&#123;sessionScope.ShoppingCart.totalMoney &#125;&lt;&#x2F;span&gt; </span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h5 id="“删除”按钮"><a href="#“删除”按钮" class="headerlink" title="“删除”按钮"></a>“删除”按钮</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;WEB-INF&#x2F;pages&#x2F;cart.jsp</span><br><span class="line"></span><br><span class="line">&lt;td class&#x3D;&quot;col-md-2 text-center&quot;&gt;</span><br><span class="line">&lt;a class&#x3D;&quot;btn btn-danger delete&quot; href&#x3D;&quot;computerServlet?method&#x3D;remove&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&amp;id&#x3D;$&#123;item.computer.id &#125;&quot;&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;public&#x2F;js&#x2F;cartValidate.js</span><br><span class="line"></span><br><span class="line">$(function()&#123;</span><br><span class="line">$(&quot;.delete&quot;).click(function()&#123;</span><br><span class="line"></span><br><span class="line">var $tr &#x3D; $(this).parent().parent();</span><br><span class="line">var title &#x3D; $.trim($tr.find(&quot;td:first&quot;).text());</span><br><span class="line">var flag &#x3D; confirm(&quot;确定要删除&quot; + title + &quot;吗?&quot;);</span><br><span class="line"></span><br><span class="line">if(flag)&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;servlet&#x2F;ComputerServlet.java</span><br><span class="line"></span><br><span class="line">protected void remove(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String idStr &#x3D; request.getParameter(&quot;id&quot;);</span><br><span class="line"></span><br><span class="line">int id &#x3D; -1;</span><br><span class="line">boolean flag &#x3D; false;</span><br><span class="line">try &#123;</span><br><span class="line">id &#x3D; Integer.parseInt(idStr);</span><br><span class="line">&#125; catch (Exception e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">ShoppingCart sc &#x3D; EStoreWebUtils.getShoppingCart(request);</span><br><span class="line">computerService.removeItemFromShoppingCart(sc, id);</span><br><span class="line"></span><br><span class="line">if(sc.isEmpty())&#123;</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;emptycart.jsp&quot;).forward(request, response);</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;cart.jsp&quot;).forward(request, response);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;web&#x2F;EStoreWebUtils.java</span><br><span class="line">package com.xmut.estore.web;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line">import com.xmut.estore.domain.ShoppingCart;</span><br><span class="line"></span><br><span class="line">public class EStoreWebUtils &#123;</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 获取购物车对象: 从 session 中获取, 若 session 中没有该对象.</span><br><span class="line"> * 则创建一个新的购物车对象, 放入到 session 中.</span><br><span class="line"> * 若有, 则直接返回. </span><br><span class="line"> * @param request</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public static ShoppingCart getShoppingCart(HttpServletRequest request)&#123;</span><br><span class="line">HttpSession session &#x3D; request.getSession();</span><br><span class="line"></span><br><span class="line">ShoppingCart sc &#x3D; (ShoppingCart) session.getAttribute(&quot;ShoppingCart&quot;);</span><br><span class="line">if(sc &#x3D;&#x3D; null)&#123;</span><br><span class="line">sc &#x3D; new ShoppingCart();</span><br><span class="line">session.setAttribute(&quot;ShoppingCart&quot;, sc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return sc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;service&#x2F;ComputerService.java</span><br><span class="line"></span><br><span class="line">public void removeItemFromShoppingCart(ShoppingCart sc, int id) &#123;</span><br><span class="line">sc.removeItem(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;domain&#x2F;ShoppingCart.java</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 移除指定的购物项</span><br><span class="line"> * @param id</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void removeItem(Integer id)&#123;</span><br><span class="line">computers.remove(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="继续购物"><a href="#继续购物" class="headerlink" title="继续购物"></a>继续购物</h5><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_13.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-6 col-md-8&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-12 col-md-4 text-right&quot; style&#x3D;&quot;padding-left:30px;&quot;&gt;&lt;a href&#x3D;&quot;computerServlet?method&#x3D;getComputers&amp;pageNo&#x3D;$&#123;param.pageNo &#125;&quot; class&#x3D;&quot;btn btn-default&quot; role&#x3D;&quot;button&quot;&gt;继续购物&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;servlet&#x2F;ComputerServlet.java</span><br><span class="line"></span><br><span class="line">protected void getComputers(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String pageNoStr &#x3D; request.getParameter(&quot;pageNo&quot;);</span><br><span class="line">String minPriceStr &#x3D; request.getParameter(&quot;minPrice&quot;);&#x2F;&#x2F;最低价格</span><br><span class="line">String maxPriceStr &#x3D; request.getParameter(&quot;maxPrice&quot;);&#x2F;&#x2F;最高价格</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int pageNo &#x3D; 1;</span><br><span class="line">int minPrice &#x3D; 0;</span><br><span class="line">int maxPrice &#x3D; Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">pageNo &#x3D; Integer.parseInt(pageNoStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">minPrice &#x3D; Integer.parseInt(minPriceStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">maxPrice &#x3D; Integer.parseInt(maxPriceStr);</span><br><span class="line">&#125; catch (NumberFormatException e) &#123;&#125;</span><br><span class="line"></span><br><span class="line">CriteriaComputer criteriaComputer &#x3D; new CriteriaComputer(minPrice, maxPrice, pageNo);</span><br><span class="line">Page&lt;Computer&gt; page &#x3D; computerService.getPage(criteriaComputer);</span><br><span class="line"></span><br><span class="line">request.setAttribute(&quot;computerpage&quot;, page);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;computers.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;web&#x2F;CriteriaComputer.java</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;封装查询条件的CriteriaComputer类</span><br><span class="line">private float minPrice &#x3D; 0;</span><br><span class="line">private float maxPrice &#x3D; Integer.MAX_VALUE;</span><br><span class="line">private int pageNo;</span><br><span class="line"></span><br><span class="line">public CriteriaComputer(float minPrice, float maxPrice, int pageNo) &#123;</span><br><span class="line">super();</span><br><span class="line">this.minPrice &#x3D; minPrice;</span><br><span class="line">this.maxPrice &#x3D; maxPrice;</span><br><span class="line">this.pageNo &#x3D; pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public float getMinPrice() &#123;</span><br><span class="line">return minPrice;</span><br><span class="line">&#125;</span><br><span class="line">public void setMinPrice(float minPrice) &#123;</span><br><span class="line">this.minPrice &#x3D; minPrice;</span><br><span class="line">&#125;</span><br><span class="line">public float getMaxPrice() &#123;</span><br><span class="line">return maxPrice;</span><br><span class="line">&#125;</span><br><span class="line">public void setMaxPrice(float maxPrice) &#123;</span><br><span class="line">this.maxPrice &#x3D; maxPrice;</span><br><span class="line">&#125;</span><br><span class="line">public int getPageNo() &#123;</span><br><span class="line">return pageNo;</span><br><span class="line">&#125;</span><br><span class="line">public void setPageNo(int pageNo) &#123;</span><br><span class="line">this.pageNo &#x3D; pageNo;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;service&#x2F;ComputerService.java</span><br><span class="line"></span><br><span class="line">public Page&lt;Computer&gt; getPage(CriteriaComputer cc)&#123;</span><br><span class="line">return computerDAO.getPage(cc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;dao&#x2F;ComputerDAO.java</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 根据传入的 CriteriaComputer 对象返回对应的 Page 对象</span><br><span class="line"> * @param cc</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public abstract Page&lt;Computer&gt; getPage(CriteriaComputer cc);</span><br><span class="line">    </span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;dao&#x2F;impl&#x2F;ComputerDAOImpl.java</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;将请求条件封装成CriteriaComputer</span><br><span class="line">@Override</span><br><span class="line">public Page&lt;Computer&gt; getPage(CriteriaComputer cc) &#123;</span><br><span class="line">&#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">Page&lt;Computer&gt; page &#x3D; new Page&lt;&gt;(cc.getPageNo());</span><br><span class="line"></span><br><span class="line">page.setTotalItemNumber(getTotalComputerNumber(cc));</span><br><span class="line">&#x2F;&#x2F;校验pageNo的合法性</span><br><span class="line">cc.setPageNo(page.getPageNo());</span><br><span class="line">page.setList(getPageList(cc, 6));</span><br><span class="line">return page;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;web&#x2F;Page.java</span><br><span class="line"></span><br><span class="line">package com.xmut.estore.web;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class Page&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;当前第几页</span><br><span class="line">private int pageNo;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;当前页的 List</span><br><span class="line">private List&lt;T&gt; list;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;每页显示多少条记录</span><br><span class="line">private int pageSize &#x3D; 6;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;共有多少条记录</span><br><span class="line">private long totalItemNumber;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;构造器中需要对 pageNo 进行初始化</span><br><span class="line">public Page(int pageNo) &#123;</span><br><span class="line">super();</span><br><span class="line">this.pageNo &#x3D; pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;校验页数是否合法</span><br><span class="line">public int getPageNo() &#123;</span><br><span class="line">if(pageNo &lt; 0)</span><br><span class="line">pageNo &#x3D; 1;</span><br><span class="line"></span><br><span class="line">if(pageNo &gt; getTotalPageNumber())&#123;</span><br><span class="line">pageNo &#x3D; getTotalPageNumber();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return pageNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getPageSize() &#123;</span><br><span class="line">return pageSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setList(List&lt;T&gt; list) &#123;</span><br><span class="line">this.list &#x3D; list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public List&lt;T&gt; getList() &#123;</span><br><span class="line">return list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;获取总页数</span><br><span class="line">public int getTotalPageNumber()&#123;</span><br><span class="line"></span><br><span class="line">int totalPageNumber &#x3D; (int)totalItemNumber &#x2F; pageSize;</span><br><span class="line"></span><br><span class="line">if(totalItemNumber % pageSize !&#x3D; 0)&#123;</span><br><span class="line">totalPageNumber++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return totalPageNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void setTotalItemNumber(long totalItemNumber) &#123;</span><br><span class="line">this.totalItemNumber &#x3D; totalItemNumber;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean isHasNext()&#123;</span><br><span class="line">if(getPageNo() &lt; getTotalPageNumber())&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public boolean isHasPrev()&#123;</span><br><span class="line">if(getPageNo() &gt; 1)&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getPrevPage()&#123;</span><br><span class="line">if(isHasPrev())&#123;</span><br><span class="line">return getPageNo() - 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return getPageNo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public int getNextPage()&#123;</span><br><span class="line">if(isHasNext())&#123;</span><br><span class="line">return getPageNo() + 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return getPageNo();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="清空购物车"><a href="#清空购物车" class="headerlink" title="清空购物车"></a>清空购物车</h5><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_13.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-6 col-md-8&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-12 col-md-4 text-right&quot; style&#x3D;&quot;padding-left:30px;&quot;&gt;&lt;a href&#x3D;&quot;computerServlet?method&#x3D;clear&quot; class&#x3D;&quot;btn btn-danger&quot; role&#x3D;&quot;button&quot;&gt;清空购物车&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;servlet&#x2F;ComputerServlet.java</span><br><span class="line"></span><br><span class="line">protected void clear(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line"></span><br><span class="line">ShoppingCart sCart &#x3D; EStoreWebUtils.getShoppingCart(request);</span><br><span class="line">computerService.clearShoppingCart(sCart);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;emptycart.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;service&#x2F;ComputerService.java</span><br><span class="line"></span><br><span class="line">public void clearShoppingCart(ShoppingCart sc) &#123;</span><br><span class="line">&#x2F;&#x2F; TODO Auto-generated method stub</span><br><span class="line">sc.clear();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;domain&#x2F;ShoppingCart.java</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * 清空购物车</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void clear()&#123;</span><br><span class="line">computers.clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="结账"><a href="#结账" class="headerlink" title="结账"></a>结账</h5><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_13.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-6 col-md-8&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-xs-12 col-md-4 text-right&quot; style&#x3D;&quot;padding-left:30px;&quot;&gt;&lt;a href&#x3D;&quot;computerServlet?method&#x3D;forwardPage&amp;page&#x3D;cash&quot; class&#x3D;&quot;btn btn-primary&quot; role&#x3D;&quot;button&quot;&gt;结账&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;Estore&#x2F;src&#x2F;com&#x2F;xmut&#x2F;estore&#x2F;servlet&#x2F;ComputerServlet.java</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;跳转到结账页面</span><br><span class="line">protected void forwardPage(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">String page &#x3D; request.getParameter(&quot;page&quot;);</span><br><span class="line">request.getRequestDispatcher(&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;&quot; + page + &quot;.jsp&quot;).forward(request, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结账页面"><a href="#结账页面" class="headerlink" title="结账页面"></a>结账页面</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/16/%E7%99%BE%E8%84%91%E7%A7%91%E6%8A%80%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/hexo_post_14.gif"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;Estore&#x2F;WebContent&#x2F;WEB-INF&#x2F;pages&#x2F;cash.jsp</span><br><span class="line"></span><br><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix&#x3D;&quot;c&quot; uri&#x3D;&quot;http:&#x2F;&#x2F;java.sun.com&#x2F;jsp&#x2F;jstl&#x2F;core&quot;  %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String jsUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;js&#x2F;&quot;;</span><br><span class="line">String cssUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;css&#x2F;&quot;;</span><br><span class="line">String imgUrl&#x3D;request.getContextPath()+&quot;&#x2F;public&#x2F;img&#x2F;&quot;;</span><br><span class="line">String flieUrl &#x3D; request.getContextPath()+&quot;&#x2F;WEB-INF&#x2F;pages&#x2F;&quot;;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;结账&lt;&#x2F;title&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;index.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;link href&#x3D;&quot;&lt;%&#x3D;cssUrl%&gt;bootstrapValidator.min.css&quot; rel&#x3D;&quot;stylesheet&quot; &#x2F;&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;jquery-3.2.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&lt;%&#x3D;jsUrl%&gt;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;queryCondition.jsp&quot; %&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;header.jsp&quot;%&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;alert alert-info tip-success&quot;&gt; </span><br><span class="line">   </span><br><span class="line">   您一共买了 &lt;b&gt;$&#123;sessionScope.ShoppingCart.computerNumber &#125; &lt;&#x2F;b&gt;件商品</span><br><span class="line">   应付: &lt;b&gt;￥ $&#123; sessionScope.ShoppingCart.totalMoney&#125;&lt;&#x2F;b&gt;</span><br><span class="line">   </span><br><span class="line">  &lt;&#x2F;div&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;c:if test&#x3D;&quot;$&#123;requestScope.errors !&#x3D; null &#125;&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;alert alert-danger text-center&quot;&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;close&quot; data-dismiss&#x3D;&quot;alert&quot; aria-label&#x3D;&quot;Close&quot;&gt;&lt;span aria-hidden&#x3D;&quot;true&quot;&gt;&amp;times;&lt;&#x2F;span&gt;&lt;&#x2F;button&gt;</span><br><span class="line">&lt;b&gt;$&#123;requestScope.errors &#125;&lt;&#x2F;b&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;c:if&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&quot;container&quot; &gt;</span><br><span class="line">&lt;form class&#x3D;&quot;form-signin&quot; action&#x3D;&quot;computerServlet?method&#x3D;cash&quot; method&#x3D;&quot;post&quot; style&#x3D;&quot;width:330px;margin:0 auto;&quot;&gt;</span><br><span class="line">        &lt;h2 class&#x3D;&quot;form-signin-heading&quot;&gt;请用信用卡完成支付！&lt;&#x2F;h2&gt;</span><br><span class="line">        &lt;label for&#x3D;&quot;inputEmail&quot; class&#x3D;&quot;sr-only&quot;&gt;信用卡姓名&lt;&#x2F;label&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot;  name&#x3D;&quot;username&quot; class&#x3D;&quot;form-control&quot; style&#x3D;&quot;margin-top:10px;margin-bottom: 20px;&quot;placeholder&#x3D;&quot;信用卡姓名&quot; required&#x3D;&quot;&quot; autofocus&#x3D;&quot;&quot;&gt;</span><br><span class="line">        &lt;label for&#x3D;&quot;inputPassword&quot; class&#x3D;&quot;sr-only&quot;&gt;信用卡账号&lt;&#x2F;label&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;inputPassword&quot; name&#x3D;&quot;accountId&quot; class&#x3D;&quot;form-control&quot; placeholder&#x3D;&quot;信用卡账号&quot; required&#x3D;&quot;&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;button class&#x3D;&quot;btn btn-lg btn-primary btn-block&quot; type&#x3D;&quot;submit&quot; style&#x3D;&quot;margin-top:20px;&quot;&gt;确认支付&lt;&#x2F;button&gt;</span><br><span class="line">      &lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%@ include file&#x3D;&quot;&#x2F;commons&#x2F;footer.jsp&quot;%&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商城 </tag>
            
            <tag> 百脑科技 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git踩过的坑</title>
      <link href="/2020/04/15/Git%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/"/>
      <url>/2020/04/15/Git%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="常用git命令："><a href="#常用git命令：" class="headerlink" title="常用git命令："></a>常用git命令：</h3><p>详情链接：<a href="https://blog.csdn.net/ThinkWon/article/details/101450420" target="_blank" rel="noopener">传送门</a></p><p>查看远程仓库地址：git remote -v</p><p>修改地址：　git remote set-url origin NEW_URL</p><h3 id="SVN和Git的区别"><a href="#SVN和Git的区别" class="headerlink" title="SVN和Git的区别"></a>SVN和Git的区别</h3><ol><li>git是分布式的scm,svn是集中式的。(最核心)</li><li>git是每个历史版本都存储完整的文件,便于恢复,svn是存储差异文件,历史版本不可恢复。(核心)</li><li>git可离线完成大部分操作,svn则不能。</li><li>git有着更优雅的分支和合并实现。</li><li>git有着更强的撤销修改和修改历史版本的能力</li><li>git速度更快,效率更高。</li></ol><p>总结：  </p><ol><li><p>当研发成本比较低，协作开发人数不多，开发人员对于版本管理的水平参差不齐的时候，或者对于代码的安全性要求更高一点的时候，适合用svn。</p></li><li><p>而对于很多人参与开发，代码量比较大，或者高频次协作，跨公司，跨地域合作的情况下，更适合用git。</p></li></ol><h3 id="以下是使用过程中的Bug记录"><a href="#以下是使用过程中的Bug记录" class="headerlink" title="以下是使用过程中的Bug记录"></a>以下是使用过程中的Bug记录</h3><p>问题：本地新建仓库，需要关联远程github仓库：  </p><pre><code>处理：    git remote add origin 仓库地址url      远程仓库有变化的先拉取同步一下：$ git pull --rebase origin master      新建空仓库推送：$ git push -u origin master      之后就可以直接：git push</code></pre><p>问题：更新拒绝，远程项目有你本地没有的更新  </p><pre><code>原因：之前上传后面在github上直接创建README.md和修改，没有在本地仓库合并  解决办法：     git remote -v :查看当前远程库      git fetch:从远程仓库下载新分支与数据      git merge: 从远程仓库提取数据并尝试合并到当前分支      git push origin master:推送到Github  </code></pre><p>问题：eclipse中git的安装、配置和使用：  </p><p>链接：<a href="https://blog.csdn.net/kuailexiaomeng/article/details/99604799" target="_blank" rel="noopener">传送门</a> </p><p>问题：删除本地文件：  </p><pre><code>方法：rm -rf 文件或文件夹git add .git commit -am “删除文件或文件夹”</code></pre><p>问题：删除了本地仓库文件夹后推送github出错：  </p><p>解决办法总结：  </p><pre><code>错误：src refspec e-shop does not match any命令：git add .     Git commit -m “提交”错误：The current branch master has no upstream branch.命令：git push --set-upstream origin master     Git push  </code></pre><p>问题：git push到GitHub的时候遇到! [rejected] master -&gt; master (non-fast-forward)的问题  </p><p>办法：  </p><pre><code>1、git pull origin master --allow-unrelated-histories //把远程仓库和本地同步，消除差异2、重新add和commit相应文件3、git push origin master4、此时就能够上传成功了</code></pre><p>问题：git问题ERROR: Repository not found.的解决办法  </p><pre><code>处理：      修改url路径：git remote set-url origin git@github.com:xxxxxx/xxxxxx.git      查看是否成功：git remote -v</code></pre><p>问题：已经提交到github但是没有设置.gitignore:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">在git相关项目目录下git Beah命令窗口</span><br><span class="line">创建.gitignore文件：$ touch .gitignore</span><br><span class="line">.gitignore中可以忽略的文件如下：</span><br><span class="line">#maven</span><br><span class="line">target&#x2F;</span><br><span class="line"></span><br><span class="line">#IDEA</span><br><span class="line">.idea&#x2F;</span><br><span class="line">*.iml</span><br><span class="line"></span><br><span class="line">#eclipse</span><br><span class="line">.settings&#x2F;</span><br><span class="line">.metadata&#x2F;</span><br><span class="line">.classpath</span><br><span class="line">.project</span><br><span class="line">Services&#x2F;</span><br><span class="line">Git在添加.gitignore之前就push了项目</span><br><span class="line">为避免冲突可以先同步下远程仓库：$ git pull</span><br><span class="line">在本地项目目录下删除暂存区内容：$ git rm -r --cached .</span><br><span class="line"></span><br><span class="line">然后再添加：$ git add .</span><br><span class="line"></span><br><span class="line">然后再次提交：$ git commit -m &quot;add .gitignore&quot;</span><br><span class="line"></span><br><span class="line">最后上传到github：$ git push</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>员工信息管理系统项目</title>
      <link href="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h3><blockquote><p>GitHub地址：<a href="https://github.com/panyongkang/gitRepository/tree/master/java-project0-master" target="_blank" rel="noopener">https://github.com/panyongkang/gitRepository/tree/master/java-project0-master</a></p></blockquote><p>项目名称：员工信息管理系统<br>项目周期：2019/10–2020/12<br>开发环境：Eclipse+Maven+JDK1.8+Git+Navicat<br>技术实现：Spring、SpringMVC、Mybatis、Maven、JQuery、BootStrap、MySQL、AJAX<br>项目描述：该系统是一个简单的部门员工信息管理系统，可以针对员工的部门调整、新员工的加入和老员工的离开的数据进行统一管理。主要分为管理员登录、用户注册、员工信息展示和退出五个模块。管理员登录模块实现了用户名和密码的验证和是否保存等功能；用户注册模块实现了注册用户名和密码与返回登录等功能；员工信息展示模块实现了部门员工的新增、编 辑和批量删除等功能，实现了弹出模态框的功能；退出模块实现了管理员退出并销毁的功能。<br>职责描述：<br>1、负责SSM框架的整合应用，数据库表结构的设计。<br>2、分页技术的使用，逆向工程的生成。<br>3、前端使用BootStrap框架渲染，JQuery完成前端验证。<br>4、实现了登录页面和注册页面，主要实现了用户登录验证、用户注册和退出登录等功能。<br>5、完成员工信息的新增、删除和编辑功能的开发和单元测试等工作。  </p><h3 id="项目傻瓜式分析"><a href="#项目傻瓜式分析" class="headerlink" title="项目傻瓜式分析"></a>项目傻瓜式分析</h3><h4 id="点击index-jsp中的“新增”按钮"><a href="#点击index-jsp中的“新增”按钮" class="headerlink" title="点击index.jsp中的“新增”按钮"></a>点击index.jsp中的“新增”按钮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;”col-md-4 col-md-offset-8”&gt;</span><br><span class="line">&lt;button id&#x3D;&quot;btn-add&quot; class&#x3D;”btn btn-danger”&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;glyphicon glyphicon-plus&quot; aria-hidden&#x3D;&quot;true&quot; &gt;&lt;&#x2F;sapn&gt;新增</span><br><span class="line">&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>如图所示：</p><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_1.gif"  alt></p><h4 id="点击新增按钮：index-js执行新增操作"><a href="#点击新增按钮：index-js执行新增操作" class="headerlink" title="点击新增按钮：index.js执行新增操作"></a>点击新增按钮：index.js执行新增操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">$&#123;“#btn-add”&#125;.clike(function()&#123;</span><br><span class="line">&#x2F;&#x2F;1.每次关闭再打开需执行表单数据重置</span><br><span class="line">$&#123;“#form1”&#125;[0].rest();</span><br><span class="line">&#x2F;&#x2F;2.检查用户是否已注册</span><br><span class="line">checkSameEmployee();</span><br><span class="line">&#x2F;&#x2F;3.点击新增按钮后查询depts</span><br><span class="line">add();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.检查用户是否已注册</span><br><span class="line">function checkSameEmployee() &#123;</span><br><span class="line">&#x2F;&#x2F; 为姓名输入框绑定一个change事件,发送ajax请求,检测是否用户已经注册</span><br><span class="line">$&#123;“#empName”&#125;.change(function()&#123;</span><br><span class="line">var empName&#x3D;$&#123;“#empName”&#125;.val();</span><br><span class="line">var APP_PATH &#x3D; $(&quot;#APP_PATH&quot;).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url : APP_PATH + &quot;&#x2F;checkSameEmployee&quot;,</span><br><span class="line">data : &#123;</span><br><span class="line">&quot;empName&quot; : empName</span><br><span class="line">&#125;,</span><br><span class="line">type : &quot;POST&quot;,</span><br><span class="line">success : function(result) &#123;</span><br><span class="line">if (result.code &#x3D;&#x3D; 200) &#123;</span><br><span class="line">show_validate_message($(&quot;#empName&quot;), &quot;success&quot;, &quot;&quot;);</span><br><span class="line">$(&quot;#btn-save&quot;).attr(&quot;ajax-value&quot;, true);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">show_validate_message($(&quot;#empName&quot;), &quot;error&quot;, &quot;该用户已存在&quot;);</span><br><span class="line">$(&quot;#btn-save&quot;).attr(&quot;ajax-value&quot;, false);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;2.1显示校验的结果和信息</span><br><span class="line">function show_validate_message(element, status, msg) &#123;</span><br><span class="line">clear(element);&#x2F;&#x2F; 每次显示前要清空</span><br><span class="line">if (status &#x3D;&#x3D; &quot;success&quot;) &#123;</span><br><span class="line">$(element).parent().addClass(&quot;has-success&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if (status &#x3D;&#x3D; &quot;error&quot;) &#123;</span><br><span class="line">$(element).parent().addClass(&quot;has-error&quot;);</span><br><span class="line">$(element).next(&quot;span&quot;).text(msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;3.新增</span><br><span class="line">Function add()&#123;</span><br><span class="line">&#x2F;&#x2F;3.1弹出之前发送ajax请求,查出部门信息并显示在下拉列表之中</span><br><span class="line">getDepts($(&quot;#dId select&quot;));</span><br><span class="line">&#x2F;&#x2F;3.2弹出模态框</span><br><span class="line">$&#123;“#myModal”&#125;.modal(&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;3.1ajax访问&#x2F;depts获取部门信息，然后插入select标签</span><br><span class="line">function getDepts(element) &#123;</span><br><span class="line">var APP_PATH &#x3D; $(&quot;#APP_PATH&quot;).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url : APP_PATH + &quot;&#x2F;depts&quot;,</span><br><span class="line">type : &quot;GET&quot;,</span><br><span class="line">success : function(result) &#123;</span><br><span class="line">&#x2F;&#x2F; console.log(result);</span><br><span class="line">buildDepts(result, element);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;3.1.1将查询的部门显示出来</span><br><span class="line">function buildDepts(result, element) &#123;</span><br><span class="line">$(element).empty();&#x2F;&#x2F; 注意每次构建前都要清空</span><br><span class="line">$.each(result.data.depts.data.depts, function(index, item) &#123;</span><br><span class="line">var deptOption &#x3D; $(&quot;&lt;option&gt;&lt;&#x2F;option&gt;&quot;).append(item.deptName).attr(</span><br><span class="line">&quot;value&quot;, item.deptId).appendTo(element);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Index-jsp中的新增模态框"><a href="#Index-jsp中的新增模态框" class="headerlink" title="Index.jsp中的新增模态框"></a>Index.jsp中的新增模态框</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;modal fade&quot; id&#x3D;&quot;myModal&quot; tabindex&#x3D;&quot;-1&quot; role&#x3D;&quot;dialog&quot;</span><br><span class="line">aria-labelledby&#x3D;&quot;myModalLabel&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;modal-dialog&quot; role&#x3D;&quot;document&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;modal-content&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;modal-header&quot;&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;close&quot; data-dismiss&#x3D;&quot;modal&quot;</span><br><span class="line">aria-label&#x3D;&quot;Close&quot;&gt;</span><br><span class="line">&lt;span aria-hidden&#x3D;&quot;true&quot;&gt;&amp;times;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;button&gt;</span><br><span class="line">&lt;h4 class&#x3D;&quot;modal-title&quot; id&#x3D;&quot;myModalLabel&quot;&gt;添加员工&lt;&#x2F;h4&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!-- 员工新增 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;modal-body&quot;&gt;</span><br><span class="line">&lt;form class&#x3D;&quot;form-horizontal&quot; id&#x3D;&quot;form1&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;empName&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;姓名:&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-10&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; id&#x3D;&quot;empName&quot;</span><br><span class="line">name&#x3D;&quot;empName&quot; placeholder&#x3D;&quot;姓名&quot;&gt; &lt;span</span><br><span class="line">class&#x3D;&quot;help-block&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;gender&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;性别:&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-10&quot;&gt;</span><br><span class="line">&lt;label class&#x3D;&quot;radio-inline&quot;&gt; &lt;input type&#x3D;&quot;radio&quot;</span><br><span class="line">name&#x3D;&quot;gender&quot; id&#x3D;&quot;gender&quot; value&#x3D;&quot;M&quot; checked&#x3D;&quot;checked&quot;&gt;</span><br><span class="line">男</span><br><span class="line">&lt;&#x2F;label&gt; &lt;label class&#x3D;&quot;radio-inline&quot;&gt; &lt;input type&#x3D;&quot;radio&quot;</span><br><span class="line">name&#x3D;&quot;gender&quot; id&#x3D;&quot;gender&quot; value&#x3D;&quot;F&quot;&gt; 女</span><br><span class="line">&lt;&#x2F;label&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;email&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;邮箱:&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-10&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; id&#x3D;&quot;email&quot; name&#x3D;&quot;email&quot;</span><br><span class="line">placeholder&#x3D;&quot;请填入正确邮箱格式&quot;&gt; &lt;span class&#x3D;&quot;help-block&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;dId&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;部门:&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-10&quot; id&#x3D;&quot;dId&quot;&gt;</span><br><span class="line">&lt;select class&#x3D;&quot;form-control&quot; name&#x3D;&quot;dId&quot;&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;modal-footer&quot;&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-default&quot; data-dismiss&#x3D;&quot;modal&quot;&gt;关闭&lt;&#x2F;button&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; id&#x3D;&quot;btn-save&quot;</span><br><span class="line">ajax-value&#x3D;&quot;true&quot;&gt;保存&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h4 id="点击“保存”按钮"><a href="#点击“保存”按钮" class="headerlink" title="点击“保存”按钮"></a>点击“保存”按钮</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_2.png"  alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">Index.jsp部分代码：</span><br><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; id&#x3D;&quot;btn-save&quot;</span><br><span class="line">ajax-value&#x3D;&quot;true&quot;&gt;保存&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">index.js代码：</span><br><span class="line">$(&quot;#btn-save&quot;).click(function() &#123;</span><br><span class="line">&#x2F;&#x2F;validate()执行表单数据验证是否规范</span><br><span class="line">if (validate()) &#123;</span><br><span class="line">if ($(&quot;#btn-save&quot;).attr(&quot;ajax-value&quot;) &#x3D;&#x3D; &quot;false&quot;) &#123;</span><br><span class="line">alert(&quot;无法插入&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">save();&#x2F;&#x2F; 点击保存按钮新增用户</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;校验表单数据</span><br><span class="line">function validate() &#123;</span><br><span class="line"> &#x2F;&#x2F;1.拿到要校验的数据，使用正则表达式</span><br><span class="line">var empName &#x3D; $(&quot;#empName&quot;).val();</span><br><span class="line">  &#x2F;&#x2F;2.正则表达式</span><br><span class="line">var regName &#x3D; &#x2F;^[\u4E00-\u9FA5A-Za-z]+$&#x2F;;</span><br><span class="line">if (!regName.test(empName)) &#123;</span><br><span class="line">&#x2F;&#x2F; alert(&quot;姓名格式不对&quot;);</span><br><span class="line">show_validate_message($(&quot;#empName&quot;), &quot;error&quot;, &quot;姓名格式不正确&quot;)</span><br><span class="line">return false;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">show_validate_message($(&quot;#empName&quot;), &quot;success&quot;, &quot;&quot;)</span><br><span class="line">&#125;</span><br><span class="line">var email &#x3D; $(&quot;#email&quot;).val();</span><br><span class="line">var regEmail &#x3D; &#x2F;^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;)$&#x2F;;</span><br><span class="line"></span><br><span class="line">if (!regEmail.test(email)) &#123;</span><br><span class="line">&#x2F;&#x2F; alert(&quot;邮箱格式不对&quot;);</span><br><span class="line">show_validate_message($(&quot;#email&quot;), &quot;error&quot;, &quot;邮箱格式不正确&quot;)</span><br><span class="line">return false;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">show_validate_message($(&quot;#email&quot;), &quot;success&quot;, &quot;&quot;)</span><br><span class="line">if ($(&quot;#btn-save&quot;).attr(&quot;ajax-value&quot;) &#x3D;&#x3D; false) &#123;</span><br><span class="line">alert(&quot;不成功&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;显示校验的结果和信息</span><br><span class="line">Function show_validate_message(element,status,msg)&#123;</span><br><span class="line">&#x2F;&#x2F;每次显示前要清空</span><br><span class="line">clear(element);</span><br><span class="line">if(status&#x3D;&#x3D;”success”)&#123;</span><br><span class="line">$(element).parent().addClass(“has-success”);</span><br><span class="line">&#125;</span><br><span class="line">If(status&#x3D;&#x3D;”error”)&#123;</span><br><span class="line">$(element).parent().addClass(“has-error”);</span><br><span class="line">$(element).next(“span”).text(msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;每次显示前都要清空</span><br><span class="line">Function clear(element)&#123;</span><br><span class="line">$(element).parent().removeClass(“has-success”);</span><br><span class="line">$(element).parent().removeClass(“has-error”);</span><br><span class="line">$(element).next(“span”).empty();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;保存员工</span><br><span class="line">function save() &#123;</span><br><span class="line">var APP_PATH &#x3D; $(&quot;#APP_PATH&quot;).val();</span><br><span class="line">&#x2F;&#x2F; alert($(&quot;#form1&quot;).serialize()); 将表单数据序列化为key:value形式</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url : APP_PATH + &quot;&#x2F;emp&quot;,</span><br><span class="line">type : &quot;POST&quot;,</span><br><span class="line">data : $(&quot;#form1&quot;).serialize(),</span><br><span class="line">success : function(result) &#123;</span><br><span class="line">if (result.code &#x3D;&#x3D; 200) &#123;</span><br><span class="line">alert(result.msg);</span><br><span class="line">$(&#39;#myModal&#39;).modal(&#39;hide&#39;);&#x2F;&#x2F; 关闭模态框</span><br><span class="line">&#125; else &#123;</span><br><span class="line">alert(result.msg);</span><br><span class="line">&#x2F;&#x2F; alert(&quot;老子终于跳过了前端验证&quot;); 浏览器f12把id&#x3D;empName改成id&#x3D;empName1,跳过前端验证</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="保存成功页面"><a href="#保存成功页面" class="headerlink" title="保存成功页面"></a>保存成功页面</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_3.png"  alt></p><h4 id="点击Index-jsp的“删除”按钮"><a href="#点击Index-jsp的“删除”按钮" class="headerlink" title="点击Index.jsp的“删除”按钮"></a>点击Index.jsp的“删除”按钮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class&#x3D;&quot;btn btn-primary&quot; id&#x3D;&quot;deleteAll&quot;&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;glyphicon glyphicon-remove&quot; aria-hidden&#x3D;&quot;true&quot;&gt;&lt;&#x2F;span&gt;删除</span><br><span class="line">&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_4.png"  alt></p><h4 id="触发Index-js中的批量删除代码"><a href="#触发Index-js中的批量删除代码" class="headerlink" title="触发Index.js中的批量删除代码"></a>触发Index.js中的批量删除代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 批量删除按钮操作</span><br><span class="line">$&#123;“#delelteAll”&#125;.clike(function()&#123;</span><br><span class="line">If($&#123;“.check_item:checked”&#125;.length!&#x3D;0)&#123;</span><br><span class="line">var empName&#x3D;””;</span><br><span class="line">var delIds&#x3D;””;</span><br><span class="line">$.each($(“.check_item:checked”,function()&#123;</span><br><span class="line">empNames+&#x3D;$(this).parents(“tr”).find(“td:eq(2)”).text()+”,”</span><br><span class="line">delIds+&#x3D;$(this).parents(“tr”).find(“td:eq(1)”).text()+”-“;</span><br><span class="line">&#125;)</span><br><span class="line">empNames&#x3D;empNames.subtring(0,empNames.length-1);</span><br><span class="line">delIds&#x3D;delIds.substring(0,delIds.length-1);</span><br><span class="line">var flag&#x3D;confirm(“确认删除【“+empNames+”】?”);</span><br><span class="line">if(flag)&#123;</span><br><span class="line">var APP_PATH&#x3D;$(“#APP_PATH”).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:APP_PATH+”&#x2F;emp&#x2F;”+delIds,</span><br><span class="line">type:”POST”,</span><br><span class="line">data:”_method&#x3D;delete”,</span><br><span class="line">success:function(result)&#123;</span><br><span class="line">alert(result.msg);</span><br><span class="line">toPage(1);&#x2F;&#x2F;返回首页</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">alert(“您未选择任何删除！”);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="通过Ajax的url进入Controller层"><a href="#通过Ajax的url进入Controller层" class="headerlink" title="通过Ajax的url进入Controller层"></a>通过Ajax的url进入Controller层</h4><p>EmployeeController.java代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * @param</span><br><span class="line"> * @return Message</span><br><span class="line"> * @description:单个批量删除 单个删除:1 批量删除:1-2-3</span><br><span class="line"> *&#x2F;</span><br><span class="line">@DeleteMapping(value &#x3D; &quot;&#x2F;emp&#x2F;&#123;empIds&#125;&quot;)</span><br><span class="line">@ResponseBody</span><br><span class="line">public Message deleteEmployee(@PathVariable(&quot;empIds&quot;) String empIds) &#123;</span><br><span class="line"> &#x2F;&#x2F;如果包含 - 就是批量删除</span><br><span class="line">if (empIds.contains(&quot;-&quot;)) &#123;</span><br><span class="line">String[] ids &#x3D; empIds.split(&quot;-&quot;);</span><br><span class="line">List&lt;Integer&gt; idsList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">for (String id : ids) &#123;</span><br><span class="line">idsList.add(Integer.parseInt(id));</span><br><span class="line">&#125;</span><br><span class="line">employeeService.deleteBatch(idsList);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">employeeService.deleteEmployee(Integer.parseInt(empIds));</span><br><span class="line">&#125;</span><br><span class="line">return Message.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用service层的方法"><a href="#调用service层的方法" class="headerlink" title="调用service层的方法"></a>调用service层的方法</h4><p>EmployeeServicejava代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 单个删除员工 *&#x2F;</span><br><span class="line">public void deleteEmployee(Integer empId) &#123;</span><br><span class="line">employeeMapper.deleteByPrimaryKey(empId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;批量删除</span><br><span class="line">public void deleteBatch(List&lt;Integer&gt; ids) &#123;</span><br><span class="line"></span><br><span class="line">EmployeeExample example &#x3D; new EmployeeExample();</span><br><span class="line">Criteria criteria &#x3D; example.createCriteria();</span><br><span class="line">criteria.andEmpIdIn(ids);</span><br><span class="line">employeeMapper.deleteByExample(example);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用dao层的方法"><a href="#调用dao层的方法" class="headerlink" title="调用dao层的方法"></a>调用dao层的方法</h4><p>EmployeeMapper.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;单个删除</span><br><span class="line">int deleteByPrimaryKey(Integer empId);</span><br><span class="line">&#x2F;&#x2F;批量删除代码：</span><br><span class="line">int deleteByExample(EmployeeExample example);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;批量删除调用bean层的方法：</span><br><span class="line">EmployeeExample.java代码：</span><br><span class="line">创建标准条件：</span><br><span class="line">  public Criteria createCriteria() &#123;</span><br><span class="line">        Criteria criteria &#x3D; createCriteriaInternal();</span><br><span class="line">        if (oredCriteria.size() &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            oredCriteria.add(criteria);</span><br><span class="line">        &#125;</span><br><span class="line">        return criteria;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected Criteria createCriteriaInternal() &#123;</span><br><span class="line">        Criteria criteria &#x3D; new Criteria();</span><br><span class="line">        return criteria;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">public static class Criteria extends GeneratedCriteria &#123;</span><br><span class="line"></span><br><span class="line">        protected Criteria() &#123;</span><br><span class="line">            super();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;添加需要删除的id:</span><br><span class="line">  public Criteria andEmpIdIn(List&lt;Integer&gt; values) &#123;</span><br><span class="line">            addCriterion(&quot;emp_id in&quot;, values, &quot;empId&quot;);</span><br><span class="line">            return (Criteria) this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  protected void addCriterion(String condition, Object value, String property) &#123;</span><br><span class="line">            if (value &#x3D;&#x3D; null) &#123;</span><br><span class="line">                throw new RuntimeException(&quot;Value for &quot; + property + &quot; cannot be null&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            criteria.add(new Criterion(condition, value));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="index-jsp中的表格代码"><a href="#index-jsp中的表格代码" class="headerlink" title="index.jsp中的表格代码"></a>index.jsp中的表格代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--3.表格 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-md-12&quot;&gt;</span><br><span class="line">&lt;table class&#x3D;&quot;table table-hover&quot; id&#x3D;&quot;emps_table&quot;&gt;</span><br><span class="line">&lt;thead&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">    &lt;th&gt;&lt;input type&#x3D;&quot;checkbox&quot; id&#x3D;&quot;checkAll&quot;&gt;&lt;&#x2F;input&gt;&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;员工编号&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;员工姓名&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;性別&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;邮箱&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;部门名称&lt;&#x2F;th&gt;</span><br><span class="line">&lt;th&gt;操作&lt;&#x2F;th&gt;</span><br><span class="line">&lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;thead&gt;</span><br><span class="line">&lt;tbody&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;tbody&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h4 id="使用index-js中追加“tbody”的内容"><a href="#使用index-js中追加“tbody”的内容" class="headerlink" title="使用index.js中追加“tbody”的内容"></a>使用index.js中追加“tbody”的内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;构建显示table</span><br><span class="line">Function buid_emps_table(result)&#123;</span><br><span class="line">&#x2F;&#x2F;注意每次构建前都要清空表格</span><br><span class="line">$(“#emps_table tbody”).empty();</span><br><span class="line">var emps&#x3D;result.data.pageInfo.list;</span><br><span class="line">$</span><br><span class="line">.each(</span><br><span class="line">emps,</span><br><span class="line">function(index,item)&#123;&#x2F;&#x2F;构件表格</span><br><span class="line">&#x2F;&#x2F;构建数据</span><br><span class="line">var checkBoxTd&#x3D;$(“&lt;td&gt;&lt;input type&#x3D;”checkbox” class&#x3D;”check_item” &#x2F;&gt;&lt;&#x2F;td&gt;);</span><br><span class="line">var empidTd&#x3D;$(“&lt;td&gt;&lt;&#x2F;td&gt;”).append(item.empId);</span><br><span class="line">var empNameTd&#x3D;$(“&lt;td&gt;&lt;&#x2F;td&gt;”).append(item.empName);</span><br><span class="line">var empGenderTd&#x3D;$(“&lt;td&gt;&lt;&#x2F;td&gt;”).append(item.gender&#x3D;&#x3D;’M ’?’ 男’ ：’女’);</span><br><span class="line">var empEmailTd&#x3D;$(“&lt;td&gt;&lt;&#x2F;td&gt;”).append(item.email);</span><br><span class="line">var deptNameTd&#x3D;$(“&lt;td&gt;&lt;&#x2F;td&gt;”).append(item.department.deptName);</span><br><span class="line">&#x2F;&#x2F;构建按钮</span><br><span class="line">var editBtn&#x3D;$(“&lt;button&gt;&lt;&#x2F;button&gt;”).addClass(“btn btn-info edit”).attr(“edit-id”,item.empId).append($(“&lt;span&gt;&lt;&#x2F;span&gt;”).addClass(“glyphicon glyphicon-pencil”)).append(“编辑”)；</span><br><span class="line">var deleteBtn&#x3D;$(“&lt;button&gt;&lt;&#x2F;button&gt;”).addClass(“btn btn-primary delete”).attr(“delete-id”,item.empId).append($(“&lt;span&gt;&lt;&#x2F;span&gt;”).addClass(“glyphicon glyphicon-remove”)).append(“删除”).attr(“deleteName”,item.empName);</span><br><span class="line">var btnTd&#x3D;$(“&lt;td&gt;&lt;&#x2F;td&gt;”).append(editBtn).append(“ ”).append(deleteBtn);</span><br><span class="line">&#x2F;&#x2F;append方法还是返回原来的元素</span><br><span class="line">$(&quot;&lt;tr&gt;&lt;&#x2F;tr&gt;&quot;).append(checkBoxTd).append(empIdTd)</span><br><span class="line">.append(empNameTd).append(empGenderTd).append(</span><br><span class="line">empEmailTd).append(deptNameTd).append(</span><br><span class="line">btnTd).appendTo(&quot;#emps_table tbody&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="追加后页面展示"><a href="#追加后页面展示" class="headerlink" title="追加后页面展示"></a>追加后页面展示</h4><p> <img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_5.png"  alt></p><h4 id="表格中的全选或全不选按钮"><a href="#表格中的全选或全不选按钮" class="headerlink" title="表格中的全选或全不选按钮"></a>表格中的全选或全不选按钮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Index.js中的代码：</span><br><span class="line">Function selectCheckBox()&#123;</span><br><span class="line">&#x2F;* checkAll全选全不选 *&#x2F;</span><br><span class="line">$(“#checkAll”).click(function()&#123;</span><br><span class="line">&#x2F;&#x2F;attr获取checked是undefined,原生的属性：prop 自定义：attr</span><br><span class="line">$(“.check_item”).attr(“checked”,$(this).prop(“checked”))</span><br><span class="line">&#125;);</span><br><span class="line">$(document).on(“click”,”.check_item”,function()&#123;</span><br><span class="line">&#x2F;&#x2F;判断当前选择中的元素是否为5个</span><br><span class="line">Var flag&#x3D;$(“.check_item:checked”).length&#x3D;&#x3D;$(“.check_item”).length;</span><br><span class="line">If(flag)&#123;</span><br><span class="line">$(“#checkAll”).prop(“checked”,flag);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$(“#checkAll”).prop(“checked”,null);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Index-jsp中分页功能"><a href="#Index-jsp中分页功能" class="headerlink" title="Index.jsp中分页功能"></a>Index.jsp中分页功能</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--4.分页 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">&lt;!-- 分页文字信息 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-md-6&quot; id&#x3D;&quot;page_info&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;!-- 分页条信息 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-md-6&quot; id&#x3D;&quot;page_line&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h4 id="Index-js中的分页代码"><a href="#Index-js中的分页代码" class="headerlink" title="Index.js中的分页代码"></a>Index.js中的分页代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;1.解析显示分页信息</span><br><span class="line">Function buid_page_info(result)&#123;</span><br><span class="line">&#x2F;&#x2F;注意每次构建前都要清空</span><br><span class="line">$(“#page_info”).empty();</span><br><span class="line">$(“#page_info”).append(</span><br><span class="line">“当前第”+result.data.pageInfo.pageNum+”页，共”</span><br><span class="line">+result.data.pageInfo.pages+”页，共”</span><br><span class="line">+result.data.pageInfo.total+”条记录“）</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;2.构建分页条</span><br><span class="line">Function buid_page_line(result)&#123;</span><br><span class="line">$(“#page_line”).empty;&#x2F;&#x2F;每次构建前都要清空</span><br><span class="line">Var ul&#x3D;$(“&lt;ul&gt;&lt;&#x2F;ul&gt;”).addClass(“pagination”)</span><br><span class="line">&#x2F;&#x2F;首页</span><br><span class="line">firstPageLi&#x3D;$(“&lt;li&gt;&lt;&#x2F;li&gt;”).append($(“&lt;a&gt;&lt;&#x2F;a&gt;”).append(“首页“).attr(“href”,”#”));</span><br><span class="line">&#x2F;&#x2F;前一页</span><br><span class="line">prePageLi&#x3D;$(“&lt;li&gt;&lt;&#x2F;li&gt;”).append($(“&lt;a&gt;&lt;&#x2F;a&gt;”).append(“&amp;laquo;”).attr(“href”,”#”));</span><br><span class="line">&#x2F;&#x2F; 如果当前页是第一页,禁止点击</span><br><span class="line">if(result.data.pageInfo.hasPreviousPage&#x3D;&#x3D;false)&#123;</span><br><span class="line">firstPageLi.addClass(“disabled”);</span><br><span class="line">prePageLi.addClass(“disabled”);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;跳转首页</span><br><span class="line">firstPageLi.click(function()&#123;</span><br><span class="line">toPage(1);</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 跳转前一页(注意前面虽然禁止了首页跳转,但是只有禁止点击标志,还是可以点击)</span><br><span class="line">proPageLi.click(function()&#123;</span><br><span class="line">toPage(result.data.pageInfo.pageNum&#x3D;&#x3D;1?1:result.data.pageInfo.pageNum-1)</span><br><span class="line">&#125;);</span><br><span class="line">ul.append(firstPageLi).append(prePageLi);</span><br><span class="line">&#x2F;&#x2F;下一页</span><br><span class="line">nextPageLi&#x3D;$(“&lt;li&gt;&lt;&#x2F;li&gt;”).append($(“&lt;a&gt;&lt;&#x2F;a&gt;”).append(“raquo;”).attr(“href”,”#”));</span><br><span class="line">&#x2F;&#x2F;末页</span><br><span class="line">LastPageLi&#x3D;$(“&lt;li&gt;&lt;&#x2F;li&gt;”).append($(“&lt;a&gt;&lt;&#x2F;a&gt;”).append(“末页“).attr(“href”,”#”));</span><br><span class="line">&#x2F;&#x2F; 如果当前页是最后一页禁止点击</span><br><span class="line">If(result.data.pageInfo.hasNextPage&#x3D;&#x3D;false)&#123;</span><br><span class="line">lastPageLi.addClass(“disabled”);</span><br><span class="line">nextPageLi.addClass(“disabled”);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;跳转最后一页</span><br><span class="line">lastPageLi.click(function()&#123;</span><br><span class="line">toPage(result.data.pageInfo.pages);</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 跳转下一页(注意前面虽然禁止了末页跳转,但是只有禁止点击标志,还是可以点击,或者在pagehelper的配置中设置reasonable属性)</span><br><span class="line">nextPageLi.click(function()&#123;</span><br><span class="line">toPage(result.data.pageInfo.pageNum&#x3D;&#x3D;result.data.pageInfo.pages? result.data.pageInfo.pages: result.data.pageInfo.pageNum + 1)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 页数1,2,3,4,5的生成与跳转</span><br><span class="line">$.each(result.data.pageInfo.navigatepageNums,function(index.item)&#123;</span><br><span class="line">Var numLi&#x3D;$(“&lt;li&gt;&lt;&#x2F;li&gt;”).append($(“&lt;a&gt;&lt;&#x2F;a&gt;”).append(item).attr(“href”,”#”));</span><br><span class="line">If(result.data.pageInfo.pageNum&#x3D;&#x3D;item)&#123;</span><br><span class="line">numLi.addClass(“active”);</span><br><span class="line">&#125;</span><br><span class="line">numLi.click(function()&#123;</span><br><span class="line">toPage(item);</span><br><span class="line">&#125;)</span><br><span class="line">ul.append(numLi);</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;添加下一页和末页提示</span><br><span class="line">ul.append(nextPageLi).append(lastPageLi);</span><br><span class="line">&#x2F;&#x2F;把ul加入到nav中</span><br><span class="line">Var nav&#x3D;$(“&lt;nav&gt;&lt;&#x2F;nav&gt;”).append(ul);</span><br><span class="line">$(“#page_line”).append(nav);</span><br><span class="line">&#125;</span><br><span class="line">&#96;</span><br></pre></td></tr></table></figure><h4 id="分页图片展示"><a href="#分页图片展示" class="headerlink" title="分页图片展示"></a>分页图片展示</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_6.png"  alt></p><h4 id="主函数调用实现页面跳转"><a href="#主函数调用实现页面跳转" class="headerlink" title="主函数调用实现页面跳转"></a>主函数调用实现页面跳转</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Function toPage(pn)&#123;</span><br><span class="line">var APP_PATH&#x3D;$(“#APP_PATH”.val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:APP_PATH+”&#x2F;emps”,</span><br><span class="line">data:’pn&#x3D;’+pn,</span><br><span class="line">type:’get’,</span><br><span class="line">success:function(result)&#123;</span><br><span class="line">&#x2F;&#x2F;1.解析并显示员工信息</span><br><span class="line">buid_emps_table(result);</span><br><span class="line">&#x2F;&#x2F;2.解析并显示分页信息</span><br><span class="line">buid_page_info(result);</span><br><span class="line">&#x2F;&#x2F;3.解析并显示分页条</span><br><span class="line">buid_page_line(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点击“编辑“按钮"><a href="#点击“编辑“按钮" class="headerlink" title="点击“编辑“按钮"></a>点击“编辑“按钮</h4><p>Index.js中代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*为每个编辑按钮绑定事件弹出模态框</span><br><span class="line">注意：如果直接写 btn.click()&#123;&#125;,不会产生效果，</span><br><span class="line">因为点击事件是在按钮创建前，如果想要获取点击事件，可以用on方法*&#x2F;</span><br><span class="line">$(document).on(“click”,”.edit”,function()&#123;</span><br><span class="line">getDepts($(“#dTd1 select”));&#x2F;&#x2F;修改前查出部门信息</span><br><span class="line">getEmp($(this).attr(“edit-id”));&#x2F;&#x2F;修改前查出员工信息</span><br><span class="line">$(“#btn-update”).attr(“edit-id”,$(this).attr(“edit-id”));&#x2F;&#x2F;把员工id传递给更新按键的属性</span><br><span class="line">update();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;ajax访问&#x2F;depts获取部门信息，然后插入select标签</span><br><span class="line">Function getDepts(element)&#123;</span><br><span class="line">Var APP_PATH&#x3D;$(“#APP_PATH”).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:APP_APTH+”&#x2F;depts”,</span><br><span class="line">type:”GET”,</span><br><span class="line">success:function(result)&#123;</span><br><span class="line">&#x2F;&#x2F;将查询的部门显示出来</span><br><span class="line">buildDepts(result,element); </span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;将查询的部门显示出来</span><br><span class="line">Function buildDepts(result,element)&#123;</span><br><span class="line">$(element).empty();&#x2F;&#x2F;每次构建前需要清空</span><br><span class="line">$.each(result.data.depts.data.depts,function(index,item)&#123;</span><br><span class="line">var deptOption&#x3D;$(“&lt;option&gt;&lt;&#x2F;option&gt;”).append(item.deptName).</span><br><span class="line">attr(“value&quot;,item.deptId.appendTo(element);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取修改员工的信息</span><br><span class="line">Function getEmp(id)&#123;</span><br><span class="line">Var APP_PATH&#x3D;$(“APP_PATH”).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:APP_PATH+”&#x2F;emp&#x2F;”+id,</span><br><span class="line">type:”GET”,</span><br><span class="line">success:function(result)&#123;</span><br><span class="line">var empName&#x3D;result.data.employee.empName;</span><br><span class="line">var email&#x3D;result.data.employee.email;</span><br><span class="line">var gender&#x3D;result.data.employee.gender;</span><br><span class="line">var dId&#x3D;result.data.employee.dId;</span><br><span class="line">$(“#empName1”).text(empName);</span><br><span class="line">$(“#email1”).val(email);</span><br><span class="line">$(“#myModal1 input[name&#x3D;gender]”).val([gender]);</span><br><span class="line">$(“#myModal1 select”).val([dId]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;弹出更新模态框</span><br><span class="line">Function update()&#123;</span><br><span class="line">$(“#myModal1”).modal(&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改好的信息点击更新按钮"><a href="#修改好的信息点击更新按钮" class="headerlink" title="修改好的信息点击更新按钮"></a>修改好的信息点击更新按钮</h4><p>Index.jsp中“更新”按钮代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type&#x3D;&quot;button&quot; class&#x3D;&quot;btn btn-primary&quot; id&#x3D;&quot;btn-update&quot;</span><br><span class="line">ajax-value&#x3D;&quot;true&quot;&gt;更新&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>index.js代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 点击更新员工 *&#x2F;</span><br><span class="line">$(“#btn-update”).click(function()&#123;</span><br><span class="line">&#x2F;&#x2F;验证邮箱是否合法</span><br><span class="line">Var email&#x3D;$(“#email1”).val();</span><br><span class="line">Var regEmail&#x3D;&#x2F;^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;)$&#x2F;;</span><br><span class="line">If(!regEmail.test(email))&#123;</span><br><span class="line">Show_validate_message($(“#email1”),”success”,”邮箱格式不对”)</span><br><span class="line">Return false;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">show_validate_message($(&quot;#email1&quot;), &quot;success&quot;, &quot;&quot;)</span><br><span class="line">if($(“#btn-update”).attr(“ajax-value”)&#x3D;&#x3D;false)&#123;</span><br><span class="line">alert(“不成功“)；</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*(发送ajax请求保存员工)</span><br><span class="line"> * </span><br><span class="line">  * 注意：PUT方法无法请求</span><br><span class="line">  * 保存员工数据,</span><br><span class="line">  * 如果直接发送ajax的请求，请求除了empId 剩下全是null</span><br><span class="line">  * 原因：</span><br><span class="line"> * tomcat：</span><br><span class="line"> * 1.将请求体中的数据，封装一个Map</span><br><span class="line"> * 2.request.getParameter(&quot;empName&quot;)就会从这个map中取值</span><br><span class="line"> * 3.SpringMVC封装POJO对象的时候。</span><br><span class="line">  * 会把每个属性的值 request.getParamter(&quot;email&quot;);</span><br><span class="line"> * </span><br><span class="line"> * ajax的PUT方法，tomcat看是PUT请求，就不会封装请求体数据为map,POST才封装请求体为map</span><br><span class="line">  * 解决方法：</span><br><span class="line">  * 将请求变成POST，在data中后续加入 &amp;_method&#x3D;PUT</span><br><span class="line"> *&#x2F;</span><br><span class="line">Var APP_PATH&#x3D;$(“#APP_PATH”).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url:APP_PATH+”&#x2F;emp&#x2F;”+$(this).attr(“edit-id”),</span><br><span class="line">type:”POST”,</span><br><span class="line">data:$(“#form2”).serialize()+”&amp;_method&#x3D;PUT”,</span><br><span class="line">success:function(result)&#123;</span><br><span class="line">alert(result.msg);</span><br><span class="line">$(‘#myModal1’).modal(‘hide’);&#x2F;&#x2F;关闭模态框</span><br><span class="line">toPage(1);&#x2F;&#x2F;回到首页</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="通过url进入controller层"><a href="#通过url进入controller层" class="headerlink" title="通过url进入controller层"></a>通过url进入controller层</h4><p>EmployeeController.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * @param</span><br><span class="line"> * @return Message</span><br><span class="line"> * @description:员工更新 这里ajax请求直接发put请求而不是post请求,那么所有的参数都会获取不到,因为tomcat只会封装post的数据</span><br><span class="line"> *                   也就是说request.getParameter(&quot;empId&quot;)为空,springmvc也无法封装Bean</span><br><span class="line"> *                   解决方法: 1.发送post方法,通过HiddenHttpMethodFilter(web.xml中设置）</span><br><span class="line"> *                   2.发送put请求,通过HttpPutFormContentFilter</span><br><span class="line"> *&#x2F;</span><br><span class="line">@PutMapping(value &#x3D; &quot;&#x2F;emp&#x2F;&#123;empId&#125;&quot;)</span><br><span class="line">@ResponseBody</span><br><span class="line">public Message saveUpdateEmployee(Employee employee) &#123;</span><br><span class="line">&#x2F;&#x2F; System.out.println(employee);</span><br><span class="line">logger.info(employee.toString());</span><br><span class="line">employeeService.updateEmployee(employee);</span><br><span class="line">return Message.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用Service层方法"><a href="#调用Service层方法" class="headerlink" title="调用Service层方法"></a>调用Service层方法</h4><p>EmployeeService.java代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;* 保存更新员工 *&#x2F;</span><br><span class="line">public void updateEmployee(Employee employee) &#123;</span><br><span class="line">employeeMapper.updateByPrimaryKeySelective(employee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="EmployeeMapper-java接口的代码"><a href="#EmployeeMapper-java接口的代码" class="headerlink" title="EmployeeMapper.java接口的代码"></a>EmployeeMapper.java接口的代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int updateByPrimaryKeySelective(Employee record);</span><br></pre></td></tr></table></figure><h4 id="EmployeeMapper-xml映射文件编写更新语句"><a href="#EmployeeMapper-xml映射文件编写更新语句" class="headerlink" title="EmployeeMapper.xml映射文件编写更新语句"></a>EmployeeMapper.xml映射文件编写更新语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;update id&#x3D;&quot;updateByPrimaryKeySelective&quot; parameterType&#x3D;&quot;com.wantao.bean.Employee&quot;&gt;</span><br><span class="line">update tb_emp</span><br><span class="line">&lt;set&gt;</span><br><span class="line">&lt;if test&#x3D;&quot;empName !&#x3D; null&quot;&gt;</span><br><span class="line">emp_name &#x3D; #&#123;empName,jdbcType&#x3D;VARCHAR&#125;,</span><br><span class="line">&lt;&#x2F;if&gt;</span><br><span class="line">&lt;if test&#x3D;&quot;gender !&#x3D; null&quot;&gt;</span><br><span class="line">gender &#x3D; #&#123;gender,jdbcType&#x3D;CHAR&#125;,</span><br><span class="line">&lt;&#x2F;if&gt;</span><br><span class="line">&lt;if test&#x3D;&quot;email !&#x3D; null&quot;&gt;</span><br><span class="line">email &#x3D; #&#123;email,jdbcType&#x3D;VARCHAR&#125;,</span><br><span class="line">&lt;&#x2F;if&gt;</span><br><span class="line">&lt;if test&#x3D;&quot;dId !&#x3D; null&quot;&gt;</span><br><span class="line">d_id &#x3D; #&#123;dId,jdbcType&#x3D;INTEGER&#125;,</span><br><span class="line">&lt;&#x2F;if&gt;</span><br><span class="line">&lt;&#x2F;set&gt;</span><br><span class="line">where emp_id &#x3D; #&#123;empId,jdbcType&#x3D;INTEGER&#125;</span><br><span class="line">&lt;&#x2F;update&gt;</span><br></pre></td></tr></table></figure><h4 id="点击“删除”按钮"><a href="#点击“删除”按钮" class="headerlink" title="点击“删除”按钮"></a>点击“删除”按钮</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 为每个删除按钮绑定事件(单个删除)</span><br><span class="line">$(document).on(“click”,”.delete”,function()&#123;</span><br><span class="line">var flag&#x3D;confirm(“是否删除”+$(this).attr(“deleteName”)+”?”);</span><br><span class="line">If(flag)&#123;</span><br><span class="line">deleteEmployee($(this));</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 判断选中的元素是不是全部,是的话checkAll要勾上</span><br><span class="line">$(document).on(“click”,”click_item”,function()&#123;&#x2F;&#x2F; 为每一个checkbox绑定事件</span><br><span class="line">&#x2F;&#x2F; 判断选中的元素是不是全部,是的话checkAll要勾上</span><br><span class="line">$(“#checkAll”).prop(“checked”,$(“.check_item:checked”).length&#x3D;&#x3D;$(“.check_item”).length);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;*单个删除 *&#x2F;</span><br><span class="line">function deleteEmployee(element) &#123;</span><br><span class="line">var APP_PATH &#x3D; $(&quot;#APP_PATH&quot;).val();</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">url : APP_PATH + &quot;&#x2F;emp&#x2F;&quot; + element.attr(&quot;delete-id&quot;),</span><br><span class="line">type : &quot;POST&quot;,</span><br><span class="line">data : &quot;_method&#x3D;delete&quot;,</span><br><span class="line">success : function(result) &#123;</span><br><span class="line">alert(result.msg);</span><br><span class="line">toPage(1);&#x2F;&#x2F; 返回首页</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点击删除按钮触发confirm-方法"><a href="#点击删除按钮触发confirm-方法" class="headerlink" title="点击删除按钮触发confirm()方法"></a>点击删除按钮触发confirm()方法</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_10.png"  alt></p><h4 id="点击“确定”后执行deleteEmployee（）方法返回信息"><a href="#点击“确定”后执行deleteEmployee（）方法返回信息" class="headerlink" title="点击“确定”后执行deleteEmployee（）方法返回信息"></a>点击“确定”后执行deleteEmployee（）方法返回信息</h4><p><img src="/img/loading.gif" class="lazyload" data-src="/2020/04/15/%E9%83%A8%E9%97%A8%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE/hexo_post_11.png"  alt></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BootStrap </tag>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具快捷键</title>
      <link href="/2020/04/15/%E5%B7%A5%E5%85%B7%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2020/04/15/%E5%B7%A5%E5%85%B7%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="IntelliJ-IDEA常用快捷键"><a href="#IntelliJ-IDEA常用快捷键" class="headerlink" title="IntelliJ IDEA常用快捷键"></a>IntelliJ IDEA常用快捷键</h2><pre><code>Ctrl+F:当前查找Ctrl+G:按行查询Ctrl+alt+L: 格式化代码按两次shift：任何地方进行搜索ctrl+n：查找类或者资源，并可以模糊查询ctrl+shift+F:全局搜索ctrl+shift+R:全部替换装了translation翻译插件的快捷键：Ctrl+shift+y:选择后按住进行翻译Ctri+shift+s:切换翻译引擎</code></pre><h2 id="webstorm常用快捷键"><a href="#webstorm常用快捷键" class="headerlink" title="webstorm常用快捷键"></a>webstorm常用快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">注释代码：Ctrl+&#x2F;</span><br><span class="line">Ctrl+alt+L: 格式化代码</span><br><span class="line">Ctrl+z:撤销操作</span><br><span class="line">Ctrl + Shift + Z：取消撤销操作 ##与搜狗输入法冲突，切换输入法后再使用</span><br><span class="line">ctrl+f 批量查找</span><br><span class="line">ctrl+r 批量替换</span><br></pre></td></tr></table></figure><h2 id="notepad-常用快捷键"><a href="#notepad-常用快捷键" class="headerlink" title="notepad++常用快捷键"></a>notepad++常用快捷键</h2><pre><code>ctrl+g:查询指定行数ctrl+k:注释ctrl+q:取消注释ctrl+shift+U:全部转成大写ctrl+U:全部转成小写去重正则表达式：^(.*?)$\s+?^(?=.*^\1$)，使用时勾选：正则表达式和匹配新行，然后直接全部替换即可。</code></pre><h2 id="Eclipse常用快捷键"><a href="#Eclipse常用快捷键" class="headerlink" title="Eclipse常用快捷键"></a>Eclipse常用快捷键</h2><pre><code>ctrl+shift+R:全局查找文件ctrl+H:全局查询内容Ctrl+F:当前查找Ctrl+L:按行查找Ctrl+K:快捷查询Ctrl+O:当前类查询方法Alt+shift+s:方法重写，gettings、settingsCtrl+shift+X/Y:大小写切换</code></pre><h2 id="谷歌浏览器快捷键"><a href="#谷歌浏览器快捷键" class="headerlink" title="谷歌浏览器快捷键"></a>谷歌浏览器快捷键</h2><pre><code>ctrl+shift+N:进入无痕模式ctrl+shift+i:打开控制台，开发者工具ctrl+H:历史记录ctrl+shift+T:恢复关闭前的历史记录ctrl+shift+Delete:清除浏览数据</code></pre><h2 id="UE工具的使用"><a href="#UE工具的使用" class="headerlink" title="UE工具的使用"></a>UE工具的使用</h2><p>格式化报文格式：ctrl+R,将”,”符号替换成”^p”。<br>^p：换行符。</p><p>^t:空格</p><p>文本替换：ctrl+R<br>查找：ctrl+F<br>转到指定行：ctrl+G</p><h2 id="Word快捷键"><a href="#Word快捷键" class="headerlink" title="Word快捷键"></a>Word快捷键</h2><ul><li>Ctrl+Home:回到文章开头</li><li>Ctrl+滑动鼠标轮子:改变文字大小</li><li>另起一页:插入分页符</li><li>Ctrl+M:段落整体缩进两格</li><li>生成上下标:如CO2和CO²，Ctrl+＝</li><li>打开新文件:Ctrl+O 创建新文件:Ctrl+N</li><li>按住“Ctrl+P”键，打印文档。</li><li>关闭:Ctrl+W   重复: Ctrl+Y 查找:Ctrl+F</li><li>替换:Ctrl+H 定位:Ctrl+G  </li><li>插入超级链接:Ctrl+K</li><li>复制文本:Shift+F2</li><li>改变字母大小写:Shift+F3</li><li>打印预览:Ctrl+F2</li><li>切换至或退出打印预览:Alt+Ctrl+I</li><li>创建不间断空格:Ctrl+Shift+空格</li><li>字符变粗体/斜体/添加下划线:Ctrl+B/I/U  删除段落格式::Ctrl+Q</li><li>换行符::Shift+Enter 分页符:Ctrl+Enter </li><li>列分隔符:Ctrl+Shift+Enter </li><li>省略号::Alt+Ctrl+。(句号)</li><li>段落居中/两端对齐:Ctrl+E/J</li><li>左/右对齐:Ctrl+L/R</li><li>左侧段落缩进:Ctrl+M </li><li>取消左侧段落缩进:Ctrl+Shift+M</li><li>选择打钩打叉：<ul><li>在需要的地方输入2611，选中2611，同时按住键盘的Alt+X键，此时，2611就变成了我们需要的打钩格式</li><li>如果需要打叉，只要把2611改成2612即可</li></ul></li></ul><h2 id="Excel快捷键"><a href="#Excel快捷键" class="headerlink" title="Excel快捷键"></a>Excel快捷键</h2><ul><li>显示“样式”对话框:Alt+’(单引号)</li><li>显示“单元格格式”对话框:Ctrl+1</li><li>应用年月日“日期”格式:Ctrl+Shift+#</li><li>应用“时间”格式:Ctrl+Shift+@</li><li>应用/删除外边框:Ctrl+Shift+&amp;/－</li><li>下划线:Ctrl+U  删除线:Ctrl+5</li><li>删除选定区域:Ctrl+－</li><li>插入空白格:Ctrl+shift++</li><li>选定整列:Ctrl+空格键</li><li>选定整行:shift+空格键</li><li>单元格的移动:空白区直接拖动，拖到有数据区域:shift+鼠标拖动</li><li>单元格复制:Ctrl+拖动，有数据区域:Ctrl+shift+拖动</li><li></li><li></li></ul><h2 id="PowerPoint"><a href="#PowerPoint" class="headerlink" title="PowerPoint"></a>PowerPoint</h2><ul><li>字符格式:/</li><li>插入新幻灯片:Ctrl+M</li><li>复制选定的幻灯片:Ctrl+D</li><li>打开/关闭演示文档::Ctrl+O/W</li><li>运行文档:F5  退出演示文档:Alt+F4</li><li>插入超级链接::Ctrl+F</li><li>恢复或重复某一操作::Ctrl+Y</li><li>改变字母大小写:Shift+F3</li><li>重复上一次操作:F4</li><li>关闭窗口::Ctrl+F4</li><li>幻灯片放映控制:黑屏 B 白屏 W 停止或重启:S</li></ul>]]></content>
      
      
      <categories>
          
          <category> 语法指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows系统操作</title>
      <link href="/2020/04/15/windows%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/04/15/windows%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="cmd窗口操控指令"><a href="#cmd窗口操控指令" class="headerlink" title="cmd窗口操控指令"></a>cmd窗口操控指令</h3><p>msinfo32.exe:查看系统详细信息<br>msconfig:查看电脑上的所有程序状态<br>cleanmgr:清理磁盘垃圾<br>chkdsk d: /f :检查和修复磁盘，d:指的是d盘，/f是修复指令<br>ping.exe:快速检查网络是否通畅or网络连接速度<br>mstsc:远程操控电脑，回车输入ip地址即可<br>calc.exe:打开电脑计算器<br>winver:检查windows版本<br>dxdiag:显示系统配置信息<br>write:字板<br>Msconfig.exe:系统配置实用程序<br>mplayer2:媒体播放机<br>mspaint:画图板<br>tsshutdn:60秒倒计时关机命令<br>rononce -p:15秒关机<br>shutdown -s -t 00:关机命令<br>shutdown -r -t 00:重启命令<br>rundll32.exe powrprof.dll,SetSuspendState 0,1,0：进入睡眠模式<br>psr:步骤记录器<br>slmgr.vbs -xpr:查看计算机是否永久激活<br>devmgmt.msc:打开设备管理器<br>charmap：打开字符映射大全表<br>services.msc：调出系统后台服务<br>regedit：打开注册表编辑器<br>recent:查看电脑操作记录<br>ipconfig /flushdns：清除DNS缓存<br>diskmgmt.msc：-磁盘管理程序<br>notepad：打开记事本</p><p>psr.exe：步骤记录器</p><p>osk:打开虚拟键盘</p><h3 id="桌面操作"><a href="#桌面操作" class="headerlink" title="桌面操作"></a>桌面操作</h3><p>Alt+Tab：一键切换程序</p><p>Alt+F4:立即关闭程序</p><p>Alt+空格+X:最大化窗口</p><p>win+V:可查看之前复制的内容<br>win+D:直接显示桌面<br>win+E:秒开文件管理</p><p>win+L:一键锁屏<br>win+X:组合键菜单<br>win+X+UU:快速关机<br>Ctrl+W:快速关闭当下页面<br>win+I:打开windows设置<br>win+G：打开游戏栏<br>win+shift+S:任意截图</p><p>windows+M:关闭所有窗口</p><p>Ctrl+shift+Esc:打开任务管理器</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>Ctrl+shift+N:新建文件夹<br>永久删除：点击文件，按Delete可永久删除<br>重命名：缓慢点击两次文件的名称，可以重命名<br>Ctrl+Z:撤销操作<br>Ctrl+Y:取消撤销的操作</p><h3 id="系统操作"><a href="#系统操作" class="headerlink" title="系统操作"></a>系统操作</h3><h4 id="注册表备份"><a href="#注册表备份" class="headerlink" title="注册表备份"></a>注册表备份</h4><ol><li><p>使用win+R运行命令：regedit，打开注册表编辑器</p></li><li><p>打开路径：计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Configuration Manager</p></li><li><p>然后右击窗格空白部分，选择“新建DWORD（32位）值”，将新键值命名为“EnablePeriodicBackup”</p></li><li><p>双击“EnablePeriodicBackup”，将其赋值为“1”</p></li><li><p>关闭注册表编辑器，重新启动电脑。重启系统后，Windows 10会自动在每次开机时备份注册表。</p></li><li><p>通过路径：“C:\Windows\System32\config\RegBack”可以查看到最新版备份文件。</p></li></ol><h4 id="win10更新后导致蓝屏"><a href="#win10更新后导致蓝屏" class="headerlink" title="win10更新后导致蓝屏"></a>win10更新后导致蓝屏</h4><pre><code>问题：win10更新后电脑发烫，可能是更新依赖不兼容导致，关机后再开机时发现蓝屏了。报错信息：“你的电脑未正确启动&quot;解决流程：无论是卸载更新或系统还原点，或者网上的进入安全模式BIOS都无法解决，最后通过“重置此电脑”，保留个人文件（除了删除c盘内容数据，其他盘不变）。重置完成后可以进入系统，但是系统还原点也没有了，需要后面再设置，以防万一。注意：重置此电脑可以只删除c盘数据，其他盘可保留，重装系统就全部需要重新安装分区，所以提前做好系统还原点很重要。</code></pre><h4 id="win10系统还原"><a href="#win10系统还原" class="headerlink" title="win10系统还原"></a>win10系统还原</h4><pre><code>Win10系统安装完以后，系统还原是默认处于关闭状态的。  点击计算机图标右键进入“属性”选项  点击左侧的“系统保护”  可以看到“系统还原”处于灰色状态，选择需要保护的磁盘点击“配置”  点击“启用系统保护”按钮，最大使用量设置为10%，然后点击“确定”按钮。  返回系统属性界面点击“创建”，输入还原点名称如：“系统还原”，然后创建等待。 在系统属性界面点击“系统还原”，根据提示下一步，选择还原时间点，点击“完成”等待重启即可。 </code></pre><h4 id="端口被占用"><a href="#端口被占用" class="headerlink" title="端口被占用"></a>端口被占用</h4><pre><code>端口被占用解决办法：cmd的命令步骤：netstat –ano 查询所有进程tasklist|findstr 7248 找到端口对应的进程号7248taskkill -f -im javaw.exe 杀死javaw.exe该进程 注：javaw.exe是占用端口的程序,根据自己的情况进行修改  </code></pre><h4 id="编写vbs小程序运行报错"><a href="#编写vbs小程序运行报错" class="headerlink" title="编写vbs小程序运行报错"></a>编写vbs小程序运行报错</h4><pre><code>刚创建的txt文件写入：CreateObject(&quot;SAPI.SpVoice&quot;).Speak&quot;你想说的话&quot;遇到问题：运行VB代码脚本的时候提示：Microsoft VBScript 编译器错误 错误 ‘800a0409’ 未结束的字符串常量原因是：编码错误解决方法：另存为编码是ANSI的txt文档，修改后缀，重新运行。（因为默认是utf8）</code></pre><h4 id="Microsoft-Store商店加载页面"><a href="#Microsoft-Store商店加载页面" class="headerlink" title="Microsoft Store商店加载页面"></a>Microsoft Store商店加载页面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">问题：Microsoft Store商城无法加载页面。</span><br><span class="line">方案：</span><br><span class="line">调整 Internet 选项 </span><br><span class="line"> 打开 IE 浏览器，点击设置，打开 Internet 选项，点击高级</span><br><span class="line"> 勾选 “使用SSL 3.0”、”使用 TLS 1.0“、”使用 TLS 1.1“、”使用 TLS 1.2“，应用后重启电脑，查看能否解决问题。</span><br></pre></td></tr></table></figure><h4 id="开启上帝模式"><a href="#开启上帝模式" class="headerlink" title="开启上帝模式"></a>开启上帝模式</h4><pre><code>在桌面新建一个文件夹，命名为&quot;上帝模式.{ED7BA470-8E54-465E-825C-99712043E01C}&quot;，即可打开完全控制面板模式。</code></pre><h4 id="IDM未能成功加载扩展程序"><a href="#IDM未能成功加载扩展程序" class="headerlink" title="IDM未能成功加载扩展程序"></a>IDM未能成功加载扩展程序</h4><pre><code>IDM安装后，在安装目录中找到IDMGCExt.crx的文件，将其拖到Chrome的扩展程序页面中即可。</code></pre><h4 id="处理器火力全开"><a href="#处理器火力全开" class="headerlink" title="处理器火力全开"></a>处理器火力全开</h4><pre><code>打开cmd窗口，输入msconfig,点击引导，选择高级选项，将处理器个数的数值开到最大，然后确定重启就行了。</code></pre><h4 id="修复电脑卡顿"><a href="#修复电脑卡顿" class="headerlink" title="修复电脑卡顿"></a>修复电脑卡顿</h4><pre><code>在搜索栏搜索命令提示符，右键“以管理员身份运行”，然后输入指令：sfc/?,然后再次输入指令：sfc/?,该命令用于扫描系统的完整性和修复出现的问题。</code></pre><h4 id="沙盒功能"><a href="#沙盒功能" class="headerlink" title="沙盒功能"></a>沙盒功能</h4><ol><li><p>在“开始菜单”输入“Windows功能”，打开“启用或关闭Windows功能”设置；</p></li><li><p>然后在里面找到“Windows沙盒”，勾选后确认，耐心等待系统自动配置好后重启系统；</p></li><li><p>win10沙盒开启要求</p><ul><li><p>双核以上CUP，且CPU支持虚拟化并且已经在BIOS中开启虚拟化；</p></li><li><p>系统版本为64位Windows10专业版或企业版1903 build 18305或更新的版本；</p></li><li><p>至少4G内存且尚有1G的磁盘空间；</p></li></ul></li><li><p>沙盒是一种能够在隔离的环境中运行未知exe.msi文件的程序，在沙盒中运行所有程序都不会影响电脑，类似于开了一个虚拟机。</p></li><li><p>虚拟机和沙盒的主要区别</p><ul><li><p>当沙盒中的应用程序退出后，其所做的更改会被丢弃；而当虚拟机退出后，其所做的更改会被保存下来；</p></li><li><p>沙盒中的application和其他application共享机器的硬件资源；而虚拟机在安装时需要为其指定内存memory和cpu核且虚拟机不和其他application共享硬件资源。因此虚拟机实际上是很耗系统资源的。</p></li></ul></li></ol><h3 id="电脑开启卓越性能"><a href="#电脑开启卓越性能" class="headerlink" title="电脑开启卓越性能"></a>电脑开启卓越性能</h3><ol><li>右击电脑左下角的win，选择Windows PowerShell</li><li>输入指令powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61回车，确认打开卓越性能</li><li>鼠标右击桌面，选择显示设置</li><li>选择左边菜单电源和睡眠，点击其他电源设置</li><li>点开隐藏附加计划，选择卓越性能就开启了</li></ol><p>注意：打开这个新模式肯定会让你感觉电脑快了一些。不过还是要提醒一下笔记本用户，如果使用这个“卓越性能”模式的话，会让笔记本的功耗大大增加，降低电池的续航能力，所以要想开启这个模式请尽量在插电的情况下开启。</p><h3 id="Dism-系统备份与还原"><a href="#Dism-系统备份与还原" class="headerlink" title="Dism++系统备份与还原"></a>Dism++系统备份与还原</h3><p><strong>备份系统</strong></p><p><a href="http://www.chuyu.me/zh-Hans/" target="_blank" rel="noopener">Dism++下载</a></p><p>下载完成，解压后双击Dism++x64.exe程序就能使用。打开程序后，点击“工具箱”，选择“系统备份”，映像文件路径例如：D:\win10备份.wim（后面的后缀一定得是“ <code>.wim</code> ” )。选择好备份路径后点击“确定”按钮，等待进度条走完，显示“准备就绪“就说明备份已经完成。</p><p>最好把备份后的系统拷贝到U盘或其它盘，因为以后重装系统会删除C盘，一般不会删除D、E、F盘这些。以防万一。</p><p><strong>还原系统</strong></p><p>点击”系统还原“，点击”浏览“，选择之前备份的那个“ win10备份.wim ”文件，勾选”添加引导“，点击”确定“，等待自动安装完就可以了。</p><p>详细可参考：<a href="https://www.cnblogs.com/PowerTips/p/12483252.html" target="_blank" rel="noopener">bitten</a> 教程</p>]]></content>
      
      
      <categories>
          
          <category> windows系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmd指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子购物商城项目</title>
      <link href="/2020/04/15/%E7%94%B5%E5%AD%90%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/04/15/%E7%94%B5%E5%AD%90%E8%B4%AD%E7%89%A9%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><h3 id="项目傻瓜式流程"><a href="#项目傻瓜式流程" class="headerlink" title="项目傻瓜式流程"></a>项目傻瓜式流程</h3><blockquote><p>GitHub地址：<a href="https://github.com/panyongkang/gitRepository/tree/master/e-shop" target="_blank" rel="noopener">https://github.com/panyongkang/gitRepository/tree/master/e-shop</a></p></blockquote><h4 id="案例1-用户注册"><a href="#案例1-用户注册" class="headerlink" title="案例1-用户注册"></a>案例1-用户注册</h4><pre><code>需求：在register.jsp页面填写数据信息，点击保存，将数据信息保存到数据库中。  步骤分析：  1.点击注册，跳转链接到register.jsp页面  2.在form表单action中跳转到userRegister方法  3.在userServlet中编写userRegister方法    方法中思路步骤：  获取前台数据参数，并封装成user对象  手动封装数据  调用service方法完成注册  显示提示信息，跳转注册成功页面  4.在userService中：调用dao方法完成注册  发送邮件  5.在userDao中：  获取数据源  拼写sql语句，执行insert操作。  </code></pre><h4 id="案例2-用户激活"><a href="#案例2-用户激活" class="headerlink" title="案例2-用户激活"></a>案例2-用户激活</h4><pre><code>需求：用户登录邮箱后，点击邮箱中的链接，完成用户激活操作  步骤分析：  1.点击邮箱中的链接，向商场userServlet发送一个请求user?method=activeUser&amp;coed=xxxx  2.在userServlet中编写active方法  2.1接收code参数  2.2调用service方法完成激活  2.3生成提示信息 转发      3.在service中编写激活方法          通过code获取用户              若没有找到：提示重新激活或者重新注册              若找到了：                  设置激活状态为1                  将code设置为null      4.在dao中编写两个方法          GetByCode()          Update()  </code></pre><h4 id="案例3-用户登录"><a href="#案例3-用户登录" class="headerlink" title="案例3-用户登录"></a>案例3-用户登录</h4><pre><code>需求：在一个登录页面上，输入用户名和密码，点击登录，完成登录操作  步骤分析：  1.在ingdex.jsp中点击登录，跳转到登录页面login.jsp  2.在userServlet中编写loginUI  3.修改login.jsp表单的信息      action：/user?method=login      method      给子标签添加name属性  4.点击提交发送请求  5.在userServlet中编写login方法  获取用户名和密码  调用service完成登录 返回值：user  若登录成功，跳转到index.jsp，并显示用户信息  若登录失败，若user为空：提示用户名和密码，跳转到login.jsp  若user不为空但是未激活：提示“请先去邮箱激活，在登录” 跳转msg.jsp   6.service,dao  </code></pre><h5 id="login-jsp表单登录代码"><a href="#login-jsp表单登录代码" class="headerlink" title="login.jsp表单登录代码"></a>login.jsp表单登录代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;form class&#x3D;&quot;form-horizontal&quot; id&#x3D;&quot;loginForm&quot; method&#x3D;&quot;post&quot; action&#x3D;&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;user?method&#x3D;userLogin&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;username&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;用户名&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-6&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; id&#x3D;&quot;username&quot; name&#x3D;&quot;username&quot; </span><br><span class="line">placeholder&#x3D;&quot;请输入用户名&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;label id&#x3D;&quot;username-error&quot; class&#x3D;&quot;error&quot; for&#x3D;&quot;username&quot;&gt; &lt;&#x2F;label&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;inputPassword3&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;密码&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-6&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;password&quot; class&#x3D;&quot;form-control&quot; id&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;</span><br><span class="line">placeholder&#x3D;&quot;请输入密码&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;label id&#x3D;&quot;password-error&quot; class&#x3D;&quot;error&quot; for&#x3D;&quot;password&quot;&gt; &lt;&#x2F;label&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;inputPassword3&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;验证码&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-3&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; id&#x3D;&quot;checkCode&quot; name&#x3D;&quot;checkCode&quot;</span><br><span class="line">placeholder&#x3D;&quot;请输入验证码&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-3&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;checkImg&quot; onclick&#x3D;&quot;changeCheckImg(this)&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-offset-2 col-sm-10&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;checkbox&quot;&gt;</span><br><span class="line">&lt;label&gt; &lt;input type&#x3D;&quot;checkbox&quot;&gt; 自动登录</span><br><span class="line">&lt;&#x2F;label&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;label&gt; </span><br><span class="line">&lt;input type&#x3D;&quot;checkbox&quot; name&#x3D;&quot;savename&quot; value&#x3D;&quot;ok&quot; &gt; 记住用户名</span><br><span class="line">&lt;&#x2F;label&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-offset-2 col-sm-10&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; width&#x3D;&quot;100&quot; value&#x3D;&quot;登录&quot; name&#x3D;&quot;submit&quot;</span><br><span class="line">style&#x3D;&quot;background: url(&#39;.&#x2F;images&#x2F;login.gif&#39;) no-repeat scroll 0 0 rgba(0, 0, 0, 0); height: 35px; width: 100px; color: white;&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;loginInfo&quot; style&#x3D;&quot;padding-left: 50px; color: red;&quot;&gt;</span><br><span class="line">&lt;c:if test&#x3D;&quot;$&#123;loginInfo&#x3D;&#x3D;&#39;false&#39; &#125;&quot;&gt;</span><br><span class="line">用户名或密码输入错误</span><br><span class="line">&lt;&#x2F;c:if&gt;</span><br><span class="line">&lt;c:if test&#x3D;&quot;$&#123;loginInfo&#x3D;&#x3D;&#39;notActive&#39; &#125;&quot;&gt;</span><br><span class="line">用户尚未激活</span><br><span class="line">&lt;&#x2F;c:if&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><h5 id="Js验证信息代码"><a href="#Js验证信息代码" class="headerlink" title="Js验证信息代码"></a>Js验证信息代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;登录表单验证</span><br><span class="line">$(&quot;#loginForm&quot;).validate(&#123;</span><br><span class="line">rules:&#123;</span><br><span class="line">username:&#123;</span><br><span class="line">required:true</span><br><span class="line">&#125;,</span><br><span class="line">password:&#123;</span><br><span class="line">required:true</span><br><span class="line">&#125;,</span><br><span class="line">checkCode:&#123;</span><br><span class="line">required:true,</span><br><span class="line">isRight:true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">messages:&#123;</span><br><span class="line">username:&#123;</span><br><span class="line">required:&quot;请输入用户名&quot;</span><br><span class="line">&#125;,</span><br><span class="line">password:&#123;</span><br><span class="line">required:&quot;请输入密码&quot;</span><br><span class="line">&#125;,</span><br><span class="line">checkCode:&#123;</span><br><span class="line">required:&quot;请输入验证码&quot;,</span><br><span class="line">isRight:&quot;验证码不正确&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="UserServlet-java代码"><a href="#UserServlet-java代码" class="headerlink" title="UserServlet.java代码"></a>UserServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 用户登录</span><br><span class="line"> * @param request</span><br><span class="line"> * @param response</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void userLogin(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">Map&lt;String, String[]&gt; properties &#x3D; request.getParameterMap();</span><br><span class="line">User loginUser &#x3D; new User();</span><br><span class="line">try &#123;</span><br><span class="line">BeanUtils.populate(loginUser, properties);</span><br><span class="line">&#125; catch (IllegalAccessException | InvocationTargetException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">UserService service &#x3D; new UserService();</span><br><span class="line">User user &#x3D; service.login(loginUser);</span><br><span class="line">if (user &#x3D;&#x3D; null) &#123;</span><br><span class="line">&#x2F;&#x2F; 表示用户不存在</span><br><span class="line">request.getSession().setAttribute(&quot;loginInfo&quot;, &quot;false&quot;); &#x2F;&#x2F; 将登陆信息存到session中</span><br><span class="line">response.sendRedirect(request.getContextPath() + &quot;&#x2F;login.jsp&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (user.getState() &#x3D;&#x3D; 0) &#123;</span><br><span class="line">&#x2F;&#x2F; 表示用户尚未激活</span><br><span class="line">request.getSession().setAttribute(&quot;loginInfo&quot;, &quot;notActive&quot;);</span><br><span class="line">response.sendRedirect(request.getContextPath() + &quot;&#x2F;login.jsp&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">&#x2F;&#x2F; 表示登陆成功</span><br><span class="line">request.getSession().setAttribute(&quot;user&quot;, user);</span><br><span class="line"></span><br><span class="line">&#x2F;************************记住用户名：判断是否勾选了记住用户名**************&#x2F;</span><br><span class="line">if(Constant.SAVE_NAME.equals(request.getContextPath())) &#123;</span><br><span class="line">Cookie c&#x3D; new Cookie(&quot;saveName&quot;, java.net.URLEncoder.encode(user.getUsername(), &quot;utf-8&quot;));</span><br><span class="line">c.setMaxAge(Integer.MAX_VALUE);&#x2F;&#x2F;设置保存时间</span><br><span class="line">c.setPath(request.getContextPath()+&quot;&#x2F;&quot;);&#x2F;&#x2F;指定一个路径</span><br><span class="line">response.addCookie(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response.sendRedirect(request.getContextPath());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="UserService-java代码"><a href="#UserService-java代码" class="headerlink" title="UserService.java代码"></a>UserService.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 用户登陆</span><br><span class="line"> * @param user</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public User login(User loginUser) &#123;</span><br><span class="line">UserDao dao &#x3D; new UserDao();</span><br><span class="line">User user &#x3D; null;</span><br><span class="line">try &#123;</span><br><span class="line">user &#x3D; dao.isRight(loginUser);</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">return user;</span><br><span class="line">&#125;</span><br><span class="line">UserDao.java代码：</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 查询用户名和密码是否正确</span><br><span class="line"> * @param user</span><br><span class="line"> * @return</span><br><span class="line"> * @throws SQLException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public User isRight(User user) throws SQLException &#123;</span><br><span class="line">QueryRunner runner &#x3D; new QueryRunner(DataSourceUtils.getDataSource());</span><br><span class="line">String sql &#x3D; &quot;select * from user where username&#x3D;? and password&#x3D;?&quot;;</span><br><span class="line">return runner.query(sql, new BeanHandler&lt;User&gt;(User.class), user.getUsername(),user.getPassword());</span><br><span class="line">&#125;</span><br><span class="line">Login.jsp验证码验证代码：</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;inputPassword3&quot; class&#x3D;&quot;col-sm-2 control-label&quot;&gt;验证码&lt;&#x2F;label&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-3&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; id&#x3D;&quot;checkCode&quot; name&#x3D;&quot;checkCode&quot;</span><br><span class="line">placeholder&#x3D;&quot;请输入验证码&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;col-sm-3&quot;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;checkImg&quot; onclick&#x3D;&quot;changeCheckImg(this)&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">Js部分代码：</span><br><span class="line">&#x2F;&#x2F;更换验证码</span><br><span class="line">function changeCheckImg(obj) &#123;</span><br><span class="line">$(obj).attr(&quot;src&quot;,&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;checkImg?date&#x3D;&quot;+new Date());</span><br><span class="line">&#125;</span><br><span class="line">$(function()&#123;</span><br><span class="line">&#x2F;&#x2F;自定义校验规则------验证码是否正确</span><br><span class="line">$.validator.addMethod(&quot;isRight&quot;,function(value,element,params)&#123;</span><br><span class="line">var varify &#x3D; false;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">&#x2F;&#x2F;设置为同步校验，（同步就是多任务串行，服务器没有响应之前，不允许进行其他操作）</span><br><span class="line">async:false,</span><br><span class="line">dataType:&quot;json&quot;,</span><br><span class="line">type:&quot;POST&quot;,</span><br><span class="line">data:&#123;&quot;checkCode&quot;:value&#125;,</span><br><span class="line">url:&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;user?method&#x3D;checkCodeVarify&quot;,</span><br><span class="line">success:function(data)&#123;</span><br><span class="line">varify &#x3D; data.isRight;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">return varify;</span><br><span class="line">&#125;);</span><br><span class="line">进入CheckImgServlet.java中执行验证码生成程序代码：</span><br><span class="line">生成验证码后，输入验证码，验证码是否正确</span><br><span class="line">进入UserServlet.java中执行方法:</span><br><span class="line">&#x2F;**</span><br><span class="line"> * 验证码验证</span><br><span class="line"> * @param request</span><br><span class="line"> * @param response</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void checkCodeVarify(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">String checkCode &#x3D; (String) request.getParameter(&quot;checkCode&quot;);</span><br><span class="line">Boolean isRight &#x3D; checkCode.equals(request.getSession().getAttribute(&quot;checkcode_session&quot;));</span><br><span class="line">response.getWriter().write(&quot;&#123;\&quot;isRight\&quot;:&quot; + isRight + &quot;&#125;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例4-用户退出"><a href="#案例4-用户退出" class="headerlink" title="案例4-用户退出"></a>案例4-用户退出</h4><pre><code>需求：点击index.jsp上 退出链接，退出当前用户，跳转index.jsp  步骤分析：  1.点击index.jsp 退出链接  /user?method=logout  2.在userservlet中编写logout方法  销毁session  重定向到index.jsp  </code></pre><h5 id="Header-jsp代码展示"><a href="#Header-jsp代码展示" class="headerlink" title="Header.jsp代码展示"></a>Header.jsp代码展示</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;a href&#x3D;&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;user?method&#x3D;quitUser&quot;&gt;退出&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br></pre></td></tr></table></figure><h5 id="进入UserServlet-java代码"><a href="#进入UserServlet-java代码" class="headerlink" title="进入UserServlet.java代码"></a>进入UserServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public String quitUser(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">request.getSession().invalidate();&#x2F;&#x2F;用于清除session的所有信息。</span><br><span class="line">response.sendRedIrect(request.getContextPath());</span><br><span class="line">return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="扩展案例-记住用户名"><a href="#扩展案例-记住用户名" class="headerlink" title="扩展案例-记住用户名"></a>扩展案例-记住用户名</h4><pre><code>需求：登录成功后，若勾选了记住用户名，下次在登录的时候，会展示出来用户名  步骤分析：      修改login方法的逻辑          登录成功后，判断是否勾选了记住用户名          若勾选了，将用户名（将用户名编码）保存到cookie中      在login.jsp加载成功的时候需要从cookie中获取用户名且展示出来  </code></pre><h5 id="Login-jsp代码展示"><a href="#Login-jsp代码展示" class="headerlink" title="Login.jsp代码展示"></a>Login.jsp代码展示</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type&#x3D;”checkbox” name&#x3D;”savename” value&#x3D;”ok”&gt;记住用户名</span><br></pre></td></tr></table></figure><h5 id="进入UserServlet-java代码-1"><a href="#进入UserServlet-java代码-1" class="headerlink" title="进入UserServlet.java代码"></a>进入UserServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Request.getSession().setAttribute(“user”,user);</span><br><span class="line">&#x2F;&#x2F;判断是否勾选了记住用户名</span><br><span class="line">If(Constant.SAVE_NAME.equals(request.getContextPath)))&#123;</span><br><span class="line">Cookie c&#x3D;new Cookie(“saveName”,java.net.URLEncoder.encode(user.getUsername(),”utf-8));</span><br><span class="line">c.setMaxAge(Integer.MAX_VALUE);</span><br><span class="line">c.setPath(request.getContextPath()+”&#x2F;”);</span><br><span class="line">response.addCookie(c);</span><br><span class="line">&#125;</span><br><span class="line">response.sendRedirect(request.getContextPath());</span><br></pre></td></tr></table></figure><h5 id="Constant-java代码"><a href="#Constant-java代码" class="headerlink" title="Constant.java代码"></a>Constant.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;记住用户名常量，和value值一致</span><br><span class="line">String SAVE_NAME&#x3D;&quot;ok&quot;;</span><br></pre></td></tr></table></figure><h4 id="案例5-前台分类信息展示"><a href="#案例5-前台分类信息展示" class="headerlink" title="案例5-前台分类信息展示"></a>案例5-前台分类信息展示</h4><pre><code>需求：访问任意页面的时候，都需要将分类的信息展示出来  技术分析:        包含（静态包含和动态包含）      Ajax技术  步骤分析：  1.创建分类表  2.抽取所有页面上，logo和菜单部分（head.jsp）  页面加载的时候  </code></pre><h5 id="Header-jsp代码"><a href="#Header-jsp代码" class="headerlink" title="Header.jsp代码"></a>Header.jsp代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class&#x3D;&quot;nav navbar-nav&quot; id&#x3D;&quot;categoryUl&quot;&gt;&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><pre><code>编写函数          发送ajax请求，$.post(url,param,fn,type);                  url:/store/category                  params:method=findAll                  fn:将返回值遍历，每一个分类封装成li标签，插入到ul标签内部                  type:json  Ajax详情链接：https://blog.csdn.net/huileiforever/article/details/12163385  </code></pre><h5 id="Header-jsp代码-1"><a href="#Header-jsp代码-1" class="headerlink" title="Header.jsp代码"></a>Header.jsp代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;使用JSON完成导航栏，然后利用js生成的li插入ul内部</span><br><span class="line">$(function()&#123;</span><br><span class="line">&#x2F;&#x2F;发送ajax请求，查询所有分类</span><br><span class="line">&#x2F;&#x2F;dataType:&quot;json&quot; - 以 JSON 运行响应，并以 JavaScript 对象返回</span><br><span class="line">$.post(</span><br><span class="line">&quot;$&#123;pageContext.request.contextPath &#125;&#x2F;product?method&#x3D;productCategory&quot;,</span><br><span class="line">function(data)&#123;</span><br><span class="line">var content &#x3D;&quot;&quot;;</span><br><span class="line">for (var i &#x3D; 0; i &lt; data.length; i++) &#123;&#x2F;&#x2F;遍历json列表，获取每一个分类，包装成li标签</span><br><span class="line">content +&#x3D;&quot;&lt;li&gt;&lt;a href&#x3D;&#39;$&#123;pageContext.request.contextPath&#125;&#x2F;product?method&#x3D;product_list&amp;cid&#x3D;&quot;+data[i].cid+&quot;&#39;&gt;&quot;+data[i].cname+&quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;插入到ul内部</span><br><span class="line">$(&quot;#categoryUl&quot;).html(content);</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">&quot;json&quot;</span><br><span class="line">);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><pre><code>编写ProductServlet,继承baseservlet,编写productCategory方法          调用service,查询所有的分类          分类列表的json字符串（String）          写回页面  </code></pre><h5 id="ProductServlet-java代码"><a href="#ProductServlet-java代码" class="headerlink" title="ProductServlet.java代码"></a>ProductServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 查询商品分类</span><br><span class="line"> * @param request</span><br><span class="line"> * @param response</span><br><span class="line"> * @throws ServletException</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void productCategory(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">ProductService service &#x3D; new ProductService();</span><br><span class="line">&#x2F;&#x2F;查询所有商品类别</span><br><span class="line">List&lt;Category&gt; categoryList &#x3D; service.findAllCategory();</span><br><span class="line">&#x2F;&#x2F;将categoryList转为json字符串</span><br><span class="line">Gson gson &#x3D; new Gson();</span><br><span class="line">String json &#x3D; gson.toJson(categoryList);</span><br><span class="line">response.setContentType(&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;);</span><br><span class="line">response.getWriter().write(json);</span><br><span class="line">&#125;</span><br><span class="line">ProductService中的操作</span><br><span class="line">调用dao,获取所有的分类</span><br><span class="line">将list转成json返回</span><br></pre></td></tr></table></figure><h5 id="ProductService-java代码"><a href="#ProductService-java代码" class="headerlink" title="ProductService.java代码"></a>ProductService.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 找所有商品类别</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public List&lt;Category&gt; findAllCategory() &#123;</span><br><span class="line">ProductDao dao &#x3D; new ProductDao();</span><br><span class="line">List&lt;Category&gt; categoryList &#x3D; null;</span><br><span class="line">try &#123;</span><br><span class="line">categoryList &#x3D; dao.findCategory();</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">return categoryList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ProductDao-java代码"><a href="#ProductDao-java代码" class="headerlink" title="ProductDao.java代码"></a>ProductDao.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 查询所有商品类别</span><br><span class="line"> * @return</span><br><span class="line"> * @throws SQLException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public List&lt;Category&gt; findCategory() throws SQLException &#123;</span><br><span class="line">QueryRunner runner &#x3D; new QueryRunner(DataSourceUtils.getDataSource());</span><br><span class="line">String sql &#x3D; &quot;select * from category&quot;;</span><br><span class="line">return runner.query(sql, new BeanListHandler&lt;Category&gt;(Category.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在所有的页面里将head.jsp包含进去  </p><pre><code>获取返回值（json字符串）  遍历返回值  每一个分类封装成li标签，插入到ul标签内部      另一种方法：可使用redis进行优化（理解：因为每一个分类的数据，每点一次需要进行数据库访问，redis可以将数据保存在内存中，不用一直访问数据库）          修改service层的代码              获取的时候,去redis中获取                  若获取到了返回                若没有获取到,先去Mysql数据库中查询出来，将list转成json放入redis中即可</code></pre><h4 id="案例6-最新商品和热门商品展示"><a href="#案例6-最新商品和热门商品展示" class="headerlink" title="案例6-最新商品和热门商品展示"></a>案例6-最新商品和热门商品展示</h4><pre><code>需求：      访问首页时，需要将最新商品和热门商品展示出来  技术分析：      方式1：ajax异步（麻烦，导航栏就是异步）      方式2：同步  采用同步方法的步骤分析（请求转发：因为路径不变，数据改变）      0.创建商品表CREATE TABLE `product` (  `pid` varchar(32) NOT NULL,  `pname` varchar(50) DEFAULT NULL,  `market_price` double DEFAULT NULL,  `shop_price` double DEFAULT NULL,  `pimage` varchar(200) DEFAULT NULL,  `pdate` date DEFAULT NULL,  `is_hot` int(11) DEFAULT NULL,  `pdesc` varchar(255) DEFAULT NULL,  `pflag` int(11) DEFAULT NULL,  `cid` varchar(32) DEFAULT NULL,  PRIMARY KEY (`pid`),  KEY `sfk_0001` (`cid`),  CONSTRAINT `sfk_0001` FOREIGN KEY (`cid`) REFERENCES `category` (`cid`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;插入数据：INSERT INTO `product` VALUES (&apos;1&apos;,&apos;小米 4c 标准版&apos;,1399,1299,&apos;products/1/c_0001.jpg&apos;,&apos;2015-11-02&apos;,1,&apos;小米 4c 标准版 全网通 白色 移动联通电信4G手机 双卡双待&apos;,0,&apos;1&apos;),（…一共50条不同记录）；1.访问项目首页，请求转发indexservlet2.Indexservlet中使用默认index处理    调用productservice查询热门商品和最新商品，每一个都返回一个list    将两个list放入request域中，请求转发到index.jsp中3.在页面中将数据遍历出来</code></pre><h4 id="案例7-单个商品详情"><a href="#案例7-单个商品详情" class="headerlink" title="案例7-单个商品详情"></a>案例7-单个商品详情</h4><pre><code>需求：在首页上点击每个商品，将这个商品的详细信息展示在页面（product_info.jsp）  步骤分析：  1.给每个商品添加超链接  2.编写productservlet,继承baseservlet,编写getById  获取商品的pid  调用service获取一个商品，返回值：product  请求转发到product_info.jsp  3.service,dao  4.在product_info.jsp中展示商品  </code></pre><h4 id="案例8-分类商品的分页展示"><a href="#案例8-分类商品的分页展示" class="headerlink" title="案例8-分类商品的分页展示"></a>案例8-分类商品的分页展示</h4><pre><code>需求：点击菜单栏上某一个分类的时候，将该分类下的商品，分页展示出来（默认第一页）  技术分析：      分页:          页面上需要的数据          当前页数据          当前页          总页数          总记录数          每页显示的条数      Limit m,n          Limit(当前页-1)*每页显示的条数，每页显示的条数  步骤分析：  1.修改head.jsp上的每个分页的超链接  2.在cateservlet中编写findByPage方法  获取参数  获取cid  设置pageSize  调用service获取分页的数据，返回值：PageBean  将pagebean放入request域中，请求转发  3.编写service  返回值：pagebean  创建一个pagebean  设置当前页需要的数据      调用dao  设置总记录数      调用dao  4.dao  5.在product_list.jsp上展示商品  </code></pre><h4 id="案例9-添加到购物车"><a href="#案例9-添加到购物车" class="headerlink" title="案例9-添加到购物车"></a>案例9-添加到购物车</h4><pre><code>需求：在商品的详情页面输入购买数量，点击加入购物车，将该商品添加到购物车技术分析：      Session  涉及到实体：      购物车（cart）              属性：                  购物项（商品购买信息）的集合                      Map&lt;String,CartItem&gt;                  总金额(total)              方法：                  加入购物车                      Add2Cart(Cartem,item){                            //1.判断购物车是否有该商品                            有：                                修改购买数量（原来的数量+item.getCount()）                                修改总金额（原来的金额+item.getSubtotal()）                            无：直接put进去                                修改总金额（原来金额+item.getSubtotal()）                         }                从购物车移除                      removeFromCart(pid){                             从map中移除指定购物项                            修改总金额                        }                清空购物车                      clearCart(){                             清空map                            修改总金额=0.0                        }    购物项（CartItem）          属性：              商品对象(product)              购买数量(count)              小计(subtotal)          方法：              重新编写getSubtoal(){                    Return product.getShop_price*count                }</code></pre><h5 id="步骤分析"><a href="#步骤分析" class="headerlink" title="步骤分析"></a>步骤分析</h5><pre><code>1.修改商品详情页面（product_info.jsp）  添加一个表单：          要执行方法：onclick=&quot;addToCart()”                  商品的pid:pid=xxx          商品的购买数量：count=xxx      点击“加入购物车”,将表单提交/store/cart      2.编写cartServlet    继承baseservlet,编写add2cart          获取商品的pid和count          封装cartitem              New cartitem(Product,count)          将cartitem加入购物车          获取购物车（session中获取）          调用购物车的add2cart方法即可  重定向cart.jsp上  </code></pre><h5 id="Product-info-jsp部分代码"><a href="#Product-info-jsp部分代码" class="headerlink" title="Product_info.jsp部分代码"></a>Product_info.jsp部分代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;”javascript:void(0)” onclick&#x3D;”addToCart()”&gt;</span><br><span class="line">&lt;input style&#x3D;&quot;background: url(&#39;.&#x2F;images&#x2F;product.gif&#39;) no-repeat scroll 0 -600px rgba(0, 0, 0, 0); height: 36px; width: 127px;&quot; value&#x3D;”加入购物车” type&#x3D;”button”&gt;&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;”text&#x2F;javascript”&gt;</span><br><span class="line">Function addToCart()&#123;</span><br><span class="line">Var proNum&#x3D;$.(“#proNum”).val();&#x2F;&#x2F;获取商品数量</span><br><span class="line">Window.loacation&#x3D;”$&#123;pageContext.request.contextPath&#125;&#x2F;cart?method&#x3D;addToCart&amp;pid&#x3D;$&#123;product.pid&#125;&amp;proNum&#x3D;”+proNum;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h5 id="CartServlet-java代码"><a href="#CartServlet-java代码" class="headerlink" title="CartServlet.java代码"></a>CartServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;添加到购物车方法</span><br><span class="line">public void addToCart(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">String pid&#x3D;request.getParameter(“pid”);</span><br><span class="line">ProductService service &#x3D; new ProductService();</span><br><span class="line">Product product &#x3D;service.findProductByPid(pid);</span><br><span class="line">Int proNum&#x3D;Integer.parseInt(request.getParameter(“proNum”));</span><br><span class="line">HttpSession session&#x3D;request.getSession();</span><br><span class="line">&#x2F;&#x2F;更新session域中的购物车对象</span><br><span class="line">Cart cart&#x3D;(Cart) session.getAtrribute(“cart”);</span><br><span class="line">If(cart&#x3D;&#x3D;null)&#123;</span><br><span class="line">cart&#x3D;new Cart();</span><br><span class="line">&#125;</span><br><span class="line">Map&lt;String,CartItem&gt; cartMap&#x3D;cart.getCartMap();</span><br><span class="line">&#x2F;&#x2F;判断商品的pid</span><br><span class="line">If(cartMap.containsKey(pid)&#123;</span><br><span class="line">&#x2F;&#x2F;有：原来的购物项+新增的值</span><br><span class="line">CartItem cartItem &#x3D;cartMap.get(pid);</span><br><span class="line">&#x2F;&#x2F;购物车中已经包含了该商品:新加的数量+原来的数量</span><br><span class="line">cartItem.setProNum(cartItem.getProductNum()+proNum);</span><br><span class="line">&#x2F;&#x2F;设置：小计的价格&#x3D;新加的价格+购物车原来的价格</span><br><span class="line">cartItem.setSubTotal(cartItem.getSubTotal()+product.getShop_price()*proNum);</span><br><span class="line">cartMap.put(pid,cartItem);&#x2F;&#x2F;将value值覆盖</span><br><span class="line">&#125;else&#123;</span><br><span class="line">&#x2F;&#x2F;购物车中没有该商品，新增该购物商品项</span><br><span class="line">CartItem cartItem&#x3D;new CartItem();</span><br><span class="line">cartItem.setProNum(proNum);</span><br><span class="line">cartItem.setProduct(product);</span><br><span class="line">cartItem.setSubToal(product.getShop_price()*proNum);</span><br><span class="line">cartMap.put(pid,cartItem);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;修改当前购物车总金额</span><br><span class="line">Cart.setToal(cart.getTotal()+product.getShop_price()*proNum);</span><br><span class="line">Cart.setCartMap(cartMap);</span><br><span class="line">Session.setAttribute(“cart”,cart);</span><br><span class="line">&#x2F;&#x2F;重定向到cart.jsp页面</span><br><span class="line">response.sendRedirect(request.getContextPath()+”&#x2F;cart.jsp”);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ProductService-java代码-1"><a href="#ProductService-java代码-1" class="headerlink" title="ProductService.java代码"></a>ProductService.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">  * 单个商品查询</span><br><span class="line">  * 根据商品id找到商品</span><br><span class="line"> * @param pid</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public Product findProductByPid(String pid) &#123;</span><br><span class="line">ProductDao dao &#x3D; new ProductDao();</span><br><span class="line">Product product &#x3D; null;</span><br><span class="line">try &#123;</span><br><span class="line">product &#x3D; dao.findProductByPid(pid);</span><br><span class="line">&#125; catch (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">return product;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ProductDao-java代码-1"><a href="#ProductDao-java代码-1" class="headerlink" title="ProductDao.java代码"></a>ProductDao.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">  * 查询单个商品</span><br><span class="line"> * @param pid</span><br><span class="line"> * @return</span><br><span class="line"> * @throws SQLException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public Product findProductByPid(String pid) throws SQLException &#123;</span><br><span class="line">QueryRunner runner&#x3D;new QueryRunner(DataSourceUtils.getDataSource());</span><br><span class="line">String sql&#x3D;”select * from prduct where pid&#x3D;?”;</span><br><span class="line">Return runner.query(sql,new BeanHandler&lt;Product&gt;(Product.class),pid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例10-从购物车移除一个商品"><a href="#案例10-从购物车移除一个商品" class="headerlink" title="案例10-从购物车移除一个商品"></a>案例10-从购物车移除一个商品</h4><pre><code>需求：在cart.jsp上，点击一个商品的删除，弹出一个提示信息，点击确定，从购物车中移除，否则不删  步骤分析：  1.给“删除”添加链接  2.在cartservlet中编写deleteCart方法  获取pid  获取cart,执行remove方法  重定向到cart.jsp  </code></pre><h5 id="Cart-jsp代码"><a href="#Cart-jsp代码" class="headerlink" title="Cart.jsp代码"></a>Cart.jsp代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;td class&#x3D;”text-center”&gt;</span><br><span class="line">&lt;a href&#x3D;”javascript:void(0);” onclick&#x3D;”deleteCartItem(‘$&#123;entry.value.product.pid&#125;’)” class&#x3D;”btn btn-danger delete”&gt;删除&lt;&#x2F;a&gt;</span><br><span class="line">&lt;&#x2F;td&gt;</span><br><span class="line">Function deleteCartItem(pid)&#123;</span><br><span class="line">If(confirm(“您确定不要宝宝了吗？亲！”))&#123;</span><br><span class="line">Window.location&#x3D;”$&#123;pageContext.request.contextPath&#125;&#x2F;cart?method&#x3D;deleteCartItem&amp;pid&#x3D;”+pid;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="CartServlet-java代码-1"><a href="#CartServlet-java代码-1" class="headerlink" title="CartServlet.java代码"></a>CartServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 删除购物车商品</span><br><span class="line"> * @param request</span><br><span class="line"> * @param response</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void deleteCart(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">String pid&#x3D;request.getParameter(“pid”);</span><br><span class="line">HttpSession session &#x3D; request.getSession();</span><br><span class="line">Cart cart&#x3D;(cart) session.getAttribute(“cart”);</span><br><span class="line">Map&lt;String,CartItem&gt; cartMap&#x3D;cart.getCartMap();</span><br><span class="line">If(cartMap.containsKey(pid)&#123;</span><br><span class="line">&#x2F;&#x2F;根据购物车项的pid删除商品</span><br><span class="line">CartItem cartItem &#x3D;cartMap.get(pid);</span><br><span class="line">cartMap.remove(pid);</span><br><span class="line">&#x2F;&#x2F;设置购物车删除商品后的价格&#x3D;总价格-删除商品价格</span><br><span class="line">cart.setTotal(cart.getTotal()-cartItem.getSubToal());</span><br><span class="line">&#x2F;&#x2F;设置购物车删除后的商品项的集合</span><br><span class="line">cart.setCartMap(cartMap);</span><br><span class="line">session.setAttribute(“cart”,cart);</span><br><span class="line">&#125;</span><br><span class="line">response.sendRedirect(request.getContextPath()+&quot;&#x2F;cart.jsp&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例11-清空购物车"><a href="#案例11-清空购物车" class="headerlink" title="案例11-清空购物车"></a>案例11-清空购物车</h4><pre><code>需求：点击cart.jsp上的清空购物车，需要将购物车所有商品都删除掉  步骤分析：      修改清空购物车的链接          /cart?method=cleat      编写clear方法          获取购物车，执行clearCart方法          重定向到cart.jsp          判断购物车中是否有商品，              有则展示,无则提示  </code></pre><h5 id="Cart-jsp部分代码"><a href="#Cart-jsp部分代码" class="headerlink" title="Cart.jsp部分代码"></a>Cart.jsp部分代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript:void(0);&quot; id&#x3D;&quot;clear&quot; class&#x3D;&quot;clear&quot; onclick&#x3D;&quot;clearCart()&quot;&gt;清空购物车&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line">function clearCart()&#123;</span><br><span class="line">if(confirm(&quot;您确定要清空购物车吗？&quot;))&#123;</span><br><span class="line">window.location &#x3D;  &quot;$&#123;pageContext.request.contextPath&#125;&#x2F;cart?method&#x3D;clearCart&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="CartServlet-java代码-2"><a href="#CartServlet-java代码-2" class="headerlink" title="CartServlet.java代码"></a>CartServlet.java代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 清空购物车</span><br><span class="line"> * @param request</span><br><span class="line"> * @param response</span><br><span class="line"> * @throws IOException</span><br><span class="line"> *&#x2F;</span><br><span class="line">public void clearCart(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">&#x2F;*********清空session中的cart**********&#x2F;</span><br><span class="line">HttpSession session&#x3D;request.getSession();</span><br><span class="line">Cart cart&#x3D;(Cart)session.getAttribute(“cart”);</span><br><span class="line">Map&lt;String,CartItem&gt; cartMap&#x3D;cart.getCartMap();</span><br><span class="line">cartMap.clear();</span><br><span class="line">cart.setCartMap(cartMap);</span><br><span class="line">session.setAttribute(“cart”,cart);</span><br><span class="line">response.sendRedirect(request.getContextPath()+”&#x2F;cart.jsp”);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例12-生成订单"><a href="#案例12-生成订单" class="headerlink" title="案例12-生成订单"></a>案例12-生成订单</h4><pre><code>需求：在cart.jsp上点击“提交订单”，将购物车的商品保存到数据库中  实体分析：      用户      订单      商品      用户和订单：一对多      订单和商品：多对多  表分析：      用户表      商品表      订单表      用户和订单是一对多，在订单表中添加外键      订单和商品是多对多，引入一张中间表（orderitem）      订单表：          Id          订单状态          订单金额          下单时间          收货人信息          User_id      订单项表：          Pid          Oid          Itemid          某个商品购买数量          小计  实体具体分析：      订单属性：          Id          订单金额          下单时间          收货人信息          User对象          订单项列表              List&lt;OrderTiem&gt; list      订单项属性：          Product对象          Order          Itemid          某个商品的购买数量(count)          小计（subtotal）  </code></pre><h5 id="步骤分析："><a href="#步骤分析：" class="headerlink" title="步骤分析："></a>步骤分析：</h5><pre><code>    1.在cart.jsp上，点击提交订单    发送请求          路径：/order?method=submitOrder      2.编写orderservlet,编写submitOrder方法          封装订单对象              设置Id              设置订单金额              设置下单时间              设置收货人信息              设置User对象              设置订单项列表                  List&lt;OrderTiem&gt; list                  遍历购物车中购物项，获取每一个购物项                  封装成orderitem                      设置Product对象                          购物中获取product                      设置Order                      设置Itemid                          UUIDUtils                      设置某个商品的购买数量(count)                          购物项中获取                      设置小计（subtotal）                          购物项中获取          调用orderservice,执行保存操作          请求转发到订单详情页面  3.    编写service:    开启事务          向orders保存一条          向orderitem中保存多条  </code></pre><h4 id="案例13-我的订单"><a href="#案例13-我的订单" class="headerlink" title="案例13-我的订单"></a>案例13-我的订单</h4><pre><code>需求：在任意页面上，点击“我的订单”，将当前用户的订单（包含订单项列表）分页展示出来  步骤分析：  1.修改head.jsp上“我的订单”的连接  2.在orderservlet中编写findMyOrdersByPage  获取pagenumber设置pagesize,获取当前用户id  调用service完成分页查询操作，返回pagebean  将pagebean放入request域中，请求转发order_list.jsp  3.service操作  创建pagebean  设置总条数  设置当前页数据  4.dao操作：  获取当前页订单数据     Sql:只能查询订单的基本信息，没有订单项     Select * from orders where uid=? Order by orderitem desc limit ?,?执行上面的sql，返回的List&lt;Order&gt;遍历orderList集合，获取到每一个订单，关联查询订单项和商品项，将该订单下的所有信息查询出来，封装成orderitem，将每一个orderitem放入当前order的订单项列表中Select*from orderitem oi,product p where oi.pid=p.pid AND oi.oid=’ 2d6f53ee-c7b3-4836-8d53-e3a0cfcde739’;  上面的结果用什么封装？？？     使用maplisthandler封装，将查询结果的每一条记录封装成map(key;字段名（和bean属性名一样），value:具体指)，   将所有的map放入list中返回遍历map的list,获取每一个订单的详情,使用beanutils进行封装即可 封装成orderitem和product对象, 最后将orderitem对象放入，最后将orderitem对象放入订单项列表中[{itemid=xxxx,pname=华为，…},{itemid=yyyy,pname=中兴，…}]  </code></pre><h4 id="案例14-订单详情"><a href="#案例14-订单详情" class="headerlink" title="案例14-订单详情"></a>案例14-订单详情</h4><pre><code>需求：在订单列表页面上，点击提交订单按钮，展示当前的订单详情步骤分析：1.修改提交订单连接2.在orderservlet编写getById方法获取oid调用service查询单个订单 返回值order将order放入request域中，请求转发到order_info.jsp3.service操作4.dao操作先查询订单信息（没有订单项）   Select*from orders where oid=?再查询当前订单的订单项   Select*from orderitem oi,product p where oi.pid=p.pid and oi.oid=?使用mapListhandler进行封装   获取每一个订单项详情，封装成orderitem，最后将orderitem添加到订单的订单项列表即可</code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子购物 </tag>
            
            <tag> 商城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库理论</title>
      <link href="/2020/04/13/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%90%86%E8%AE%BA/"/>
      <url>/2020/04/13/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="数据库知识"><a href="#数据库知识" class="headerlink" title="数据库知识"></a>数据库知识</h2><h3 id="MySQL查询语句"><a href="#MySQL查询语句" class="headerlink" title="MySQL查询语句"></a>MySQL查询语句</h3><ol><li><p>去掉重复值：distinct可以将指定列的重复值剔除</p><p>​    语法结构：select distinct col_name form tab_name;</p></li><li><p>查询语句中使用列的别名：AS可以为列起别名，AS也可以省略不写</p><p>​    语法结构：select col_name AS alias_name,col_name2 alias_name2 from tab_name;</p></li><li><p>between and:表示介于两者之间</p></li><li><p>in查询：用于没有规律的范围查询，相当于多个or的组合</p><p>​    例如：查询公司职位为项目经理，项目组长的员工：select * from emp where job in(‘项目经理’，’项目组长’)；</p></li><li><p>模糊查询like:模糊查询使用通配符%和_实现，%表示任一个任意字符， _表示任意一个字符</p></li><li><p>排序order by子句：用于排序，升序ASC,降序DESC,默认ASC</p><ol><li>例如：按照工资从高到低查询员工信息，工资相同再按照奖金升序排序</li><li>语法：select * from emp order by sal DESC,comm asc;</li></ol></li><li><p>聚合函数查询：将多个数据聚合成一个数据，共有sum、max、min、avg、count五个。</p><ol><li>例如：查询最高工资，最低工资，平均工资，总工资，公司总人数</li><li>语法：select  max(sal) 最高工资，min(sal) 最低工资，avg(sal) 平均工资，sum(sal) 总工资，count(sal) 公司总人数 from emp ;</li></ol></li><li><p>分组查询group by子句：分组是按照指定的列，将列中相同的值分为一组，一组用一条记录来表示。分组后，可以对每组中的数据进行聚合查询。</p><ol><li><p>例如：统计每个部门的员工数量</p></li><li><p>语法：select deptno 部门编号，count(*) 人数 from emp group by deptno;</p><p>注意：</p><pre><code>1. select出现的字段，必须出现在group by后面。2. 分组函数只能出现在select、order by子句、having子句中，不能出现在where、Group by子句中。</code></pre></li></ol></li></ol><ol start="9"><li><p>分组后筛选having子句：分组后，对每组的数据进行筛选。</p><ol><li>例如：统计部门员工数量超过3人的部门</li><li>语法：select deptno 部门编号，count(*) 员工数量 from emp Group by deptno having count( *)&gt;3;</li></ol></li><li><p>多表查询</p><ol><li><p>等值连接查询：效率最低</p><p>例如：查询每个部门的所有员工</p><p>语法：select dept.dname,emp.ename from emp,dept where emp.deptno<code>=</code>dept.deptno;</p></li><li><p>内连接查询：使用inner join关键字实现，inner可以省略</p><p>例如：查询每个部门的所有员工</p><p>语法：select dept.dname,emp.ename from emp <code>inner join</code> dept <code>on</code> emp.deptno=dept.deptno;</p></li><li><p>外连接：分为左外连接(left join)和右外连接(right join)</p><ol><li>例如：查询每个部门的所有员工</li><li>语法：select dept.dname,emp.ename from emp <code>right join</code> dept <code>on</code> emp.deptno=dept.deptno;</li></ol></li></ol></li><li><p>子查询</p><ol><li>定义：为了给主查询语句提供数据而先执行的查询语句称为子查询。</li><li>单行子查询：<ol><li>例如：查询软件部门下的所有员工</li><li>语法：select * from emp e where e.deptno=(select d.deptno from dept d.dname=’软件部’);</li></ol></li><li>多行子查询：<ol><li>例如：统计所有的员工都分布在哪些部门信息</li><li>语法：select * from dept d where e.dept <code>IN</code> (select e.deptno from emp e);</li><li>注意：多行子查询返回多行记录，就需要多行记录的操作符，常见的：IN、ANY、ALL等。</li></ol></li></ol></li><li><p>分页查询limit子句</p><ol><li>当表的数据很多时，可以使用分页查询，降低对数据库服务器的压力。</li><li>例如：分页查询员工信息</li><li>语句：select * from emp limit 0,2;</li><li>注意：0代表从第几条开始查询，2代表查询多少条数据。</li></ol></li><li><p>综合查询示例</p><ol><li><p>需求：查询2000年以后入职，部门员工数量超过2人以上的部门，按照部门人数从多到少排序输出，分页显示，每页5条。</p></li><li><p>语句：select * from emp where hirdate&gt;=’2000-01-01’ group by deptno having count(*)&gt;=2 order by DESC limit 0,5;</p></li><li><p>注意：当SQL语句中有多个子句时，子句的书写顺序和执行顺序如下：</p><table><thead><tr><th>子句</th><th>select</th><th>from</th><th>where</th><th>group</th><th>having</th><th>order</th><th>limit</th></tr></thead><tbody><tr><td>书写顺序</td><td>（1）</td><td>（2）</td><td>（3）</td><td>（4）</td><td>（5）</td><td>（6）</td><td>（7）</td></tr><tr><td>执行顺序</td><td>（5）</td><td>（1）</td><td>（2）</td><td>（3）</td><td>（4）</td><td>（6）</td><td>（7）</td></tr></tbody></table></li></ol></li></ol><h3 id="事务：ACID"><a href="#事务：ACID" class="headerlink" title="事务：ACID"></a>事务：ACID</h3><ul><li>事务由多个数据操作(增删改查)组合</li><li>事务是数据操作的最小单元</li><li>事务中所有操作全部成功,事务整体成功</li><li>当事务中一项操作失败,事务整体失败</li></ul><p>1.事务定义：事务是一组工作单元，他有一条或多条sql语句组成，一个事物可以在操作的数据对象上执行一个或多个操作</p><p>2.事务的特点<br>    1.原子性：事务要么都成功执行，要么都不执行<br>    2.一致性：事务必须保持数据库数据在一致状态（如：要删除DEPT表数据，但是EMP中还有该部门员工，就拒绝此操作）<br>    3.隔离性：一个事物的执行不能被其它事务干扰<br>    4.永久性：一个事务的执行一旦提交，它对数据库的数据的改变就应该是永久性的<br>3.事务控制<br>    1.显示提交：使用commit<br>    2.隐式提交：执行DDL,DCL或程序正常退出<br>    3.显示回滚：使用rollback<br>    4.自动回滚：程序异常或正常退出<br>4.oracle 自动提交<br>    1.设置自动提交：set autocommit on<br>    2.update delete</p><h3 id="数据库原理知识"><a href="#数据库原理知识" class="headerlink" title="数据库原理知识"></a>数据库原理知识</h3><p>SQL语句由如下命令组成：</p><ol><li>数据定义语言（DDL）:包括create(创建)、alter（修改）、drop（删除）命令等</li><li>数据操纵语言（DML）:包括insert、update、delete、select命令等</li><li>数据查询语言（DQL）:包括基本查询语句、Order By子句、Group By子句等</li><li>数据控制语言（DCL）:grant(授权)、revoke（撤销）命令</li><li>事务控制语言（TCL）:包括commit（提交）、savepoint（保存点）、rollback（回滚）命令。 </li></ol><p>Mysql的约束有五种：主键，外键，非空，默认，检查（mysql没有实现）</p><p>存储过程： 一些SQL的集合,执行速度快,执行后会存储在数据库中,方便以后调用<br> 索引： 加快查询速度,不过,但索引的创建有一定的限速,超过了就会减慢降低效率<br> 视图： 视图有点像快照,可以用来查看复杂的结构,它是一张虚表,只能用于做查询用<br> 触发器： 用于保证主、外键的安全性，是隐式调用的，主要是行级触发，语句触发和替代触发器。</p><p>各自的优点：</p><ul><li>存储过程：方便调用，整体化</li><li>索引：优化搜索，对于大量数据，能减少很多时间</li><li>视图：方便交叉查看多个表的数据</li><li>触发器：方便多个表的数据一致</li></ul><h3 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h3><ol><li><p>持久数据就是将数据保存到数据库。数据持久化就是将内存中的数据模型转换为存储模型,以及将存储模型转换为内存中的数据模型的统称;数据模型可以是任何数据结构或对象模型,存储模型可以是关系模型、ＸＭＬ、二进制流等;</p></li><li><p>瞬时状态:保存在内存的程序数据，程序退出后，数据就消失了，称为瞬时状态</p><p>持久状态:保存在磁盘上的程序数据，程序退出后依然存在，称为程序数据的持久状态</p><p>持久化:将程序数据在瞬时状态和持久状态之间相互转换的机制</p></li><li><p>为什么要持久化？</p><p>持久化技术封装了数据访问细节，为大部分业务逻辑提供面向对象的API。</p><ol><li>通过持久化技术可以减少访问数据库数据次数，增加应用程序执行速度；</li><li>代码重用性高，能够完成大部分数据库操作；</li><li>散耦合，使持久化不依赖于底层数据库和上层业务逻辑实现，更换数据库时只需修改配置文件而不用修改代码。</li></ol></li></ol><h3 id="Java持久化技术中三层架构搭建"><a href="#Java持久化技术中三层架构搭建" class="headerlink" title="Java持久化技术中三层架构搭建"></a>Java持久化技术中三层架构搭建</h3><ol><li>创建数据库，数据表</li><li>创建java项目，添加数据库jar包</li><li>分包：数据访问层dao、业务逻辑层service、界面层ui、实体类</li><li>创建实体类：用于三层包之间的数据传递</li><li>创建DBHelper类：执行SQL语句</li><li>创建Dao类：拼写SQL语句，交给DBHelper类来执行</li><li>创建业务逻辑Service类</li><li>创建界面UI类</li><li>测试运行</li><li>在调试模式下单步运行程序，观察三层间调用过程。</li></ol><h3 id="原生JDBC操作数据库的步骤"><a href="#原生JDBC操作数据库的步骤" class="headerlink" title="原生JDBC操作数据库的步骤"></a>原生JDBC操作数据库的步骤</h3><ol><li>注册数据库驱动</li><li>获取数据库连接</li><li>获取发送执行sql的对象</li><li>定义SQL语句</li><li>执行sql并返回结果</li><li>打印执行结果</li><li>关闭资源。</li></ol><h3 id="MySQL与Oracle区别"><a href="#MySQL与Oracle区别" class="headerlink" title="MySQL与Oracle区别"></a>MySQL与Oracle区别</h3><p>相同点：都是目前比较流行的关系型数据库</p><p>不同点：</p><pre><code>1. Mysql里可以用双引号包起字符串，Oracle里只可以用单引号包起字符串。   2. Mysql可以设置自增，oracle不支持自增，但可以通过创建自增的序列号来完成自动增长。            3. mysql对sql语句的扩展性和灵活性比oracle要好，比如limit功能，insert可以一次插入多条数据。         4. mysql默认自动提交，oracle需要手动提交。                5. Oracle是大型数据库而Mysql是中小型数据库，Oracle市场占有率达40%，Mysql只有20%左右，同时Mysql是开源的而Oracle价格非常高。               6. Oracle支持大并发，大访问量，是OLTP(On-Line Transaction Processing联机事务处理系统)最好的工具。                      7. Mysql的非空字段也有空的内容，ORACLE里定义了非空字段就不容许有空的内容。                     8. MySQL处理翻页的SQL语句比较简单，用LIMIT开始位置，记录个数；Oracle处理翻页的SQL语句就比较繁琐。每个结果集只有一个ROWNUM字段标明它的位置，并且只能用ROWNUM&lt;100，不能用ROWNUM&gt;80。</code></pre><h3 id="DB2、Oracle、mysql和sql-server对比"><a href="#DB2、Oracle、mysql和sql-server对比" class="headerlink" title="DB2、Oracle、mysql和sql server对比"></a>DB2、Oracle、mysql和sql server对比</h3><h4 id="性能对比"><a href="#性能对比" class="headerlink" title="性能对比"></a>性能对比</h4><pre><code> 平台： Mysql、oracle、DB2都是可以在当下几乎所有主流平台上使用的； 而sql server只能在windows平台，没有丝毫的开放性； 安全性： sql server没有获得任何的安全认证； oracle、DB2都获得了最高级别的ISO标准认证； 性能： sql server在多用户时性能不佳 DB2适用于数据仓库和在线事物处理性能较高 oracle性能最高 可操作性：sql server操作简便，但只有GUI；oracle操作比较复杂，同时有GUI与命令行操作，windows.NT及unix下一样；DB2及mysql操作比较简单，同时有GUI与命令行，windows.NT及unix下一样；</code></pre><h4 id="table操作"><a href="#table操作" class="headerlink" title="table操作"></a>table操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1,增加列:相同  </span><br><span class="line">　　alter table test add mail varchar(128);  </span><br><span class="line">2,删除列:  </span><br><span class="line">　　oracle 与mysql相同:alter table test drop column mail;  </span><br><span class="line">　　db2 ：alter table test drop column mail 删除列后需要reorg table（重组表）  </span><br><span class="line">3,更改列名  </span><br><span class="line">　　oracle : alter table test rename column mail to mail2;  </span><br><span class="line">　　mysql : alter talbe test change mail mail2 varchar(128);  </span><br><span class="line">　　db2 : 不提供更改列名功能(解决办法同删除，或者通过建立一个新视图解决)  </span><br><span class="line">4,更改列类型  </span><br><span class="line">　　oracle :alter table test modify column (mail2 integer);  </span><br><span class="line">　　mysql :alter table test modify column mail2 integer;  </span><br><span class="line">　　db2 :alter table test alter mail varchar(256) 只可以加宽，不能更改类型  </span><br><span class="line">5,更改列的限制(主键、非空)  </span><br><span class="line">　　db2 :alter table test alter mail null&#x2F;not null;  </span><br><span class="line">　　mysql :alter table test modify mail2 varchar(29) not null;  </span><br><span class="line">　　oracle:alter table test modify mail2 null&#x2F;not null;</span><br></pre></td></tr></table></figure><h3 id="各种数据结构的优缺点比较"><a href="#各种数据结构的优缺点比较" class="headerlink" title="各种数据结构的优缺点比较"></a>各种数据结构的优缺点比较</h3><ol><li>数组： 优点：插入快，如果知道了下标可以非常快速的存取数据 缺点：查找，删除慢，大小固定  </li><li>有序数组 优点：比无序数组查找快 缺点：删除，插入慢，大小固定  </li><li>栈 优点：提供后进先出方式的存取 缺点：存取其他项很慢  </li><li>队列 优点：提供先进先出方式的存取 缺点：存取其他项很慢  </li><li>链表 优点：插入快，删除快 缺点：查找慢  </li><li>二叉树 优点：如果树保持平衡，查找，插入，删除都快 缺点：删除算法复杂  </li><li>红黑树 优点：查找，插入，删除都快，树总是平衡的 缺点：算法复杂  </li><li>哈希表 优点：如果关键字已知则存取，插入极快 缺点：删除慢，如果不知道关键字则存取很慢，对存储空间使用不充分  </li><li>堆 优点：插入，删除快，对最大数据项的存取很快 缺点：对其他数据项存取慢  </li><li>图 优点：对现实世界建模 缺点：有些算法慢且复杂  </li></ol><h3 id="MySQL四种常用存储引擎"><a href="#MySQL四种常用存储引擎" class="headerlink" title="MySQL四种常用存储引擎"></a>MySQL四种常用存储引擎</h3><ul><li>MyISAM存储引擎</li></ul><p>不支持事务、也不支持外键，优势是访问速度快，对事务完整性没有 要求或者以select，insert为主的应用基本上可以用这个引擎来创建表。</p><ul><li>InnoDB存储引擎</li></ul><p>该存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全。但是对比MyISAM引擎，写的处理效率会差一些，并且会占用更多的磁盘空间以保留数据和索引。<br>InnoDB存储引擎的特点：支持自动增长列，支持外键约束</p><ul><li>MEMORY存储引擎</li></ul><p>Memory存储引擎使用存在于内存中的内容来创建表。每个memory表只实际对应一个磁盘文件，格式是.frm。memory类型的表访问非常的快，因为它的数据是放在内存中的，并且默认使用HASH索引，但是一旦服务关闭，表中的数据就会丢失掉。</p><ul><li>MERGE存储引擎</li></ul><p>Merge存储引擎是一组MyISAM表的组合，这些MyISAM表必须结构完全相同，merge表本身并没有数据，对merge类型的表可以进行查询，更新，删除操作，这些操作实际上是对内部的MyISAM表进行的。</p><h3 id="MySQL优化"><a href="#MySQL优化" class="headerlink" title="MySQL优化"></a>MySQL优化</h3><ul><li>选择正确的存储引擎</li></ul><p>MySQL中的两个主要存储引擎是MyISAM和InnoDB。每个人都有自己的优点和缺点。</p><p>MyISAM很适合阅读量大的应用程序，但是当有大量的写操作时，它的扩展就不太好了。即使您正在更新一行中的一个字段，整个表也会被锁定，在该查询完成之前，任何其他进程都无法从中读取。MyISAM在计算SELECT(*)类型查询方面非常快速。</p><p>InnoDB往往是一个更复杂的存储引擎，在大多数小型应用程序中可能比MyISAM慢。但是它支持基于行的锁定，这样可以更好地扩展。它还支持一些更高级的特性，如事务。</p><ul><li>避免select * </li></ul><p>从表中读取的数据越多，查询就会变得越慢。它会增加磁盘操作所需的时间。用具体的字段代替“*”。</p><ul><li>建立合适的索引</li></ul><p>索引少了查询慢；索引多了占用空间大，执行增删改语句的时候需要动态维护索引，影响性能 选择率高（重复值少）且被where频繁引用需要建立B树索引；<br>一般join列需要建立索引；复杂文档类型查询采用全文索引效率更好；</p><p>在哪些字段使用索引？  </p><ol><li>较频繁的作为查询条件字段应该创建索引</li><li>唯一性太差的字段不适合创建索引，尽管频繁作为查询条件，例如gender性别字段</li><li>更新非常频繁的字段不适合作为索引</li><li>不会出现在where子句中的字段不该创建索引</li></ol><ul><li>查询数据Limit 1</li></ul><p>当只需要一条数据时使用LIMIT 1.我们作为开发者，是能够知道我们需要的数据的条数的，若已经知道结果只有一条的时候，一定要使用limit 1 ，这样一来，MySQL在查询到一条数据之后，会立即停止搜索，这会带来性能上的提升。</p><ul><li>使用enum而不是varchar</li></ul><p>实际上，enum保存的是tinyint类型，但其显示为字符串。用这个字段来作一些选项列表就变得很合适了。比如你有一个字段，比如“性别”、“状态”或“所属部门”等，你知道这些字段的值是固定且有限的，那么可以考虑使用enum。</p><ul><li><p>选取最适用的字段属性</p><ol><li>数据库中的表越小，查询速度越快。因此，在创建表的时候，为了获得更好的性能，可以将表中字段的宽度设得尽可能小。  </li><li>尽量把字段设置为NOTNULL，这样在将来执行查询的时候，数据库不用去比较NULL值。 </li><li>例如“省份”或者“性别”，我们可以将它们定义为enum类型。因为在MySQL中，enum类型被当作数值型数据来处理，而数值型数据被处理起来的速度要比文本类型快得多,提高数据库的性能。</li></ol></li><li><p>使用连接（JOIN）来代替子查询</p></li></ul><p>连接（JOIN）..之所以更有效率一些，是因为MySQL不需要在内存中创建临时表来完成这个逻辑上的需要两个步骤的查询工作。 </p><ul><li>JOIN字段建议建立索引</li></ul><p>一般JOIN字段都提前加上索引。</p><ul><li>尽可能的使用varchar/nvarchar代替char/nchar</li></ul><p>因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。<br>char是一种固定长度的类型，varchar则是一种可变长度的类型。 </p><ul><li>使用UNION ALL替代UNION</li></ul><p>UNION ALL的执行效率比UNION高，UNION执行时需要排重；UNION需要对数据进行排序。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis项目创建流程</title>
      <link href="/2020/04/13/Mybaits%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2020/04/13/Mybaits%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="MyBatis项目创建流程"><a href="#MyBatis项目创建流程" class="headerlink" title="MyBatis项目创建流程"></a>MyBatis项目创建流程</h3><h4 id="一、需求描述"><a href="#一、需求描述" class="headerlink" title="一、需求描述"></a>一、需求描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2.根据用户名模糊查询用户</span><br><span class="line">3.添加用户</span><br><span class="line">4.更新用户</span><br><span class="line">5.删除用户</span><br></pre></td></tr></table></figure><h4 id="二、创建数据库设计"><a href="#二、创建数据库设计" class="headerlink" title="二、创建数据库设计"></a>二、创建数据库设计</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">省略。。。</span><br></pre></td></tr></table></figure><h4 id="三、搭建开发环境"><a href="#三、搭建开发环境" class="headerlink" title="三、搭建开发环境"></a>三、搭建开发环境</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.创建Maven项目</span><br><span class="line">2.设置pom.xml分别导入mybatis、数据库和日志的jar包</span><br><span class="line">3.创建Mybatis的全局配置文件SqlMapConfig.xml</span><br><span class="line">3.1读取数据库db.properties信息</span><br><span class="line">3.2管理数据库连接池dataSource</span><br><span class="line">3.3加载映射文件mappers</span><br><span class="line">4.创建映射文件userInfo.xml</span><br><span class="line">5.创建日志文件</span><br></pre></td></tr></table></figure><h3 id="章节一：走进MyBatis"><a href="#章节一：走进MyBatis" class="headerlink" title="章节一：走进MyBatis"></a>章节一：走进MyBatis</h3><h4 id="任务1：根据用户id查询用户"><a href="#任务1：根据用户id查询用户" class="headerlink" title="任务1：根据用户id查询用户"></a>任务1：根据用户id查询用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.在Model包下创建POJO类UserInfoModel</span><br><span class="line">​2.在userInfo.xml中配置SQL映射</span><br><span class="line">​2.1根据id查询用户：id&#x3D;&quot;findUserInfoById&quot;</span><br><span class="line">​3.在test包中创建单元测试类Testshop</span><br><span class="line">​3.1定义会话工厂对象</span><br><span class="line">​3.2声明@Before注解在setUp方法中：加载SqlMapConfig.xml配置文件</span><br><span class="line">​3.3在setUp方法中：创建会话工厂，传入mybatis的配置文件信息</span><br><span class="line">​3.4在testFindUserInfoById方法：通过会话工厂得到SqlSession对象</span><br><span class="line">​3.5通过sqlSession.selectOne查询单条记录</span><br><span class="line">​3.6关闭SQLSession对象</span><br><span class="line">​4.运行打印单元测试，输出日志信息。</span><br></pre></td></tr></table></figure><h4 id="任务2：根据用户名模糊查询用户"><a href="#任务2：根据用户名模糊查询用户" class="headerlink" title="任务2：根据用户名模糊查询用户"></a>任务2：根据用户名模糊查询用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.创建映射声明ID,修改输入类型和sql语句</span><br><span class="line">​2.编写单元测试</span><br><span class="line">​2.1获取sqlSession对象</span><br><span class="line">​2.2通过sqlSession.selectList查询模糊用户</span><br><span class="line">​2.3关闭对象SQLSession</span><br><span class="line">​3.运行打印</span><br></pre></td></tr></table></figure><h4 id="任务3：添加用户"><a href="#任务3：添加用户" class="headerlink" title="任务3：添加用户"></a>任务3：添加用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.创建映射声明ID</span><br><span class="line">​1.1userInfo.xml中编写&lt;insert&gt;标签</span><br><span class="line">​1.2将新增记录的主键值保存到userInfo对象中</span><br><span class="line">​1.3编写插入语句insert</span><br><span class="line">​2.编写单元测试</span><br><span class="line">​1.获取SQLSession对象</span><br><span class="line">​2.new一个UserInfoModel类的对象model</span><br><span class="line">​3.model.set方法插入用户对象</span><br><span class="line">​4.SQLSession.insert执行插入</span><br><span class="line">​5.提交事务</span><br><span class="line">​6.获取用户信息主键</span><br><span class="line">​7.关闭会话</span><br><span class="line">​3.单元测试打印结果</span><br></pre></td></tr></table></figure><h4 id="任务4：UUID主键策略"><a href="#任务4：UUID主键策略" class="headerlink" title="任务4：UUID主键策略"></a>任务4：UUID主键策略</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.使用mysql的uuid()作为新增记录的主键值，uuid()能够生成长度为36位的永远不重复的字符串，避免了自增长主键值能被猜测的缺陷</span><br><span class="line">​2.通过select uuid()得到uuid字符串，将uuid字符串设置到userInfo对象的属性中，</span><br><span class="line">​3.在执行insert时，从userInfo对象中取出id的值</span><br></pre></td></tr></table></figure><h4 id="任务5：更新用户"><a href="#任务5：更新用户" class="headerlink" title="任务5：更新用户"></a>任务5：更新用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.创建映射声明ID</span><br><span class="line">​2.编写update语句</span><br><span class="line">​3.编写单元测试</span><br><span class="line">​3.1获取SQLSession对象</span><br><span class="line">​3.2插入用户对象</span><br><span class="line">​3.3执行sqlSession.update方法</span><br><span class="line">​3.4提交事务</span><br><span class="line">​3.5关闭会话</span><br><span class="line">​4.运行打印结果</span><br></pre></td></tr></table></figure><h4 id="任务6：删除用户"><a href="#任务6：删除用户" class="headerlink" title="任务6：删除用户"></a>任务6：删除用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.创建映射声明ID</span><br><span class="line">​2.delete语句</span><br><span class="line">​3.单元测试类</span><br><span class="line">​3.1获取SQLSession对象</span><br><span class="line">​3.2执行SQLSession.delete方法</span><br><span class="line">​3.3提交事务</span><br><span class="line">​3.4关闭会话</span><br><span class="line">​4.打印结果</span><br></pre></td></tr></table></figure><h3 id="章节二-Dao的开发"><a href="#章节二-Dao的开发" class="headerlink" title="章节二 Dao的开发"></a>章节二 Dao的开发</h3><h4 id="简介：Mybatis有两种方法开发dao-即原生dao开发和Mapper接口开发"><a href="#简介：Mybatis有两种方法开发dao-即原生dao开发和Mapper接口开发" class="headerlink" title="简介：Mybatis有两种方法开发dao,即原生dao开发和Mapper接口开发"></a>简介：Mybatis有两种方法开发dao,即原生dao开发和Mapper接口开发</h4><h4 id="一、原生Dao开发步骤"><a href="#一、原生Dao开发步骤" class="headerlink" title="一、原生Dao开发步骤"></a>一、原生Dao开发步骤</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">​1.给定需求：</span><br><span class="line">​任务1：实现用户id查询用户信息</span><br><span class="line">​任务2：查询所有用户</span><br><span class="line">​任务3：实现用户注册业务</span><br><span class="line">​2.在dao包下创建dao接口IUserInfoDao</span><br><span class="line">​2.1findByUserId()方法：根据主键查询用户</span><br><span class="line">​2.2insertUserInfo()方法：添加用户</span><br><span class="line">​3.创建dao实现类</span><br><span class="line">​3.1在impl包下创建dao接口实现类UserInfoDaoImpl</span><br><span class="line">​3.2定义会话工厂对象，该对象从外包部通过构造函数注入</span><br><span class="line">​3.3findUserInfoById()方法</span><br><span class="line">​3.3.1通过会话工厂获取SQLSession对象</span><br><span class="line">​3.3.2执行单条查询</span><br><span class="line">​3.3.3关闭会话</span><br><span class="line">​3.3.4返回查询结果</span><br><span class="line">​3.4insertUserInfo()方法：</span><br><span class="line">​3.4.1获取SQLSession对象</span><br><span class="line">​3.4.2执行添加方法</span><br><span class="line">​3.4.3提交事务</span><br><span class="line">​3.4.5获取用户主键信息</span><br><span class="line">​3.4.6关闭会话</span><br><span class="line">​4.单元测试</span><br><span class="line">​ 1.在test包下创建单元测试类TestDao</span><br><span class="line">​1.1定义会话工厂对象sqlSessionFactory</span><br><span class="line">​1.2注解@Before在setUp()方法：</span><br><span class="line">​1.2.1加载配置文件SqlMapConfig.xml</span><br><span class="line">​1.2.2InputStream获取</span><br><span class="line">​1.2.3创建会话工厂，传入mybatis的配置文件信息</span><br><span class="line">​1.2.4测试根据用户Id查询用户信息</span><br><span class="line">​1.2.5注解@Test在testFindUserInfoById()方法：</span><br><span class="line">​1.2.5.1向dao注入sqlSessionFactory</span><br><span class="line">​1.2.5.2执行userInfoDao.findUserInfoById()方法，返回model对象</span><br><span class="line">​1.2.5.3打印model对象</span><br><span class="line">​1.2.6测试用户注册业务，注解@Test在testInsertUser()方法：</span><br><span class="line">​1.2.6.1向dao注入sqlSessionFactory对象</span><br><span class="line">​1.2.6.2new一个model对象，set方法添加</span><br><span class="line">​1.2.6.3执行userInfo.insertUserInfo()方法。</span><br></pre></td></tr></table></figure><h4 id="二、Mapper接口开发dao"><a href="#二、Mapper接口开发dao" class="headerlink" title="二、Mapper接口开发dao"></a>二、Mapper接口开发dao</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.原理：Mapper接口（相当于dao接口），动态代理对象（相当于dao实现类）</span><br><span class="line">1.1定义Mapper.xml映射文件，文件名可自定义，建议表名称+Mapper结尾</span><br><span class="line">1.2定义Mapper接口，建议表名称+Mapper作为接口名</span><br><span class="line">2.定义Mapper.xml</span><br><span class="line">2.1在src&#x2F;main&#x2F;resoures目录下创建userinfoMapper.xml映射文件</span><br><span class="line">2.2&lt;!--规范1：namespace等于mapper接口路径 --&gt;</span><br><span class="line">2.3&lt;!--规范2：id的值必须和mapper接口中的方法名称相同  --&gt;</span><br><span class="line">2.4&lt;!--规范3：paramterType的类型必须与mapper接口方法的输入参数类型相同  --&gt;</span><br><span class="line">2.5&lt;!--规范4：resultType的类型必须与mapper接口方法的返回值类型相同  --&gt;</span><br><span class="line">3.将userinfoMapper.xml加载到SqlMapConfig.xml配置文件中</span><br><span class="line">4.定义Mapper接口</span><br><span class="line">4.1在src&#x2F;main&#x2F;java中创建包mapper,在该包下创建IUserInfoMapper接口，编写与映射声明id同名的方法</span><br><span class="line">4.2单元测试</span><br><span class="line">4.2.1创建TestMapper类</span><br><span class="line">4.2.2定义会话工厂</span><br><span class="line">4.2.3setUp()方法：加载Mybaits配置文件</span><br><span class="line">4.2.4创建会话工厂，传入配置文件信息</span><br><span class="line">4.2.5testFindUserInfoById方法：</span><br><span class="line">4.2.6获取SQLSession对象</span><br><span class="line">4.2.7创建IuserInfoMapper对象，自动生成IUserInfoMapper的代理对象</span><br><span class="line">4.2.8执行单个查询方法</span><br><span class="line">4.2.9关闭SQLSession</span><br><span class="line">4.2.10打印结果</span><br><span class="line">4.2.11剩余test方法类似</span><br></pre></td></tr></table></figure><h3 id="章节三-MyBatis配置详解"><a href="#章节三-MyBatis配置详解" class="headerlink" title="章节三 MyBatis配置详解"></a>章节三 MyBatis配置详解</h3><h4 id="一、全局配置SqlMapConfig"><a href="#一、全局配置SqlMapConfig" class="headerlink" title="一、全局配置SqlMapConfig"></a>一、全局配置SqlMapConfig</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1.配置内容和顺序（顺序固定，不能更改）</span><br><span class="line">​1.1properties(属性）</span><br><span class="line">​1.2settings(全局配置参数)</span><br><span class="line">​1.3typeAliases(类型别名）</span><br><span class="line">​1.4typeHandlers(类型处理器）</span><br><span class="line">​1.5objectFactory(对象工厂）</span><br><span class="line">​1.6plugins(插件）</span><br><span class="line">​1.7environments(环境集合属性对象）</span><br><span class="line">​1.8environment(环境子属性对象)</span><br><span class="line">​1.9transactionManager(事务管理）</span><br><span class="line">​1.10dataSource(数据源）</span><br><span class="line">​1.11mappers(映射器）</span><br><span class="line">​</span><br><span class="line"></span><br><span class="line">2.内容详解</span><br><span class="line">2.1properties(属性)：可以加载数据库配置信息，通过外部配置来方便动态替换。</span><br><span class="line">2.2settings(全局配置): settings是mybatis的全局配置参数，它是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为。</span><br><span class="line">2.3具体设置参数参考地址：</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_39805338&#x2F;article&#x2F;details&#x2F;80893558</span><br><span class="line">2.4typeAliases(类型别名): 类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余。</span><br><span class="line">           2.4.1针对POJO类型需要自定义别名：</span><br><span class="line">           2.4.1.1单个定义别名</span><br><span class="line">&lt;typeAlias alias&#x3D;&quot;userInfoModel&quot; type&#x3D;&quot;cn.itlaobing.mybatis.model.UserInfoModel&quot; &#x2F;&gt;</span><br><span class="line">2.4.1.2批量定义别名，扫描整个包下的类，别名为类名（首字母大小写都可以）</span><br><span class="line">&lt;package name&#x3D;&quot;cn.itlaobing.mybatis.model&quot; &#x2F;&gt;</span><br><span class="line">2.5typeHandlers(类型处理器)：无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 Java 类型。Mybatis提供的typeHandlers已经满足大部分开发需求，通常开发人员不需要自定义typeHandlers。</span><br><span class="line">2.6objectFactory（对象工厂）：MyBatis 每次创建结果对象的新实例时，它都会使用一个对象工厂（ObjectFactory）实例来完成。</span><br><span class="line">2.7plugins（插件）：MyBatis 允许你在已映射语句执行过程中的某一点进行拦截调用。</span><br><span class="line">2.8environments（配置环境）：MyBatis 可以配置成适应多种环境，这种机制有助于将 SQL 映射应用于多种数据库之中， 现实情况下有多种理由需要这么做。例如，开发、测试和生产环境需要有不同的配置；或者共享相同 Schema 的多个生产数据库， 想使用相同的 SQL 映射。许多类似的用例。</span><br><span class="line">2.9transactionManager（事务管理器）：在 MyBatis 中有两种类型的事务管理器（也就是 type&#x3D;”[JDBC|MANAGED]”）</span><br><span class="line">2.10dataSource（数据源）：dataSource 元素使用标准的 JDBC 数据源接口来配置 JDBC 连接对象的资源。</span><br><span class="line">2.11mappers（映射器）：mappers用于加载映射文件到全局配置文件中，Mybatis有四种加载配置文件的方法。分别是resource、url、class、package。其中resource方法一次加载一个映射文件，package方法可以实现批量加载，推荐使用。</span><br></pre></td></tr></table></figure><h4 id="二、输入映射parameterType"><a href="#二、输入映射parameterType" class="headerlink" title="二、输入映射parameterType"></a>二、输入映射parameterType</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Myabtis输入映射就是将java对象映射为SQL语句中列的值。</span><br><span class="line">输入映射形式包括：简单类型、POJO类型、VO类型、HashMap类型。</span><br><span class="line"></span><br><span class="line">1.简单类型：比如需求：根据id查询指定的用户</span><br><span class="line">   1.1mapper映射配置（int)</span><br><span class="line">   1.2mapper接口定义(int)</span><br><span class="line">   1.3单元测试</span><br><span class="line">   1.4运行打印</span><br><span class="line">2.POJO类型：比如需求：添加用户</span><br><span class="line">   2.1mapper映射配置(UserInfoModel)</span><br><span class="line">   2.2mapper接口定义(UserInfoModel)</span><br><span class="line">   2.3单元测试</span><br><span class="line">   2.4打印运行</span><br><span class="line">3.VO类型：它的作用是把某个指定页面的所有数据封装起来，一个VO对象中可以对应数据库中的多张表。PO是持久对象，PO类与表对应，PO类中的属性与表的列对应。比如需求：多条件查询用户。</span><br><span class="line">   3.1创建OrdersModel类</span><br><span class="line">   3.2创建UserInfoQueryVO类</span><br><span class="line">   3.2.1UserInfoModel的PO作为VO的属性</span><br><span class="line">   3.2.2OrderModel的PO作为VO的属性</span><br><span class="line">   3.3配置Mapper映射文件（UserInfoQueryVO)</span><br><span class="line">   3.4定义Mapper接口（UserInfoQueryVO)</span><br><span class="line">   3.5单元测试</span><br><span class="line">   3.6打印运行</span><br><span class="line">4.HashMap类型：比如需求：根据用户名和性别查询用户</span><br><span class="line">   4.1Mapper映射配置(HashMap)</span><br><span class="line">   4.2Mapper接口定义(HashMap)</span><br><span class="line">   4.3单元测试</span><br><span class="line">   4.4打印运行</span><br></pre></td></tr></table></figure><h4 id="三、输出映射resultType"><a href="#三、输出映射resultType" class="headerlink" title="三、输出映射resultType"></a>三、输出映射resultType</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">注意：POJO（Plain Ordinary Java Object）即普通Java类，具有一部分getter&#x2F;setter方法的那种类就可以称作POJO。</span><br><span class="line">Mybatis的输出映射就是将查询的结果映射为java对象。resultType可以把查询结果封装到pojo类型中，但必须pojo类的属性名和查询到的数据库表的字段名一致。</span><br><span class="line"></span><br><span class="line">1.简单类型输出映射：需求：查询userInfo表的记录数量</span><br><span class="line">   1.1Mapper映射配置（int)</span><br><span class="line">   1.2Mapper接口定义(int)</span><br><span class="line">   1.3单元测试</span><br><span class="line">   1.4运行打印</span><br><span class="line">2.POJO对象输出映射：需求：根据id查询指定用户</span><br><span class="line">   2.1Mapper映射配置（UserInfoModel)</span><br><span class="line">   2.2Mapper接口定义（UserInfoModel)</span><br><span class="line">   2.3单元测试</span><br><span class="line">   2.4打印运行</span><br><span class="line">3.POJO集合输出映射：需求：查询所有用户</span><br><span class="line">   3.1Mapper映射配置（UserInfoModel)</span><br><span class="line">   3.2Mapper接口定义（List&lt;UserInfoModel&gt;)</span><br><span class="line">   3.3单元测试</span><br><span class="line">   3.4打印运行</span><br><span class="line">4.HashMap类型输出映射：需求：查询所有用户</span><br><span class="line">   4.1Mapper映射配置（hasMap)</span><br><span class="line">   4.2Mapper接口定义(List&lt;hasMap&lt;String,String&gt;&gt;)</span><br><span class="line">   4.3单元测试</span><br><span class="line">   4.4打印运行</span><br></pre></td></tr></table></figure><h4 id="四、输出映射resultMap"><a href="#四、输出映射resultMap" class="headerlink" title="四、输出映射resultMap"></a>四、输出映射resultMap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">如果出现字段和属性不一致，则需要手动配置映射方式，这时使用resultMap。比如列名是“user_id”,而属性名是“userId”。</span><br><span class="line">注意：resultMap和resultType不能同时存在。另外还有resultMap 元素，它是 MyBatis 中最重要最强大的元素，它能提供级联查询，缓存等功能。</span><br><span class="line">4.1标签和属性分析：</span><br><span class="line">resultMap的id属性是它的唯一标识，是映射的POJO类</span><br><span class="line">&lt;id&gt;标签映射主键，&lt;result&gt;标签映射非主键</span><br><span class="line">property设置POJO的属性名称，column映射查询结果的列名称</span><br><span class="line">4.2定义resultMap:</span><br><span class="line">4.2.1需求：查询所有用户</span><br><span class="line">4.2.2定义resultMap</span><br><span class="line">4.2.3使用resultMap</span><br><span class="line">4.2.4Mapper接口定义</span><br><span class="line">4.2.5单元测试</span><br></pre></td></tr></table></figure><h4 id="五、动态SQL"><a href="#五、动态SQL" class="headerlink" title="五、动态SQL"></a>五、动态SQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1.定义：是指通过Mybatist提供的各种标签实现动态拼接SQL语句。</span><br><span class="line">   1.1where if:需求：多条件查询</span><br><span class="line">   1.2foreach:批量删除用户</span><br><span class="line">   1.2.1collection属性：表示被迭代的数组或集合</span><br><span class="line">   1.2.2item:表示被迭代的数组或集合中的每一个元素</span><br><span class="line">   1.2.3open:表示遍历前拼接的字符串</span><br><span class="line">   1.2.4separator:表示每个元素后的分隔符</span><br><span class="line">   1.2.5close：表示遍历后拼接的字符串</span><br><span class="line">   1.3Sql片段：是指将重复的Sql提取出来，进行单独定义的节点。使用时用include引用Sql片段即可，最终达到Sql片段重用的目的。</span><br></pre></td></tr></table></figure><h3 id="章节四-关联查询与缓存"><a href="#章节四-关联查询与缓存" class="headerlink" title="章节四 关联查询与缓存"></a>章节四 关联查询与缓存</h3><h4 id="关联查询"><a href="#关联查询" class="headerlink" title="关联查询"></a>关联查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">1. 表与表之间存在三种关系：分别是一对一、一对多、多对多。</span><br><span class="line"></span><br><span class="line">2. 关联查询：指在查询某张表数据的同时也查询与该表关联表中的数据。</span><br><span class="line"></span><br><span class="line">3. 缓存：指将已经查询出的对象缓存在内存中，再次查询该对象时从内存中直接获取，不再从数据库获取，从而提高程序的运行效率。</span><br><span class="line"></span><br><span class="line">4. 一对一关联查询：给出需求：查询所有订单分别是哪些顾客订购的。</span><br><span class="line"></span><br><span class="line">5. 有两种方法创建用于视图的VO类，一种是使用扩展列的VO类，另一种是使用扩展实体的POJO类。</span><br><span class="line"></span><br><span class="line">   5.1方法一：</span><br><span class="line">   5.1.1定义VO类：VO中的userInfo属性从父类继承，VO中的订单信息是类中的扩展列</span><br><span class="line">   5.1.2Mapper映射配置（一对一查询，使用resultType实现）</span><br><span class="line">   5.1.3Mapper接口定义</span><br><span class="line">   5.1.4单元测试</span><br><span class="line">   5.1.5打印运行</span><br><span class="line">   5.2方法二：</span><br><span class="line">   5.2.1定义VO类OrdersVo:将UserInfoModel类的对象作为OrdersModel类的属性， UserInfoModel类的对象用于存储订单的用户信息。</span><br><span class="line">   5.2.2Mapper映射配置（一对一查询，使用resultMap实现）</span><br><span class="line">   5.2.3定义resultMap：</span><br><span class="line">   5.2.3.1订单信息</span><br><span class="line">   5.2.3.2用户信息（使用assciation作用：当一个实体类封装另一个实体类时，就需要它，并且只能一对一使用</span><br><span class="line">   5.2.4Mapper接口定义</span><br><span class="line">   5.2.5单元测试</span><br><span class="line">   5.2.6打印运行</span><br><span class="line"></span><br><span class="line">6. 一对多关联查询：需求：查询订单及其订单明细和订单用户</span><br><span class="line"></span><br><span class="line">   6.1给出需求：查询订单及其订单明细和订单用户</span><br><span class="line">   6.2需求分析：一个订单可以购买多个商品，因此订单与商品之间是一对多的关系。</span><br><span class="line">   6.3步骤：</span><br><span class="line"></span><br><span class="line">   ​6.3.1定义POJO类</span><br><span class="line">   ​6.3.2Mapper映射配置（一对多）</span><br><span class="line">   ​6.3.3resultMap定义：</span><br><span class="line">   ​6.3.3.1extends:实现订单信息和用户信息从OrderAndUserInfoResultMap继承；</span><br><span class="line">   ​6.3.3.2collection：对关联查询到多条记录映射到一个list集合对象中（一对多使用）</span><br><span class="line">   ​6.3.3.3ofType:指定映射到list集合属性中pojo类型</span><br><span class="line">   ​6.3.4Mapper接口定义</span><br><span class="line">   ​6.3.5单元测试</span><br><span class="line">   ​6.3.6打印运行</span><br><span class="line"></span><br><span class="line">测试结果表明：一对多查询先于一对一查询执行打印出来。问题：为什么orderdetailModel不能改为orderdetailModels?其他却可以改？</span><br><span class="line">自己测试总结：private List&lt;OrderdetailModel&gt; orderdetailModel&#x3D;null;代码中OrderdetailModel不能加s,否则编译错误，orderdetailModel也不行，否则找不到getting方法。</span><br><span class="line"></span><br><span class="line">7. 多对多关联查询：需求：查询用户和用户购买的商品</span><br><span class="line"></span><br><span class="line">7.1需求：查询用户和用户购买的商品</span><br><span class="line">7.2需求分析：由于用户有多个，商品也有多个，用户与商品之间形成多对多的关系。</span><br><span class="line">7.3步骤：</span><br><span class="line">7.3.1定义POJO类UserInfoModel,封装OrdersModel类</span><br><span class="line">7.3.2定义OrdersModel类，封装UserInfoModel类和OrderdetailModel类</span><br><span class="line">7.3.3定义OrderdetailModel类，封装GoodsModel类</span><br><span class="line">7.3.4定义GoodsModel类</span><br><span class="line">7.3.5userinfoMapper.xml映射配置findUserAndGoods</span><br><span class="line">7.3.6resultMap定义UserAndGoodsResultMap</span><br><span class="line">7.3.7IUserInfoMapper接口定义findUserAndGoods方法</span><br><span class="line">7.3.8TestFindOrderAndOrderDetail.java单元测试</span><br><span class="line">7.3.9打印运行</span><br><span class="line"></span><br><span class="line">补充：级联的优点是获取关联数据十分方便，但是级联过多会增加数据库系统的复杂度，同时降低系统的性能。如果表 A 中有一个外键引用了表 B 的主键，A 表就是子表，B 表就是父表。当查询表 A 的数据时，通过表 A 的外键将表 B 的相关记录返回，这就是级联查询。例如，当查询一个人的信息时，同时根据外键（身份证号）将他的身份证信息返回。</span><br></pre></td></tr></table></figure><h4 id="关联查询总结"><a href="#关联查询总结" class="headerlink" title="关联查询总结"></a>关联查询总结</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">1.resultType:</span><br><span class="line">   作用：将查询结果按照sql列名和pojo属性名一致性映射到pojo中。</span><br><span class="line">   场合：常见一些明细记录的展示，比如用户购买商品明细，将关联查询信息全部展示在页面时，此时可直接使用resultType将每一条记录映射到pojo中，在前端页面遍历list（list中是pojo）即可。</span><br><span class="line">2.resultMap:</span><br><span class="line">   联合查询必须用resultMap，它可以使用association（联合）和 collection（集合）完成一对一和一对多高级映射。</span><br><span class="line">   2.1 association：</span><br><span class="line">   2.1.1作用：</span><br><span class="line">   实现一对一关联查询。将关联查询信息映射到一个pojo对象中。</span><br><span class="line">   2.1.2场合：</span><br><span class="line">   为了方便查询关联信息可以使用association将关联订单信息映射为用户对象的pojo属性中，比如：查询订单及关联用户信息。</span><br><span class="line"></span><br><span class="line">使用resultType无法将查询结果映射到pojo对象的pojo属性中，根据对结果集查询遍历的需要选择使用resultType还是resultMap。</span><br><span class="line"></span><br><span class="line">2.2collection：</span><br><span class="line"></span><br><span class="line">2.2.1作用：</span><br><span class="line">         实现一对多或多对多关联查询。将关联查询信息映射到一个list集合中。</span><br><span class="line">2.2.2场合：</span><br><span class="line">         为了方便查询遍历关联信息可以使用collection将关联信息映射到list集合中，比如：查询用户权限范围模块及模块下的菜单，可使用collection将模块映射到模块list中，将菜单列表映射到模块对象的菜单list属性中，这样的作的目的也是方便对查询结果集进行遍历查询。</span><br><span class="line">如果使用resultType无法将查询结果映射到list集合中。</span><br><span class="line"></span><br><span class="line">总结两者：</span><br><span class="line">resultMap可以实现延迟加载，resultType无法实现延迟加载。</span><br><span class="line">resultMap使用association和collection分别完成一对一和一对多高级映射（对结果有特殊的映射要求）。</span><br><span class="line"></span><br><span class="line">jdbc问题总结如下：</span><br><span class="line">1、数据库连接创建、释放频繁造成系统资源浪费，从而影响系统性能。如果使用数据库连接池可解决此问题。</span><br><span class="line">2、Sql语句在代码中硬编码，造成代码不易维护，实际应用中sql变化的可能较大，sql变动需要改变java代码。</span><br><span class="line">3、使用preparedStatement向占有位符号传参数存在硬编码，因为sql语句的where条件不一定，可能多也可能少，修改sql还要修改代码，系统不易维护。</span><br><span class="line">4、对结果集解析存在硬编码（查询列名），sql变化导致解析代码变化，系统不易维护，如果能将数据库记录封装成pojo对象解析比较方便。</span><br><span class="line"></span><br><span class="line">Mybatis解决jdbc编程的问题</span><br><span class="line">1、数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库连接池可解决此问题。</span><br><span class="line">解决：在SqlMapConfig.xml中配置数据连接池，使用连接池管理数据库链接。</span><br><span class="line">2、Sql语句写在代码中造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码。</span><br><span class="line">解决：将Sql语句配置在XXXXmapper.xml文件中与java代码分离。</span><br><span class="line">3、向sql语句传参数麻烦，因为sql语句的where条件不一定，可能多也可能少，占位符需要和参数一一对应。</span><br><span class="line">解决：Mybatis自动将java对象映射至sql语句，通过statement中的parameterType定义输入参数的类型。</span><br><span class="line">4、对结果集解析麻烦，sql变化导致解析代码变化，且解析前需要遍历，如果能将数据库记录封装成pojo对象解析比较方便。</span><br><span class="line">解决：Mybatis自动将sql执行结果映射至java对象，通过statement中的resultType定义输出结果的类型。</span><br></pre></td></tr></table></figure><h4 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.懒加载定义：MyBatis中的延迟加载，也称为懒加载，是指在进行表的关联查询时，使用Mybatis的懒加载特性可有效的减少数据库的压力。例如在进行一对多查询的时候，只查询出一方，当程序中需要多方的数据时，mybatis再发出sql语句进行查询，这样子延迟加载就可以的减少数据库压力。</span><br><span class="line">   Mybatis一对一关联的association和一对多的collection可以实现懒加载。懒加载时要使用resultMap，不能使用resultType。</span><br><span class="line"></span><br><span class="line">2.启动懒加载：</span><br><span class="line">   Mybatis默认没有打开懒加载配置，需要在SqlMapperConfig.xml中通过settings配置lazyLoadingEnabled、aggressiveLazyLoading来开启懒加载。</span><br><span class="line"></span><br><span class="line">3.懒加载总结：</span><br><span class="line">   3.1作用：</span><br><span class="line">   当需要查询关联信息时再去数据库查询，默认不去关联查询，提高数据库性能。</span><br><span class="line">   只有使用resultMap支持懒加载设置。</span><br><span class="line">   3.2使用场合：</span><br><span class="line">   当只有部分记录需要关联查询其它表的记录时，此时可按需延迟加载，需要关联查询时再向数据库发出sql，以提高数据库性能。</span><br><span class="line">   当全部需要关联查询信息时，此时不用懒加载，直接将关联查询信息全部返回即可，可使用resultType或resultMap完成映射。</span><br><span class="line">   3.3配置方法:</span><br><span class="line">   Collection和association都需要配置select和column属性。</span><br><span class="line">   两者配置方法相同。</span><br></pre></td></tr></table></figure><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><h4 id="一、为什么使用缓存"><a href="#一、为什么使用缓存" class="headerlink" title="一、为什么使用缓存"></a>一、为什么使用缓存</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.作用：为了减去数据库的压力，提高数据库的性能。缓存是使用Map集合缓存数据的。</span><br><span class="line"></span><br><span class="line">2.MyBatis 的缓存分为一级缓存和二级缓存。</span><br><span class="line">一级缓存是 SqlSession 级别的缓存</span><br><span class="line">二级缓存是 mapper 级别的缓存，多个 SqlSession 共享</span><br><span class="line">一级缓存的作用域是同一个SQLSession</span><br><span class="line">二级缓存的作用域是Mapper的同一个namespace</span><br><span class="line">Mybtais默认开启一级缓存，二级缓存需要在settings全局参数中配置开启。</span><br></pre></td></tr></table></figure><h4 id="二、一级缓存"><a href="#二、一级缓存" class="headerlink" title="二、一级缓存"></a>二、一级缓存</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一级缓存是 SqlSession 级别的缓存，是基于 HashMap 的本地缓存。当同一个 SqlSession 执行两次相同的 sql 语句时，第一次执行完后会将数据库中查询的数据写到缓存，第二次查询时直接从缓存获取不用去数据库查询。不同的 SqlSession 之间的缓存数据区域互不影响。</span><br><span class="line">Mybatis内部存储缓存使用一个HashMap缓存数据，key为hashCode+sqlId+Sql语句。Value为从查询出来映射生成的java对象。</span><br><span class="line">当 SqlSession 执行 insert、update、delete 操作并commit提交到数据库后会清空缓存区域，保证缓存中的信息是最新的。防止后续查询发生脏读（脏读：查询到过期的数据）。</span><br></pre></td></tr></table></figure><h4 id="三、二级缓存"><a href="#三、二级缓存" class="headerlink" title="三、二级缓存"></a>三、二级缓存</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">二级缓存是 mapper 级别的缓存，同样是基于 HashMap 进行存储，多个 SqlSession 可以共用二级缓存，其作用域是 mapper 的同一个 namespace。不同的 SqlSession 两次执行相同的 namespace 下的 sql 语句，会执行相同的 sql，第二次查询只会查询第一次查询时读取数据库后写到缓存的数据，不会再去数据库查询。</span><br><span class="line">Mybatis内部存储缓存使用一个HashMap缓存数据，key为hashCode+sqlId+Sql语句。Value为从查询出来映射生成的java对象。</span><br><span class="line">当 SqlSession 执行 insert、update、delete 操作并commit提交到数据库后会清空缓存区域，保证缓存中的信息是最新的。防止后续查询发生脏读（脏读：查询到过期的数据）。</span><br><span class="line"></span><br><span class="line">配置二级缓存：</span><br><span class="line">第一步：在SqlMapperConfig.xml中启用二级缓存：</span><br><span class="line">&lt;setting name&#x3D;&quot;cacheEnabled&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">第二步：POJO序列化，将所有POJO类实现序列化接口。</span><br><span class="line">第三步：在配置映射文件中添加&lt;cache&#x2F;&gt;,表示此mapper开启二级缓存</span><br></pre></td></tr></table></figure><h4 id="四、禁用二级缓存"><a href="#四、禁用二级缓存" class="headerlink" title="四、禁用二级缓存"></a>四、禁用二级缓存</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useCache&#x3D;&quot;false&quot;:表示禁用二级缓存，每次查询都会发出sql去查询，默认情况是true.</span><br></pre></td></tr></table></figure><h4 id="五、刷新缓存（清空缓存）"><a href="#五、刷新缓存（清空缓存）" class="headerlink" title="五、刷新缓存（清空缓存）"></a>五、刷新缓存（清空缓存）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在mapper的同一个namespace中，如果有其它insert、update、delete操作数据后需要刷新缓存，设置fulshCache&#x3D;”true”属性即可刷新缓存，默认是true.</span><br></pre></td></tr></table></figure><h4 id="六、缓存总结"><a href="#六、缓存总结" class="headerlink" title="六、缓存总结"></a>六、缓存总结</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">对于访问多的查询请求且用户对查询结果实时性不高时采用二级缓存技术降低数据库访问量，提高访问速度。例如耗时较高的统计分析sql。通过设置flushnternal（时间间隔），让其每隔一段时间自动清空缓存，比如设置为60分钟，24小时等。</span><br><span class="line">对于实时性要求较高的查询不能使用缓存，例如股票行情。</span><br></pre></td></tr></table></figure><h4 id="七、逆向工程"><a href="#七、逆向工程" class="headerlink" title="七、逆向工程"></a>七、逆向工程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.定义：逆向工程是指根据数据库生成java代码，正向工程是指根据java代码生成数据库。</span><br><span class="line">MyBatis一个主要的特点就是需要程序员自己编写SQL，那么如果表太多的话，难免会很麻烦，所以MyBatis官方提供了一个逆向工程，可以针对单表自动生成MyBatis执行所需要的代码（包括po类，mapper.xml映射文件和Mapper接口等）。一般在实际开发中，常用的逆向工程方式是通过数据库的表生成代码。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客使用出错记录</title>
      <link href="/2020/04/12/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/04/12/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="点击标签、分类等菜单栏报错"><a href="#点击标签、分类等菜单栏报错" class="headerlink" title="点击标签、分类等菜单栏报错"></a>点击标签、分类等菜单栏报错</h3><pre><code>问题：点击分类菜单时出现“Cannot GET/xxxx”的错误  原因：没有初始化分类的子目录处理：在控制台输入，如：hexo new page &quot;categories&quot;，初始化分类目录       在控制台输入，如：hexo new page &quot;tags&quot;，初始化标签目录</code></pre><h3 id="生成的inde-md文件里需要配置"><a href="#生成的inde-md文件里需要配置" class="headerlink" title="生成的inde.md文件里需要配置"></a>生成的inde.md文件里需要配置</h3><pre><code>问题：初始化的inde.md文件并没有显示内容原因：因为生成的文件里没有type的设置，需要手动添加处理：  标签中index.md基本配置  title: tags    date: 2020-04-12 18:10:39    type: &quot;tags&quot;  分类中index.md基本配置  title: categories    date: 2020-04-12 18:11:07    type: &quot;categories&quot;  </code></pre><p>其余菜单项类似，生成后需要重新<code>hexo clean + hexo g +hexo s</code>,然后再次点开才能访问。</p><h3 id="设置music跳过渲染导致错误"><a href="#设置music跳过渲染导致错误" class="headerlink" title="设置music跳过渲染导致错误"></a>设置music跳过渲染导致错误</h3><p>由于之前设置音乐的插件是MetingJS的，需要跳过渲染才行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#跳过渲染</span><br><span class="line">skip_render: </span><br><span class="line">  - &quot;music&#x2F;**&quot;</span><br></pre></td></tr></table></figure><p>结果后期不知道怎么就在修改后重新hexo clean +hexo g +hexo d后面导致无法上传到github中；<br>报错显示gihub不能上传**.md文件，需要去掉跳过渲染music操作；<br>后面将MetingJS插件的代码换成网易云音乐的外链代码即可。  </p><p>MetingJS代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;2505260244&quot; &quot;netease&quot; &quot;song&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>网易云音乐外链代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;798 height&#x3D;310</span><br><span class="line"> src&#x3D;&quot;https:&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;0&amp;id&#x3D;2505260244&amp;auto&#x3D;0&amp;height&#x3D;430&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure><p>修改后本地服务可以查看音乐链表，然后重新hexo d部署上传到github服务就可以了。否则博客修改的内容和特效均无法显示，即使gihub上面已经修改了，但仍然无法显示。（注意：这是一个大坑）</p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux系统命令整理</title>
      <link href="/2020/04/12/Linux%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
      <url>/2020/04/12/Linux%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="常用的Linux命令"><a href="#常用的Linux命令" class="headerlink" title="常用的Linux命令"></a>常用的Linux命令</h3><pre><code>上线时需要用到的命令。备份：tar -cvf 20190923.tar ROOT解压：tar -xvf 20170630.tar ROOT查看进程：ps -fu [用户名]杀掉进程：kill -9 [进程号]清理缓存：rm -rf Catalina    提示：一定要在tomcat的work目录下执行此命令。重启项目：./startup.sh查看日志：tail -f catalina.out查找日志记录：vi Catalina端口被占用解决：    1.查看占用指定端口的进程：netstat -anp |grep 端口号  //注意监控状态为LISTEN表示已经被占用）    2.查看所有端口的占用情况:netstat -nultp    3.结束占用端口的进程:kill -9 进程pid    4.查看是否结束占用情况：netstat -anp |grep 80Java开发人员常用Linux命令1.    查找文件：find / -name filename.txt2.    查看tomcat程序是否运行：ps -ef|grep tomcat3.    查看端口8080的使用情况：netstat -tln | grep 80804.    查看进程：ps -fu [用户名]5.    终止进程：kill -9 [线程号]6.    查看文件，包含隐藏文件：ls -al7.    当前工作目录：pwd8.    复制文件：cp source dest9.    递归复制整个文件夹到自定义目录：cp -r sourceFolder targetFolder10.    创建目录：mkdir newfolder11.    删除目录：rmdir deleteEmptyFolder12.    删除文件包括其子文件:rm -rf deleteFile13.    使用超级管理员执行删除命令：sudo rm a.text14.    移动文件：mv temp/movefile/targetFolder15.    切换用户：su -username16.    修改文件权限：chmod 777 file.java17.    压缩文件：tar -czf test.tar.gz/test1/test218.    列出压缩文件列表：tar -tzf test.tar.gz19.    解压文件：tar -xvzf test.tar.gz20.    查看文件头10行：head -n 10 example.txt21.    查看文件尾10行：tail -n 10 example.txt22.    查看日志文件：tail -f example.log23.    启动Vi编辑器：vi24.    远程登录：ssh username@ip25.    远程拷贝：cp sourecFile romoteUserName@remoteIp:remoteAddr  26.    以兆为单位显示磁盘利用率：df -m27.    以G 为单位显示磁盘利用率:df -H28.    用来查看AIX 系统的，以G为单位显示磁盘使用情况:df -g</code></pre><h3 id="虚拟机安装linux系统CentOS-7的学习整理"><a href="#虚拟机安装linux系统CentOS-7的学习整理" class="headerlink" title="虚拟机安装linux系统CentOS 7的学习整理"></a>虚拟机安装linux系统CentOS 7的学习整理</h3><pre><code>Wind+R：在linux系统中是锁屏问题：给虚拟机联网（采用NAT模式）：参照地址：https://blog.csdn.net/weixin_44786530/article/details/89509875问题：如何给centos安装中文输入法：    目前只能在root超级用户打开terminal窗口：    输入命令安装：yum install ibus-libpinyin    打开ibus命令：ibus-setup    参照地址：https://www.cnblogs.com/gwmq/p/10504681.html    注意：安装好输入法需要重启客户机，否则设置ibus时候找不到输入法问题：普通虚拟用户如何打开命令窗口？</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+mypages搭建整合流程</title>
      <link href="/2020/04/10/Hexo+GithubPage%E6%90%AD%E5%BB%BA%E6%95%B4%E7%90%86/"/>
      <url>/2020/04/10/Hexo+GithubPage%E6%90%AD%E5%BB%BA%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="搭建个人博客踩坑记录："><a href="#搭建个人博客踩坑记录：" class="headerlink" title="搭建个人博客踩坑记录："></a>搭建个人博客踩坑记录：</h2><h2 id="访问博客地址github-io被拒绝"><a href="#访问博客地址github-io被拒绝" class="headerlink" title="访问博客地址github.io被拒绝"></a>访问博客地址github.io被拒绝</h2><p>问题：本来运行好好的，前段时间执行了添加路由的脚本.bat文件，导致hosts文件被修改，导致无法连接。可通过查看C:\Windows\System32\drivers\etc目录下的hosts文件，用cmd窗口ping+panyongkang.github.io,如果ip地址变成了本机的127.0.0.1,连接超时，说明地址被修改了。</p><p>解决办法：可通过<a href="http://ip.tool.chinaz.com/" target="_blank" rel="noopener">站长之家</a>查询到自己网站原来的ip地址为185.199.110.153，直接在hosts文件中添加185.199.110.153  panyongkang.github.io，然后在cmd窗口ping+panyongkang.github.io查看数据包丢失为0，说明已成功，网页又可以愉快的访问啦。</p><h3 id="整合个人博客与个人网页"><a href="#整合个人博客与个人网页" class="headerlink" title="整合个人博客与个人网页"></a>整合个人博客与个人网页</h3><pre><code>问题处理:之前把个人网页mypages放到了.deploy_git中，导致每次hexo g 再hexo d的时候删除了mypages,要把个人网页放在source中才能正常部署  问题：把readme.md放入source中，重新发布却生成了readme.html?  处理方法：    1. 找到hexo站点根目录下的_config.yml文件    2. 在skip_render后面添加README.md    3. 然后重新输入：        hexo clean        hexo g        hexo d  问题：添加自定义HTML页面，使页面不被渲染处理方法：在博客根目录的配置文件_config.yml文件里设置跳过渲染    #跳过渲染    skip_render:           - &quot;README.md&quot;                        - &quot;mypages/**&quot;</code></pre><blockquote><p>跳过渲染具体参考：<a href="https://blog.csdn.net/qq_40922859/article/details/100877777" target="_blank" rel="noopener" title="跳过渲染">https://blog.csdn.net/qq_40922859/article/details/100877777</a></p></blockquote><h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><p>参考地址：<a href="https://liuxiangyang.space/2020/02/01/00012/#%E6%B7%BB%E5%8A%A0-SSH-Key-%E5%88%B0-GitHub" target="_blank" rel="noopener">https://liuxiangyang.space/2020/02/01/00012/#%E6%B7%BB%E5%8A%A0-SSH-Key-%E5%88%B0-GitHub</a></p><pre><code>1.问题：hexo更换主题后出现问题：WARN No layout: index.html?      处理：只要把theme下的文件夹名称改为主题名称就显示正常了。    参考地址：https://blog.csdn.net/robot_starscream/article/details/955905732.问题：hexo d后 ERROR Deployer not found: git    处理：npm install --save hexo-deployer-git3.问题：安装npm install -g hexo-cli报错    处理：查看当前镜像：npm get registry    切换原来的镜像：npm config set registry https://registry.npmjs.org/      参考地址：https://blog.csdn.net/ShelleyLittlehero/article/details/83444703  4.问题：4000端口 被占用    处理：     方法一： netstat -ant |grep 4000查看    然后kill掉该进程    方法二：可以在_config.yml内加上    server:      port: 4001      compress: true      header: true    修改成4001端口    方法三：windows任务管理器 – 进程 – 找到 ‘Node.js’ 为前缀的进程名，然后主动关闭进程即可</code></pre><h3 id="hexo主题安装"><a href="#hexo主题安装" class="headerlink" title="hexo主题安装:"></a>hexo主题安装:</h3><p>参考地址：<a href="https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B" target="_blank" rel="noopener">https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B</a></p><pre><code>安装之后，执行命令如下：  清空缓存：hexo clean  重新生成datebase:hexo g  打开本地仓库服务：hexo s  上传到远程仓库：hexo d</code></pre><h3 id="发送文章到博客"><a href="#发送文章到博客" class="headerlink" title="发送文章到博客"></a>发送文章到博客</h3><pre><code>1. 找到md的文件，把它复制到你hexo博客文件夹 中 source 下的 _posts 中，默认只有一个 hello-world.md。  2. 复制完之后然后使用文本编辑器打开它，在第一行加上title，内容自定，如title: this is my first blog3. 接着在你博客站点文件夹下右键空白处，选择Git Bash Here，输入 hexo g (完整命令为hexo generate)，用于生成静态文件4. 然后 输入 hexo s(完整命令为hexo server)，用于启动服务器，主要用来本地预览；完成后 打开浏览器输入 localhost:4000，会发现多了你刚写的那篇博客5. 最后输入hexo d(hexo deploy)，用于将本地文件发布到github等git仓库上；6. 再次输入网址查看，就可以看到发布的文章了  问题：hexo d执行后发现本地未添加成功处理：在Hexo根目录的_config.yml中修改url为自己的github访问地址：https://panyongkang.github.io/注意：修改后本地可以看见发布的文章，但是github上却没有，Google浏览器需要ctrl+F5刷新一下就可以了。</code></pre><h3 id="Hexo可视化编写"><a href="#Hexo可视化编写" class="headerlink" title="Hexo可视化编写"></a>Hexo可视化编写</h3><pre><code>安装Hexo Adminnpm install --save hexo-admin  启动本地服务hexo s -d然后打开localhost:4000/admin/就可以在线编辑了  手动部署更新到githubhexo g -d 注意：更新发布后需要退出Git Bash窗口，否则github Pages上面无法更新自动部署：学习中。。。</code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo指令</title>
      <link href="/2020/04/10/Hexo%E6%8C%87%E4%BB%A4/"/>
      <url>/2020/04/10/Hexo%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>欢迎来到<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>！这是您的第一篇文章。查看<a href="https://hexo.io/docs/" target="_blank" rel="noopener">文档</a>以获取更多信息。如果您在使用时HEXO得到任何问题，你可以找到答案<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">故障排除</a>或<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">你</a>可以问我在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>上。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="建立新文章"><a href="#建立新文章" class="headerlink" title="建立新文章"></a>建立新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new 文章名称</span><br></pre></td></tr></table></figure><h3 id="创建新页面"><a href="#创建新页面" class="headerlink" title="创建新页面"></a>创建新页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page 页面名称</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="运行服务器"><a href="#运行服务器" class="headerlink" title="运行服务器"></a>运行服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server 简写：hexo s</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate 简写：hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy 简写：hexo d //若使用了豆瓣插件，不能再用hexo d简写</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="清除文件"><a href="#清除文件" class="headerlink" title="清除文件"></a>清除文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="获取豆瓣数据"><a href="#获取豆瓣数据" class="headerlink" title="获取豆瓣数据"></a>获取豆瓣数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban  &#x2F;&#x2F;若数据抓取不全时使用，默认hexo g时已经自动抓取</span><br></pre></td></tr></table></figure><h3 id="更新番剧数据"><a href="#更新番剧数据" class="headerlink" title="更新番剧数据"></a>更新番剧数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u &#x2F;&#x2F;在hexo g或 hexo deploy之前使用</span><br></pre></td></tr></table></figure><h3 id="删除番剧数据"><a href="#删除番剧数据" class="headerlink" title="删除番剧数据"></a>删除番剧数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><h3 id="生成关系网"><a href="#生成关系网" class="headerlink" title="生成关系网"></a>生成关系网</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo net &#x2F;&#x2F;每次hexo g之后需要hexo net生成页面并抓取标签数据</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础巩固</title>
      <link href="/2020/04/01/Java%E5%9F%BA%E7%A1%80%E5%B7%A9%E5%9B%BA/"/>
      <url>/2020/04/01/Java%E5%9F%BA%E7%A1%80%E5%B7%A9%E5%9B%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>虽然说框架满天飞，但打好地基很重要，整理一下基础知识，以备不时之需，毕竟好记性不如烂笔头，常回来看看老朋友。。。</p><hr><h3 id="Java的数据类型"><a href="#Java的数据类型" class="headerlink" title="Java的数据类型"></a>Java的数据类型</h3><ol><li><p>基本类型：long,int,byte,float,double,char</p></li><li><p>对象类型（类）： Long,Integer,Byte,Float,Double,String,其它一切java提供的，或者你自己创建的类。引用类型比较大小一定要用equals而不要用==。</p></li></ol><h3 id="基本数据类型的封装类"><a href="#基本数据类型的封装类" class="headerlink" title="基本数据类型的封装类"></a>基本数据类型的封装类</h3><table><thead><tr><th>数据类型</th><th>封装类/包装类</th></tr></thead><tbody><tr><td>boolean（布尔型）</td><td>Boolean</td></tr><tr><td>byte（字节型）</td><td>Byte</td></tr><tr><td>char（字符型）</td><td>Character</td></tr><tr><td>short（短整型）</td><td>Short</td></tr><tr><td>int（整型）</td><td>Integer</td></tr><tr><td>long（长整型）</td><td>Long</td></tr><tr><td>float（浮点型）</td><td>Float</td></tr><tr><td>double（双精度浮点型）</td><td>Double</td></tr></tbody></table><p><strong>什么叫包装类？</strong><br>在java中有时候的运算必须是两个类对象之间进行的，不充许对象与数字之间进行运算。所以需要有一个对象，这个对象把数字进行了一下包装，这样这个对象就可以和另一个对象进行运算了。byte: 八位整数 -128——127，可用来节省内存的使用。</p><p>short: 16位整数 -32768——32,767，也比较省内存。<br>int: 32位整数 -2,147,483,648——2,147,483,647，一般来说整数都够用了<br>long: 64位整数 -9,223,372,036,854,775,808—— 9,223,372,036,854,775,807，一般不需要用<br>float: 32位浮点，如果浮点需要节省内存用这个。<br>Double: 64位浮点，一般非整数浮点可用这个。</p><p>但是要记住float和double都不是精确的，如果要储存钱一类的必须精确的，用java.math.BigDecimal</p><h3 id="参数类型和返回值类型"><a href="#参数类型和返回值类型" class="headerlink" title="参数类型和返回值类型"></a>参数类型和返回值类型</h3><p>一个方法的返回值类型要是抽象类类型，那么就返回该抽象类的子类对象。<br>一个方法的返回值类型要是接口类型，那么就返回该接口类的子类对象。 </p><h3 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h3><p>局部变量：从属于方法或语句块，生命周期短，使用前必须先初始化赋值。<br>成员变量：从属于对象，生命周期较长，未赋值会自动被初始化。<br>静态变量：从属于类，生命周期最长。<br>在类中，使用static修饰的成员变量被称为静态成员变量（类变量）。<br>static修饰的变量和方法从属于类，普通变量和方法从属于对象的。  </p><p>Java中主要用final来定义一个常量。Final String AGE=18相当于age=18,常量都是大写，所以是AGE;<br>定义方法时传递的参数是形式参数，调用该方法时传递的参数是实际参数，实参的数据类型必须与形参一一对应。  </p><h3 id="用static修饰方法的好坏"><a href="#用static修饰方法的好坏" class="headerlink" title="用static修饰方法的好坏"></a>用static修饰方法的好坏</h3><p>在定义方法时不加static，在调用方法时就需要new该方法才能调用，如果在定义时加上static，就可以直接调用该方法而不需要new了。<br>好处：<br>1.当一个方法需要初始化加载或者经常被调用的时候可以加上 static<br>2.被 static 修饰的方法可以用类名直接调用，不用实例化一个对象后才调用<br>3.比如 person这个类里有一个方法 public static add () {} 那么可以使用 person.add();调用，当然也可以创建对象调用<br>比如 person p= new person();<br>p.add();调用<br>类加载器在加载这个类的时候就已经实例化了这个类  </p><p>坏处：初始化加载比较占内存，所以不经常用的方法不建议加 static 这个关键字  </p><p>方法重载：参数的个数、类型和顺序不同，都可以构成重载。方法中参数只有返回值不同、参数只有名称不同，都不构成重载。  </p><p>方法重写：子类继承父类后，子类重写父类的方法，相当于覆盖父类相同的方法，优先调用的是自己重写的方法。返回值类型小于等于父类。  </p><p>递归方法：自己调用自己，但要写递归头和递归体，否则陷入死循环，直到占满内容溢出为止。递归是很耗费时间和内存资源的，尽量不要使用，百度的爬虫就是递归，在一个页面不断点击进入下一个页面那种，一般使用迭代循环方法就能满足普通开发。  </p><p>面向对象：把属性（成员变量）和方法放入一个类里面，类里面抽象出来共同点就是面向对象。  </p><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><p>1.通过new关键字调用。<br>2.构造器有返回值，但不能定义返回值类型，即可以return，但不能返回值。<br>3.如果我们没有定义一个构造器，编译器会自动定义一个无参的构造函数。<br>4.构造方法名字必须要与类名相同。  </p><h3 id="会话跟踪技术"><a href="#会话跟踪技术" class="headerlink" title="会话跟踪技术"></a>会话跟踪技术</h3><pre><code>1.会话跟踪定义：从进入网站开始到退出网站结束或者关闭浏览器称为一次会话。2.开始标志：浏览器成功访问页面。3.结束标志：退出或关闭浏览器。4.作用：是指在会话过程中多次请求和响应之间共享数据的技术。5.五种实现会话跟踪方法5.1URL传参5.2通过“表单隐藏域”提交5.3cookie实现5.4内置对象session实现5.5内置对象application实现6.cookie定义：是一小段文本组成的，伴随着用户的请求和服务器的响应，在浏览器和服务器之间来回传递，保存在客户端。    6.1cookie的业务应用：        6.1.1记录上次访问时间        6.1.2猜你喜欢        6.1.3记住用户名7.session和cookie的区别：    7.1都是用来做会话跟踪    7.2session保存在服务端，cookie保存在客户端    7.3cookie的值只能是String类型，session的值是Object类型    7.4session是内置对象，cookie不是    7.5cookie不安全，session保存在服务端安全性较高8.内置对象application：    8.1application对象的生命周期从web应用程序启动开始一直到web容器关闭为止。9.作用域范围    application&gt;session&gt;request&gt;page</code></pre>]]></content>
      
      
      <categories>
          
          <category> 经验总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专业术语</title>
      <link href="/2020/03/10/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD/"/>
      <url>/2020/03/10/%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h2><p>脚本（Script），是使用一种特定的描述性语言，依据一定的格式编写的可执行文件。</p><h3 id="基本概述"><a href="#基本概述" class="headerlink" title="基本概述"></a>基本概述</h3><p>脚本语言又被称为扩建的语言, 或者动态语言, 是一种编程语言, 用来控制软件应用程序, 脚本通常是以文本 (ASCⅡ) 保存, 只是在被调用时进行解释或者编译。</p><p>打开Windows系统中常见的扩展名为.bat的批处理文件，会出现一个黑色窗口，若干白字迸发而出，这就是批处理文件，也就是脚本文件。</p><p>最常见的脚本语言有：JavaScript，ASP，JSP，PHP，SQL，Shell，Python等。</p><p>应用 Shell 脚本完成对数据库系统一些重要进程的监控以及系统开机服务的自动开启工作。比如服务器的启停工作。</p><h2 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a>网络爬虫</h2><p>网络爬虫（又被称为网页蜘蛛、网络机器人、蚂蚁、自动索引、模拟程序或者蠕虫），是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。</p><p>通俗的讲，爬虫就是能够自动访问互联网并将网站内容下载下来的的程序或脚本，类似一个机器人，能把别人网站的信息弄到自己的电脑上，再做一些过滤，筛选，归纳，整理，排序等等。</p><p>可以做爬虫的语言：PHP,JAVA,C#,C++,Python等。</p><p>Python进行爬虫开发是有其独特的优势，上手快，难度低，第三方插件很完善，开发难度低。这些优点是其他语言不能比拟的，所以Python是编写爬虫的首要语言。</p><h2 id="网络名词解释"><a href="#网络名词解释" class="headerlink" title="网络名词解释"></a>网络名词解释</h2><p><strong>域名与IP地址</strong></p><p>域名就是IP地址的一种形象化的表达方式。比如 “<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">www.baidu.com&quot;</a> 指的是域名，百度的IP地址是[115.239.210.27]，一般是使用域名登录网站，容易记忆。</p><p><strong>DNS（域名系统）：用来把机器名字转换成IP地址。</strong></p><p>IPv4长这样：192.168.1.1，255.255.255.255</p><p>IPv6长这样：2001:0DB8:02de:0000:0000:0000:0000:0e13</p><p>机器很喜欢这样的格式，换成二进制非常容易处理。但输入这么长串的IP地址非常不方便，因此需要域名来代替具体的某IP地址。但机器是不认识”<a href="http://www.baidu.com&quot;这些字母组成的域名，这时候就需要DNS服务器将&quot;www.baidu.com&quot;域名转换成对应的IP地址。" target="_blank" rel="noopener">www.baidu.com&quot;这些字母组成的域名，这时候就需要DNS服务器将&quot;www.baidu.com&quot;域名转换成对应的IP地址。</a></p><p>全球有很多域名服务器，用来存储从域名到IP地址的映射。我们每台终端，无论手机还是电脑，在联网的时候都会配置一个DNS地址，就是DNS服务器的IP地址。你填的那个8.8.8.8就是google公司设立的DNS服务器。在上网的时候电脑会去向这些DNS服务器查询域名对应的IP。</p><p><strong>Hosts是干什么用的？</strong></p><p>在互联网的早期，网络只有几台电脑。人们用hosts文件记录机器名字到IP的映射，后来网络的规模越来越大，hosts文件记录映射已经不可行了，所以发明了DNS，域名系统。但是hosts文件仍然保留在操作系统中，hosts文件的优先级高于DNS查询。操作系统首先会在hosts文件中找域名对应的IP地址，没有找到它才会去问DNS服务器。</p><p><strong>VPN（虚拟专用网）：VPN的本意是在公用网络上建立专用网络。</strong></p><p>设想你是一名公安民警，你出差在外住酒店，需要到公安内部网络查询某些资料。但是酒店的网络是公有网络，数据传输途中要经过酒店的路由，ISP的路由。中途任何有技术的人都可以看到你跟内部网络之间的明文通信。这时候需要在你和公安内部网络建立一条加密的专用信道。发送数据的时候加密，接收数据的时候解密，加解密的方式事先设定好。这样第三方看到加密过后的数据也无法理解其中的含义。</p><p>由于中国国情比较奇葩，发明了GFW(中国国家防火墙)这种东西，GFW是对中国政府在其管辖互联网内部建立的多套网络审查系统（包括相关行政审查系统）的称呼。</p><p>于此对应我们伟大的程序员发明了用VPN科学上谷歌的方法。如果你明文请求Google主机，GFW会直接重置连接。但是你在国外有个VPN代理服务器，代理服务器帮你请求Google；再把Google的响应用加密的方式转发给你。因为你跟VPN代理之间是加密传输，GFW不知道你访问的是Google，它不可能把所有发到国外的请求都重置掉，所以成功突破封锁。</p><p><strong>CDN是内容分发网络：目的是让用户能够更快速的得到请求的数据。</strong></p><ol><li>由于跨地区、跨网络运营商访问网站会有明显的壁垒，访问速度很慢。为了解决这个问题，有些机构会在一些关键地区、机房设立代理服务器（也就结点），这些节点上会缓存网站的部分内容，当用户访问网站时，就近选择合适的结点，从何提高网站的访问速度。</li><li>vpn和cdn都能对访问网站起到一定的加速作用。但vpn需要账号和密码，所以只用拥有账号和密码的用户才能使用，不是对所有访问网站的人都有加速作用；cdn是在各地设置结点，对绝大多数访问用户都有一定的加速作用。</li></ol><p><strong>服务器、虚拟空间、域名的关系</strong></p><p>打个比方：服务器就是房子，虚拟空间是房子里的房间，域名是房间的门牌号。</p><p><img src="/img/loading.gif" class="lazyload" data-src="https://upload-images.jianshu.io/upload_images/21121331-49b3948169449408.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700/format/webp"  alt></p><p>服务器优点：功能全，权限更高，并且可以绑定无限个域名（创建多个文件夹绑定就行）。</p><p>服务器缺点：费用昂贵，复杂的环境安装调试，需要更多的专业知识。</p><p>虚拟空间优点：费用低，可直接使用无需维护，服务商更多。</p><p>虚拟空间缺点：安全性依赖空间提供商，无法设置多个空间环境，直接访问日志困难。</p><p>域名：选择一个靠谱的域名商家就好，比如阿里云、腾讯云、百度云、华为云等等。如果对价格敏感，可以选择一些小服务商。</p><p><strong>虚拟主机、VPS、云服务器的区别</strong></p><p>首先：虚拟主机 &lt; VPS &lt; 云服务器</p><p>一、云虚拟主机，也常常被称为“虚拟空间”、“空间”;</p><p>虚拟主机无需用户部署网站环境，通常默认支持多种建站环境，用户直接上传建站程序安装就可以使用。由于虚拟机空间不支持连接到桌面进行其他操作，所以一般服务器租用商都会提供一个控制面板，可以进行域名绑定、文件解压缩等简单操作。</p><p>二、VPS主机</p><p>VPS主机是通过使用VPS(Virtual Private Server 虚拟专用服务器)技术，将一部服务器分割成多个虚拟专享服务器的优质服务，也就是由一台真实主机虚拟成多个小主机。每个VPS都可分配独立公网IP地址、独立操作系统、独立空间、独立内存、独立CPU资源等，可以远程连接到桌面，相当于一台功能完整的电脑;用户除了可以自行分配多个虚拟主机及无限企业邮箱外，还可以根据需求自行更换操作系统、安装程序、部署环境以及重启服务器，也就是说VPS主机相对虚拟主机来说更高一级，自由度更高;</p><p>三、云服务器</p><p>云服务器利用的是更先进的集群技术，在一组集群服务器上虚拟出多个类似独立服务器的部分，集群中每个服务器上都有云服务器的一个镜像，从而大大提高了虚拟服务器的安全稳定性，除非所有的集群内服务器全部出现问题，云服务器才会无法访问。所以，云服务器相对于VPS主机来说又更高一个级别，稳定性、安全性更高。</p><h2 id="暗网"><a href="#暗网" class="headerlink" title="暗网"></a>暗网</h2><p>整个互联网可以划分为明网、深网和暗网三个类别，请先看图：</p><p><img src="/img/loading.gif" class="lazyload" data-src="http://www.vcdvd.com/images/anwang.png"  alt></p><p>明网（Surface Web），是指能被普通搜索引擎检索到的网络以及网站，约占整个互联网的4%。网站内容可以用普通搜索引擎（比如 Google、百度、搜狗）检索到的网站。我们的大部分上网时间，都是停留在明网上。</p><p>与明网相对的，被称为深网（Deep Web），是指内容不能被普通搜索引擎检索到的网络，约占整个互联网的 96%。深网里面的内容，需要账号密码、访问权限等才可以访问。比如说，我们邮箱里的内容，存储在云服务里面的内容，公司的数据库，学术论文数据库等等，都属于深网的范畴。我们的一部分上网时间，停留在深网上。</p><p>在深网这个大范畴下，还有一部分网络被称为暗网（Dark Web），需要通过特定的<a href="https://www.torproject.org/zh-CN/download/languages/" target="_blank" rel="noopener">Tor浏览器</a> 、特殊授权或者特殊设置、特殊软件才能链接上的网络，普通的浏览器和搜索引擎无法进入。</p><p>暗网的特点是经过加密，隐秘性极强，不易追踪到真实的地理位置和使用者的身份。这也导致了暗网上充斥着许多非法交易，比如贩卖JH、DP、SFZ护照等隐私数据信息等等。</p>]]></content>
      
      
      <categories>
          
          <category> 经验总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机术语 </tag>
            
            <tag> 名词解读 </tag>
            
            <tag> 新鲜词汇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO进阶笔记</title>
      <link href="/2020/03/05/SEO%E8%BF%9B%E9%98%B6%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/05/SEO%E8%BF%9B%E9%98%B6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="优化搜索指令"><a href="#优化搜索指令" class="headerlink" title="优化搜索指令"></a>优化搜索指令</h2><ul><li><p>site: <a href="http://www.lanzous.com" target="_blank" rel="noopener">www.lanzous.com</a> +关键词</p><p>更精确搜索蓝奏云中需要的关键字的资源，过滤不必要的信息，适用于所有的搜索引擎。</p></li><li><p>inurl:关键词</p><p>搜索查询词出现在url中的页面，查询词支持中文和英文。</p></li><li><p>and</p><p>and表示数学里面‘与’的逻辑关系。搜索“关键词A and 关键词B”，则返回同时包含前后两个关键词的结果。可以使用加号<strong>+</strong>或者空格代替and。</p></li><li><p>or</p><p>与and对应，or表示数学里面‘或’的逻辑关系。搜索“关键词A or 关键词B”，则返回包含关键词A或关键词B的结果。</p></li><li><p>双引号“”</p><p>“关键词A”代表完全匹配关键词A，即所有的返回结果包括字数和字的顺序都完全匹配双引号中的内容。在百度上测试中英文的半角双引号都是支持的。</p></li><li><p>减号（-）</p><p>“关键词A -关键词B”，顾名思义，减号命令返回的结果应该是搜索包含关键词A且不包含关键词B的结果。</p></li><li><p>intitle</p><p>顾名思义，intitle命令返回的的结果是网页tltle中包含该关键词的页面，即网页的标题包含该关键词。</p></li><li><p>filetype</p></li></ul><p>这个命令在查询一些学术资料或者是文件资料的时候十分有用，filetype可以对搜索结果的文件类型做限制，支持常见的文档和文件格式，pdf、doc、xls、ppt、txt、swf。</p>]]></content>
      
      
      <categories>
          
          <category> 语法指令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
            <tag> 优化 </tag>
            
            <tag> 搜索引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考面经浓缩</title>
      <link href="/2020/03/02/%E8%80%83%E9%9D%A2%E7%BB%8F%E6%B5%93%E7%BC%A9/"/>
      <url>/2020/03/02/%E8%80%83%E9%9D%A2%E7%BB%8F%E6%B5%93%E7%BC%A9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>以下内容是面试过程中常见的问题，根据自己的理解和总结进行简要描述。  </p><blockquote><p>详细可参考链接：<a href="https://www.cnblogs.com/bailing80/p/11443409.html" target="_blank" rel="noopener">https://www.cnblogs.com/bailing80/p/11443409.html</a></p></blockquote><hr><h2 id="String-StringBuffer与StringBuilder的区别"><a href="#String-StringBuffer与StringBuilder的区别" class="headerlink" title="String,StringBuffer与StringBuilder的区别"></a>String,StringBuffer与StringBuilder的区别</h2><h3 id="操作字符串的区别"><a href="#操作字符串的区别" class="headerlink" title="操作字符串的区别"></a>操作字符串的区别</h3><p>Java中操作字符串的类有String,StringBuffer,StringBuilder。<br>运行速度快慢为：StringBuilder &gt; StringBuffer &gt; String</p><p>String是字符串常量，声明的是不可变的对象，每次执行都会生成新的string对象，是一个不断创建和回收的过程，因此导致执行速度很慢。<br>StringBuilder和StringBuffer都是字符串变量，所以对象是可变的。<br>在经常改变字符串内容的情况下最好不要使用 String。</p><p>String:适用于少量的字符串操作的情况<br>StringBuffer:线程安全，适合多线程环境使用，性能比StringBuilder低。<br>StringBuilder:非线程安全，适合单线程使用，性能高于StringBuffer。</p><p><strong>对于三者使用的总结：</strong><br>1.如果要操作少量的数据用 = String<br>2.单线程操作字符串缓冲区 下操作大量数据 = StringBuilder<br>3.多线程操作字符串缓冲区 下操作大量数据 = StringBuffer</p><h3 id="如何将字符串反转"><a href="#如何将字符串反转" class="headerlink" title="如何将字符串反转"></a>如何将字符串反转</h3><p>使用 StringBuilder 或者 stringBuffer 的 reverse() 方法。</p><p>示例代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; StringBuffer</span><br><span class="line">StringBuffer stringBuffer &#x3D; new StringBuffer();</span><br><span class="line">stringBuffer. append(&quot;abcdefg&quot;);</span><br><span class="line">System. out. println(stringBuffer. reverse()); &#x2F;&#x2F; gfedcba</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; StringBuilder</span><br><span class="line">StringBuilder stringBuilder &#x3D; new StringBuilder();</span><br><span class="line">stringBuilder. append(&quot;abcdefg&quot;);</span><br><span class="line">System. out. println(stringBuilder. reverse()); &#x2F;&#x2F; gfedcba</span><br></pre></td></tr></table></figure><h3 id="String-类的常用方法都有那些"><a href="#String-类的常用方法都有那些" class="headerlink" title="String 类的常用方法都有那些"></a>String 类的常用方法都有那些</h3><pre><code>indexOf()：返回指定字符的索引。charAt()：返回指定索引处的字符。replace()：字符串替换。trim()：去除字符串两端空白。split()：分割字符串，返回一个分割后的字符串数组。getBytes()：返回字符串的 byte 类型数组。length()：返回字符串长度。toLowerCase()：将字符串转成小写字母。toUpperCase()：将字符串转成大写字符。substring()：截取字符串。equals()：字符串比较。</code></pre><h2 id="值传递和引用传递有什么区别"><a href="#值传递和引用传递有什么区别" class="headerlink" title="值传递和引用传递有什么区别"></a>值传递和引用传递有什么区别</h2><p>值传递：指的是在方法调用时，传递的参数是按值的拷贝传递，传递的是值的拷贝，也就是说传递后就互不相关了。</p><p>引用传递：指的是在方法调用时，传递的参数是按引用进行传递，其实传递的引用的地址，也就是变量所对应的内存空间的地址。传递的是值的引用，也就是说传递前和传递后都指向同一个引用（也就是同一个内存空间）。</p><h2 id="集合框架Collection"><a href="#集合框架Collection" class="headerlink" title="集合框架Collection"></a>集合框架Collection</h2><h3 id="定义概述"><a href="#定义概述" class="headerlink" title="定义概述"></a>定义概述</h3><pre><code>定义：集合是存储元素个数不受限制、元素类型不受限制的数据存储结构。  概述：  List , Set, Map都是接口，前两个继承至Collection接口，Map为独立接口  Set下有HashSet，LinkedHashSet，TreeSet  List下有ArrayList，Vector，LinkedList  Map下有Hashtable，LinkedHashMap，HashMap，TreeMap  Collection接口下还有个Queue（队列）接口，与List、Set同级。  </code></pre><h3 id="接口总结"><a href="#接口总结" class="headerlink" title="接口总结"></a>接口总结</h3><ol><li><p>List接口：有序，有索引，可重复。</p><p> ArrayList：<br> 优点：底层数据结构是数组，查询快。<br> 缺点：线程不安全，增删慢。<br> Vector:<br> 优点：底层数据结构是数组，查询快，线程安全<br> 缺点：增删慢，效率低<br> LinkedList:<br> 优点：底层数据结构是链表，增删快，效率高<br> 缺点：查询慢，线程不安全  </p></li><li><p>Set接口：无序，无索引，不可重复（唯一）  </p><p> HashSet<br> 底层数据结构是哈希表。(无序,唯一)<br> 如何来保证元素唯一性?<br> 1.依赖两个方法：hashCode()和equals()  </p><p> LinkedHashSet<br> 底层数据结构是链表和哈希表。(FIFO插入有序,唯一)<br> 1.由链表保证元素有序<br> 2.由哈希表保证元素唯一</p><p> TreeSet<br> 底层数据结构是红黑树。(唯一，有序)<br> 1.如何保证元素排序的呢?<br> 自然排序<br> 比较器排序<br> 2.如何保证元素唯一性的呢?<br> 根据比较的返回值是否是0来决定</p></li><li><p>Map接口：存储一组键值对象，提供key到value的映射（key不能重复）<br> Map接口有三个比较重要的实现类，分别是HashMap、TreeMap和HashTable。<br> TreeMap是有序的，HashMap和HashTable是无序的。<br> Hashtable是同步的，线程安全的，效率低，不允许null值。<br> HashMap是不同步的，非线程安全的，效率高，允许null值。<br> HashMap：适用于Map中插入、删除和定位元素。<br> Treemap：适用于按自然顺序或自定义顺序遍历键(key)。</p></li><li><p>ArrayList和HashMap的区别</p><p> 4.1 ArrayList是有序，不同步，非线程安全，底层是数组<br> 4.2 HashMap是无序的，不同步，非线程安全，底层是Hash算法存储数据。</p><p> 使用场景：<br> 如果需要快速随机访问元素，应该使用ArrayList。需要键值对形式的数据时，应该使用HashMap。</p></li></ol><h2 id="什么时候使用序列化"><a href="#什么时候使用序列化" class="headerlink" title="什么时候使用序列化"></a>什么时候使用序列化</h2><p>对象、文件、数据，有许多不同的格式，很难统一传输和保存<br>序列化以后就都是字节流了，无论原来是什么东西，都能变成一样的东西，就可以进行通用的格式传输或保存，传输结束以后，要再次使用，就进行反序列化还原，这样对象还是对象，文件还是文件</p><h2 id="多线程的理解和应用"><a href="#多线程的理解和应用" class="headerlink" title="多线程的理解和应用"></a>多线程的理解和应用</h2><h3 id="并行和并发有什么区别"><a href="#并行和并发有什么区别" class="headerlink" title="并行和并发有什么区别"></a>并行和并发有什么区别</h3><p>并行：多个处理器或多核处理器同时处理多个任务。<br>并发：多个任务在同一个 CPU 核上，按细分的时间片交替执行，从逻辑上来看那些任务是同时执行。  </p><h3 id="线程和进程的区别"><a href="#线程和进程的区别" class="headerlink" title="线程和进程的区别"></a>线程和进程的区别</h3><ol><li>进程是系统进行资源调度和分配的基本单位，实现了操作系统的并发性。  </li><li>线程是进程的子任务，是CPU调度和分派的基本单位，用于保证程序的实时性，实现进程内部的并发。  </li><li>一个程序至少有一个进程，一个进程至少有一个线程，线程依赖于进程而存在。</li></ol><h3 id="守护线程是什么"><a href="#守护线程是什么" class="headerlink" title="守护线程是什么"></a>守护线程是什么</h3><p>守护线程是运行在后台的一种特殊进程。它独立于控制终端并且周期性地执行某种任务或等待处理某些发生的事件。在 Java 中垃圾回收线程就是特殊的守护线程。</p><h3 id="创建线程有哪几种方式"><a href="#创建线程有哪几种方式" class="headerlink" title="创建线程有哪几种方式"></a>创建线程有哪几种方式</h3><p>创建线程有三种方式：</p><p>继承 Thread 重写 run 方法；<br>实现 Runnable 接口；<br>实现 Callable 接口。  </p><p>runnable 和 callable 有什么区别？<br>runnable 没有返回值<br>callable 有返回值 可以看作是 runnable 的补充。  </p><h3 id="如何保证多线程的运行安全"><a href="#如何保证多线程的运行安全" class="headerlink" title="如何保证多线程的运行安全"></a>如何保证多线程的运行安全</h3><p>方法一：使用安全类，比如 Java. util. concurrent 下的类。<br>方法二：使用自动锁 synchronized。<br>方法三：使用手动锁 Lock。  </p><p>手动锁 Java 示例代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Lock lock &#x3D; new ReentrantLock();</span><br><span class="line">lock. lock();</span><br><span class="line">try &#123;</span><br><span class="line">    System. out. println(&quot;获得锁&quot;);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">    &#x2F;&#x2F; TODO: handle exception</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">    System. out. println(&quot;释放锁&quot;);</span><br><span class="line">    lock. unlock();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h2><p>参考：<a href="https://blog.csdn.net/CSDN_Terence/article/details/89513420" target="_blank" rel="noopener">https://blog.csdn.net/CSDN_Terence/article/details/89513420</a></p>]]></content>
      
      
      <categories>
          
          <category> 经验总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
